.class public Lcom/android/phone/InVTCallScreen;
.super Landroid/app/Activity;
.source "InVTCallScreen.java"

# interfaces
.implements Landroid/view/TextureView$SurfaceTextureListener;
.implements Landroid/view/View$OnClickListener;
.implements Landroid/view/View$OnLongClickListener;
.implements Lcom/android/phone/AdditionalCallerInfoAsyncQuery$OnQueryCompleteListener;
.implements Lcom/android/phone/CallTime$OnTickListener;
.implements Lcom/android/phone/ContactsAsyncHelper$OnImageLoadCompleteListener;
.implements Lcom/android/phone/IncomingCallWidget$OnTriggerListener;
.implements Lcom/android/phone/PopupMenu$OnMenuItemClickListener;
.implements Lcom/android/phone/VTCommonFunction;
.implements Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity$StateChangeListener;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/phone/InVTCallScreen$78;,
        Lcom/android/phone/InVTCallScreen$FocusedButton;,
        Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;,
        Lcom/android/phone/InVTCallScreen$MyOrientationListener;,
        Lcom/android/phone/InVTCallScreen$DualCameraTask;,
        Lcom/android/phone/InVTCallScreen$SwitchAnimationTask;,
        Lcom/android/phone/InVTCallScreen$BrightZoomTimer;,
        Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    }
.end annotation


# static fields
.field private static final DBG:Z

.field private static final VDBG:Z

.field protected static disconnectDueToLowBattery:Z

.field private static farend_pressed:Z

.field private static isFinishSwipe:Z

.field private static isVTManagerAlreadyStarted:Z

.field private static mBackPressed:Z

.field private static mCurrentOrientation:I

.field private static mHomePressed:Z

.field protected static mImageSelectedFromGalary:Landroid/graphics/Bitmap;

.field private static mIsSKTServiceMode:Z

.field private static mLongPressMenuEnabled:Z

.field private static mLongPressMoveCount:I

.field public static mPhoneVTVoiceRecorder:Lcom/android/phone/PhoneVTVoiceRecorder;

.field private static mStopCameraRequired:Z

.field protected static mVideoSelectedFromGalary:Landroid/net/Uri;

.field private static mWasRemoteFrameReceive:Z

.field private static mXMoveStart:I

.field private static mYMoveStart:I

.field private static nearend_pressed:Z

.field private static sDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

.field private static sOldDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;


# instance fields
.field private AcceptByVoiceCallNumber:Ljava/lang/String;

.field private CallStopLayoutImage:Landroid/widget/LinearLayout;

.field private final DIAL_TEXT_ANIMATION_FRAME:I

.field protected final DURINGCALL:I

.field private final END_CALL_CALLER_ID:I

.field private FallBackCallNumber:Ljava/lang/String;

.field private HAND_ADAPTABLE_OPERATION:Ljava/lang/String;

.field protected final INCOMING_CALL:I

.field private final INCOMING_CALL_CALLER_ID:I

.field private final INVALID_ID:I

.field private ImgProj:[Ljava/lang/String;

.field private final KEYGUARD_PACKAGE:Ljava/lang/String;

.field private final KEY_DEFAULT_WALLPAPER_RES_ID:Ljava/lang/String;

.field private KeyGuard:Z

.field protected final NONE_CALL:I

.field private ONE_HAND_DIRECTION:Ljava/lang/String;

.field private ONE_HAND_ENABLED:Ljava/lang/String;

.field protected final OUTGOING_CALL:I

.field private final OUTGOING_CALL_ANIMATION_FRAME:I

.field private final OUTGOING_CALL_CALLER_ID:I

.field final RTS_CS:I

.field final RTS_IDLE:I

.field final RTS_PS:I

.field final RTS_STATUS:I

.field final RTS_TOKEN:Ljava/lang/String;

.field final RTS_TOKEN_CS:Ljava/lang/String;

.field final RTS_TOKEN_IDLE:Ljava/lang/String;

.field final RTS_TOKEN_PS:Ljava/lang/String;

.field final RTS_TOKEN_STATUS:Ljava/lang/String;

.field final RTS_VALUES_COUNT:I

.field final RTS_VALUE_LOC:I

.field private SeekBarLayout:Landroid/widget/FrameLayout;

.field private VideoProj:[Ljava/lang/String;

.field actionbarHeight:I

.field private app:Lcom/android/phone/PhoneGlobals;

.field private autoCSP:Lcom/android/phone/IAutoCSP;

.field private bitmap:Landroid/graphics/Bitmap;

.field private brzoomCntDwn:Lcom/android/phone/InVTCallScreen$BrightZoomTimer;

.field private cameraEngine:Lcom/android/phone/CameraEngine;

.field private disconnectMsg:Landroid/os/Message;

.field private endCallBottomButtonFrame:Landroid/view/View;

.field private farEndImage:Landroid/widget/ImageView;

.field protected far_endsurhldr:Landroid/graphics/SurfaceTexture;

.field protected far_endsurview:Landroid/view/TextureView;

.field private filePath:Ljava/lang/String;

.field private focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

.field private frameAnimation:Landroid/graphics/drawable/AnimationDrawable;

.field protected incomingContactImage:Landroid/widget/ImageView;

.field private isAllOLC:Z

.field private isCallConnected:Z

.field public isCameraStarted:Z

.field private isCaptureFarEnd:Z

.field private isDialpadSurfaceViewSwipe:Z

.field protected isDualCameraStarted:Z

.field private isFarEndCapture:Z

.field private isFarEndRecordOrCaptureProgressive:Z

.field private isFrontCameraEnabled:Z

.field private isMO_Disconnect:Z

.field private isPresetImageEnabled:Z

.field private isPresetImageSelectedFromOption:Z

.field isRemoteModeControl:Z

.field public isSwitchCameraClicked:Z

.field private isVTCallAlreadyStop:Z

.field private keyguardLock:Landroid/app/KeyguardManager$KeyguardLock;

.field private mAcceptbyVoiceCallButton:Landroid/widget/Button;

.field private mActionBar:Landroid/app/ActionBar;

.field private mActionBarOptionmenu:Landroid/widget/ImageButton;

.field private mActiveSimCardId:I

.field private mAdapter:Landroid/bluetooth/BluetoothAdapter;

.field private mAllOlcOpened:Z

.field private mAlreadyHasActionCall:Z

.field private mAnswerButton:Landroid/view/View;

.field private mAnswerButtonTextView:Landroid/widget/TextView;

.field private mAudioFocusListener:Landroid/media/AudioManager$OnAudioFocusChangeListener;

.field private mAudioManager:Landroid/media/AudioManager;

.field private mBackgroundCall:Lcom/android/internal/telephony/Call;

.field private mBargeInRecognizer:Lcom/sec/android/app/IWSpeechRecognizer/BargeInRecognizer;

.field private mBeforeMakingCall:Z

.field protected mBlockImageView:Landroid/widget/ImageView;

.field private mBluetoothConnectionPending:Z

.field private mBluetoothConnectionRequestTime:J

.field private mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

.field private mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

.field private mBluetoothProfileServiceListener:Landroid/bluetooth/BluetoothProfile$ServiceListener;

.field protected mBrightSB:Landroid/widget/SeekBar;

.field mBrightSBChangeListener:Landroid/widget/SeekBar$OnSeekBarChangeListener;

.field private mBrightSBPosition:I

.field private mCM:Lcom/android/internal/telephony/CallManager;

.field private mCallBargeIn:Lcom/android/phone/CallBargeIn;

.field private mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

.field private mCallEndTime:Ljava/lang/String;

.field private mCallEndTimeBlinkCount:I

.field private mCallHandGripChangeObserver:Landroid/database/ContentObserver;

.field private mCallLostDialog:Landroid/app/AlertDialog;

.field private mCallStartTime:Landroid/widget/TextView;

.field private mCallTime:Lcom/android/phone/CallTime;

.field private mCallTimer:Landroid/widget/TextView;

.field private mCallerCity:Landroid/widget/TextView;

.field private mCallerInfoLayout:Landroid/widget/LinearLayout;

.field private mCallerName:Landroid/widget/TextView;

.field private mCallerNumber:Landroid/widget/TextView;

.field private mCaptureButton:Landroid/widget/Button;

.field private mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

.field private mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

.field private mCdnipNumber:Landroid/widget/TextView;

.field private mCircleTimeProgressView:Lcom/android/phone/CircleTimeProgressView;

.field private final mConfigurationChangedFilter:Landroid/content/IntentFilter;

.field private mConnectFarEndImageView:Landroid/widget/ImageView;

.field private mContactBufferId:Ljava/lang/StringBuffer;

.field private mContextMenuDailog:Landroid/app/Dialog;

.field mCreateButton:Landroid/widget/Button;

.field protected mDPM:Landroid/app/admin/DevicePolicyManager;

.field private mDTMFDialerLayout:Landroid/widget/LinearLayout;

.field private final mDefaultIMEI:Ljava/lang/String;

.field private final mDeviceManagerPolicyReceiver:Landroid/content/BroadcastReceiver;

.field private mDialPad:Landroid/widget/Button;

.field private mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

.field private mDialTextAnimationImage:Landroid/widget/ImageView;

.field private mDialTextAnimationList:[I

.field private mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

.field public mDialerEditText:Landroid/widget/EditText;

.field private mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

.field private mDialogVoiceCall:Landroid/app/Dialog;

.field private mDisplayNumber:Ljava/lang/String;

.field private mDualCameraOff:Landroid/widget/ImageButton;

.field protected mDualCameraOffIcon:Landroid/widget/ImageView;

.field private mDualCameraOffLayout:Landroid/widget/FrameLayout;

.field private mDuosSwitchCallDialog:Landroid/app/AlertDialog;

.field private mEasymodeTrigerListener:Lcom/android/phone/IncomingCallImageWidget$OnTriggerListener;

.field private mEnableEyeContact:I

.field private mEndCall:Landroid/widget/Button;

.field private mEndCallButtonFrame:Landroid/view/View;

.field private mFarEndArea:Landroid/widget/RelativeLayout;

.field private mFarEndLayout:Landroid/widget/LinearLayout;

.field private mFarEndRecordStopped:I

.field private mFarEndSurfaceRect:Landroid/graphics/Rect;

.field private mFirstFarEndViewClicked:Z

.field private mFirstNearEndViewClicked:Z

.field private mForegroundCall:Lcom/android/internal/telephony/Call;

.field private mGenericErrorDialog:Landroid/app/AlertDialog;

.field private mHandler:Landroid/os/Handler;

.field private mHasDelayedChangePhone:Z

.field private mHeadset:Landroid/widget/ToggleButton;

.field private mHide:Landroid/widget/Button;

.field private mHideDialPad:Landroid/widget/Button;

.field protected mImageCaptureAnimationImageView:Landroid/widget/ImageView;

.field private mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

.field private mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

.field public mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

.field private mIpCallButton:Landroid/widget/Button;

.field private mIsBatteryLow:Z

.field private mIsDestroyed:Z

.field private mIsFarEndTransparent:Z

.field private mIsForegroundActivity:Z

.field private mIsKeyLockScreen:Z

.field private mIsNoDataFromModem:Z

.field private mIsNoiseSuppressionSupported:Z

.field private mIsOneHandOption:Z

.field private mIsPowerOffAnimationStarted:Z

.field mIsRecordSupport:Z

.field private mIsShowEndCallScreenStarted:Z

.field private mIsShownVolumeBar:Z

.field private mIsSimTabUIUpdate:Z

.field private mIsSwitchCameraAnimationStarted:Z

.field mIsTabletDevice:Z

.field private mIsplayVideo:Z

.field private mKeyguardManager:Landroid/app/KeyguardManager;

.field private mLastIncomingCallActionTime:J

.field private mLeftArrow:Landroid/widget/ImageView;

.field private final mLowBatteryReceiver:Landroid/content/BroadcastReceiver;

.field private mLowMemoryStopRecording:Z

.field private mMRBTend:Z

.field private mMRBTstart:Z

.field private mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

.field private mMainLandLayoutNormalBitmap:Landroid/graphics/Bitmap;

.field private mMainLandLayoutNormalDrawable:Landroid/graphics/drawable/Drawable;

.field private mMainLayout:Landroid/widget/LinearLayout;

.field private mMainLayoutNormalBitmap:Landroid/graphics/Bitmap;

.field private mMainLayoutNormalDrawable:Landroid/graphics/drawable/Drawable;

.field private mMainMenuButton:Landroid/widget/ImageButton;

.field private mMenu:Landroid/view/Menu;

.field private mMenuFirstCreated:Z

.field private mMissingVoicemailDialog:Landroid/app/AlertDialog;

.field private mMmiStartedDialog:Landroid/app/Dialog;

.field private mMute:Landroid/widget/ToggleButton;

.field private mMuteEnable:Z

.field private mNearEndArea:Landroid/widget/RelativeLayout;

.field private mNearEndRecordStopped:I

.field private mNearEndSurfaceRect:Landroid/graphics/Rect;

.field private mNearEndViewClicked:Z

.field private mNeedShowCallLostDialog:Z

.field private mNoiseReductionImage:Landroid/widget/ImageView;

.field private mOneHandLeftLayout:Landroid/widget/LinearLayout;

.field private mOneHandRightLayout:Landroid/widget/LinearLayout;

.field private mOrientation:I

.field private mOrientationListener:Lcom/android/phone/InVTCallScreen$MyOrientationListener;

.field private mOtherPhone:Lcom/android/internal/telephony/Phone;

.field private final mOutgoingAnimation:[I

.field private mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

.field private final mOutgoingCallAnimationDuration:I

.field private mOutgoingCallAnimationList:[I

.field private mOutgoingImageScreenButton:Landroid/widget/Button;

.field private mOwnVideoReceivedCall:I

.field private mPauseInProgress:Z

.field private mPausePromptDialog:Landroid/app/AlertDialog;

.field private mPhone:Lcom/android/internal/telephony/Phone;

.field private mPopup:Lcom/android/phone/PopupMenu;

.field private final mPowerOffAnimationReceiver:Landroid/content/BroadcastReceiver;

.field private mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

.field private mPreviousPinup:Z

.field private mProgressDialog:Landroid/app/ProgressDialog;

.field protected mRP:Landroid/app/enterprise/RestrictionPolicy;

.field private final mReceiver:Landroid/content/BroadcastReceiver;

.field protected mRecordFarEndView:Landroid/widget/ImageView;

.field protected mRecordNearEndView:Landroid/widget/ImageView;

.field private mRecordingAlert:Z

.field private mRegisteredForPhoneStates:Z

.field private mRejMsgButton:Landroid/widget/Button;

.field private mRejectButton:Landroid/view/View;

.field private mRejectButtonTextView:Landroid/widget/TextView;

.field private mRejectCallWithMsgContent:Landroid/view/ViewGroup;

.field private mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

.field private mRejectCallWithMsgHandle:Landroid/widget/LinearLayout;

.field private mRejectCallWithMsgIconModeLayout:Landroid/view/ViewGroup;

.field private mRejectCallWithMsgTextModeLayout:Landroid/view/ViewGroup;

.field private mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

.field private mRightArrow:Landroid/widget/ImageView;

.field private mRingingCall:Lcom/android/internal/telephony/Call;

.field private final mRingingCallAnimationDuration:I

.field private mSC:Landroid/widget/Button;

.field private final mSDCardReceiver:Landroid/content/BroadcastReceiver;

.field mSaveButtonFrame:Landroid/view/View;

.field private mSeekBarSelection:I

.field private mSeekBarText:Landroid/widget/TextView;

.field mSendMsgButton:Landroid/widget/Button;

.field private mSimID:Landroid/widget/ImageView;

.field private mSlidingDrawerTouchID:I

.field private mSlidingTabTouchID:I

.field private mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

.field private mSocialStatus:Lcom/android/phone/SocialStatus;

.field private mSpk:Landroid/widget/ToggleButton;

.field private mStartRecordingButton:Landroid/widget/Button;

.field private mStopRecording:Landroid/widget/Button;

.field private mSuccessToastNotRequired:Z

.field private mSuppServiceFailureDialog:Landroid/app/AlertDialog;

.field private mSurfaceHandler:Landroid/os/Handler;

.field private mSwipeAnimationFar:Landroid/widget/ImageView;

.field private mSwipeAnimationNear:Landroid/widget/ImageView;

.field private mSwitchRecording:I

.field private mSwitchedViewAnimationImage:Landroid/widget/ImageView;

.field private final mTabListener:Landroid/app/ActionBar$TabListener;

.field private mTestCloseCheck:Z

.field private mToast:Landroid/widget/Toast;

.field private mToastExecuteOnceForDevicePolicyManager:Z

.field mUpdateButton:Landroid/widget/Button;

.field private mUpperTitleText:Landroid/widget/TextView;

.field private mUseSavedContactImage:Z

.field private mVTManager:Lsiso/vt/VTManager;

.field private mVTMultiWindowLayout:Landroid/widget/LinearLayout;

.field mVTPreviousState:Lcom/android/phone/VTPreviousState;

.field private mVTStatusText:Landroid/widget/TextView;

.field private mVTcalltype:I

.field private mVideoCallButton:Landroid/widget/Button;

.field private mVideoCallType:Z

.field private mVideoFileName:Ljava/lang/String;

.field private mVideoPlayer:Landroid/media/MediaPlayer;

.field private mVideoRecordTime:Landroid/widget/TextView;

.field private mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

.field private mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

.field private mVideoRecordTimeNearEnd:Landroid/widget/TextView;

.field private mVideocallFallbackLayout:Landroid/widget/LinearLayout;

.field private mVideofilePath:Ljava/lang/String;

.field mViewContact:Landroid/widget/Button;

.field private mVoiceCallButton:Landroid/widget/Button;

.field private mVoiceCallMessage:Ljava/lang/String;

.field private mVolumePanel:Landroid/widget/LinearLayout;

.field private mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

.field private final mVolumeSeekBarChangeListener:Lcom/sec/android/touchwiz/widget/TwSeekBar$OnTwSeekBarChangeListener;

.field private mVolumnButton:Landroid/widget/ImageButton;

.field private mWaitPromptDialog:Landroid/app/AlertDialog;

.field private mWaitingCallDialog:Landroid/app/AlertDialog;

.field private mWildPromptDialog:Landroid/app/AlertDialog;

.field private mWindowManager:Landroid/view/IWindowManager;

.field protected mZoomSB:Landroid/widget/SeekBar;

.field private mZoomSBPosition:I

.field private minitialnumber:Ljava/lang/String;

.field myListener:Lsiso/vt/VTManager$VTStackStateListener;

.field private nearEndImage:Landroid/widget/ImageView;

.field protected near_endsurhldr:Landroid/graphics/SurfaceTexture;

.field protected near_endsurview:Landroid/view/TextureView;

.field protected outgoingContactImage:Landroid/widget/ImageView;

.field private outgoingContactImageSmall:Landroid/widget/ImageView;

.field private phoneForCallNumber:Ljava/lang/String;

.field private prepareVideoText:Landroid/widget/TextView;

.field private previewEffectState:Lcom/android/phone/PreviewEffectState;

.field private previousFilePath:Ljava/lang/String;

.field private previousSelectedType:I

.field recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

.field private scramble:Lcom/android/phone/callsettings/ScrambleLib;

.field private sdcardState:Ljava/lang/String;

.field private selectImg:Z

.field private selectVideo:Z

.field surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

.field private timerHandler:Landroid/os/Handler;

.field whiteViewCameraAnimationFarEnd:Landroid/widget/ImageView;

.field whiteViewCameraAnimationNearEnd:Landroid/widget/ImageView;


# direct methods
.method static constructor <clinit>()V
    .locals 5

    .prologue
    const/4 v4, 0x0

    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 271
    sget v0, Lcom/android/phone/PhoneGlobals;->DBG_LEVEL:I

    if-lt v0, v1, :cond_0

    const-string v0, "ro.debuggable"

    invoke-static {v0, v2}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    if-ne v0, v1, :cond_0

    move v0, v1

    :goto_0
    sput-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    .line 273
    sget v0, Lcom/android/phone/PhoneGlobals;->DBG_LEVEL:I

    const/4 v3, 0x2

    if-lt v0, v3, :cond_1

    move v0, v1

    :goto_1
    sput-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    .line 578
    sput-object v4, Lcom/android/phone/InVTCallScreen;->mImageSelectedFromGalary:Landroid/graphics/Bitmap;

    .line 579
    sput-object v4, Lcom/android/phone/InVTCallScreen;->mVideoSelectedFromGalary:Landroid/net/Uri;

    .line 716
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->nearend_pressed:Z

    .line 755
    sput-boolean v1, Lcom/android/phone/InVTCallScreen;->isFinishSwipe:Z

    .line 809
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->farend_pressed:Z

    .line 818
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    .line 863
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->mWasRemoteFrameReceive:Z

    .line 872
    sget-object v0, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_REMOTE:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    sput-object v0, Lcom/android/phone/InVTCallScreen;->sDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    .line 873
    sget-object v0, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_REMOTE:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    sput-object v0, Lcom/android/phone/InVTCallScreen;->sOldDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    .line 877
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->mIsSKTServiceMode:Z

    .line 919
    sput v2, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    .line 1644
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->disconnectDueToLowBattery:Z

    .line 3987
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    .line 3989
    sput-boolean v1, Lcom/android/phone/InVTCallScreen;->mHomePressed:Z

    .line 10870
    sput-boolean v1, Lcom/android/phone/InVTCallScreen;->mLongPressMenuEnabled:Z

    .line 10872
    sput v2, Lcom/android/phone/InVTCallScreen;->mLongPressMoveCount:I

    .line 10874
    sput v2, Lcom/android/phone/InVTCallScreen;->mXMoveStart:I

    .line 10876
    sput v2, Lcom/android/phone/InVTCallScreen;->mYMoveStart:I

    .line 14008
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->mStopCameraRequired:Z

    return-void

    :cond_0
    move v0, v2

    .line 271
    goto :goto_0

    :cond_1
    move v0, v2

    .line 273
    goto :goto_1
.end method

.method public constructor <init>()V
    .locals 6

    .prologue
    const/4 v1, 0x2

    const/4 v5, -0x1

    const/4 v4, 0x1

    const/4 v3, 0x0

    const/4 v2, 0x0

    .line 256
    invoke-direct {p0}, Landroid/app/Activity;-><init>()V

    .line 265
    iput v5, p0, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    .line 266
    iput v5, p0, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    .line 279
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    .line 282
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    .line 284
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->incomingContactImage:Landroid/widget/ImageView;

    .line 287
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isDialpadSurfaceViewSwipe:Z

    .line 288
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mPreviousPinup:Z

    .line 290
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mFirstFarEndViewClicked:Z

    .line 291
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mFirstNearEndViewClicked:Z

    .line 292
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mNearEndViewClicked:Z

    .line 297
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->isFrontCameraEnabled:Z

    .line 301
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    .line 303
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mConnectFarEndImageView:Landroid/widget/ImageView;

    .line 305
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->prepareVideoText:Landroid/widget/TextView;

    .line 308
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    .line 309
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->far_endsurhldr:Landroid/graphics/SurfaceTexture;

    .line 311
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    .line 312
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    .line 314
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    .line 318
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->cameraEngine:Lcom/android/phone/CameraEngine;

    .line 320
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    .line 327
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 328
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationList:[I

    .line 329
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationImage:Landroid/widget/ImageView;

    .line 330
    iput v1, p0, Lcom/android/phone/InVTCallScreen;->DIAL_TEXT_ANIMATION_FRAME:I

    .line 332
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 333
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    .line 334
    const/4 v0, 0x5

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->OUTGOING_CALL_ANIMATION_FRAME:I

    .line 336
    const/4 v0, 0x5

    new-array v0, v0, [I

    fill-array-data v0, :array_0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingAnimation:[I

    .line 343
    iput v4, p0, Lcom/android/phone/InVTCallScreen;->INCOMING_CALL_CALLER_ID:I

    .line 344
    iput v1, p0, Lcom/android/phone/InVTCallScreen;->OUTGOING_CALL_CALLER_ID:I

    .line 345
    const/16 v0, 0xa

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->END_CALL_CALLER_ID:I

    .line 347
    const/16 v0, 0xc8

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCallAnimationDuration:I

    .line 348
    const/16 v0, 0xc8

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationDuration:I

    .line 350
    iput v4, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    .line 352
    const/4 v0, 0x4

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->RTS_VALUES_COUNT:I

    .line 353
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->RTS_STATUS:I

    .line 354
    iput v4, p0, Lcom/android/phone/InVTCallScreen;->RTS_IDLE:I

    .line 355
    iput v1, p0, Lcom/android/phone/InVTCallScreen;->RTS_CS:I

    .line 356
    const/4 v0, 0x3

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->RTS_PS:I

    .line 357
    const-string v0, ";"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->RTS_TOKEN:Ljava/lang/String;

    .line 358
    const-string v0, "Status"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->RTS_TOKEN_STATUS:Ljava/lang/String;

    .line 359
    const-string v0, "Idle"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->RTS_TOKEN_IDLE:Ljava/lang/String;

    .line 360
    const-string v0, "CS"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->RTS_TOKEN_CS:Ljava/lang/String;

    .line 361
    const-string v0, "PS"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->RTS_TOKEN_PS:Ljava/lang/String;

    .line 362
    iput v4, p0, Lcom/android/phone/InVTCallScreen;->RTS_VALUE_LOC:I

    .line 370
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    .line 371
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    .line 372
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    .line 373
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsSimTabUIUpdate:Z

    .line 532
    iput v5, p0, Lcom/android/phone/InVTCallScreen;->mOwnVideoReceivedCall:I

    .line 538
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mRegisteredForPhoneStates:Z

    .line 552
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    .line 573
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 589
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    .line 624
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsDestroyed:Z

    .line 625
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    .line 629
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mPauseInProgress:Z

    .line 639
    const-string v0, "357858010034783"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDefaultIMEI:Ljava/lang/String;

    .line 643
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->NONE_CALL:I

    .line 644
    iput v4, p0, Lcom/android/phone/InVTCallScreen;->INCOMING_CALL:I

    .line 645
    iput v1, p0, Lcom/android/phone/InVTCallScreen;->OUTGOING_CALL:I

    .line 646
    const/4 v0, 0x3

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->DURINGCALL:I

    .line 648
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->KeyGuard:Z

    .line 649
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mKeyguardManager:Landroid/app/KeyguardManager;

    .line 651
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    .line 653
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 664
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->CallStopLayoutImage:Landroid/widget/LinearLayout;

    .line 666
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingImageScreenButton:Landroid/widget/Button;

    .line 669
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    .line 689
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    .line 691
    const/4 v0, 0x4

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSBPosition:I

    .line 693
    const/4 v0, 0x4

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mZoomSBPosition:I

    .line 695
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVideoPlayer:Landroid/media/MediaPlayer;

    .line 697
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsplayVideo:Z

    .line 699
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mMuteEnable:Z

    .line 701
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mTestCloseCheck:Z

    .line 718
    iput v5, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarSelection:I

    .line 737
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    .line 742
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSwitchedViewAnimationImage:Landroid/widget/ImageView;

    .line 744
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mZoomSB:Landroid/widget/SeekBar;

    .line 750
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    .line 751
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarText:Landroid/widget/TextView;

    .line 759
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isDualCameraStarted:Z

    .line 765
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    .line 769
    new-array v0, v1, [Ljava/lang/String;

    const-string v1, "_data"

    aput-object v1, v0, v3

    const-string v1, "mime_type"

    aput-object v1, v0, v4

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->ImgProj:[Ljava/lang/String;

    .line 778
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    .line 782
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->previousFilePath:Ljava/lang/String;

    .line 783
    const/4 v0, 0x3

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->previousSelectedType:I

    .line 784
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->bitmap:Landroid/graphics/Bitmap;

    .line 785
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    .line 786
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mEndCallButtonFrame:Landroid/view/View;

    .line 789
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    .line 790
    new-array v0, v4, [Ljava/lang/String;

    const-string v1, "_data"

    aput-object v1, v0, v3

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->VideoProj:[Ljava/lang/String;

    .line 793
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    .line 794
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->sdcardState:Ljava/lang/String;

    .line 795
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isFarEndCapture:Z

    .line 797
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isSwitchCameraClicked:Z

    .line 798
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isCameraStarted:Z

    .line 801
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    .line 803
    iput v5, p0, Lcom/android/phone/InVTCallScreen;->mSwitchRecording:I

    .line 804
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->mFarEndRecordStopped:I

    .line 805
    iput v4, p0, Lcom/android/phone/InVTCallScreen;->mNearEndRecordStopped:I

    .line 815
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->disconnectMsg:Landroid/os/Message;

    .line 816
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isMO_Disconnect:Z

    .line 817
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isVTCallAlreadyStop:Z

    .line 828
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mLowMemoryStopRecording:Z

    .line 829
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mRecordingAlert:Z

    .line 831
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVideoFileName:Ljava/lang/String;

    .line 832
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mToastExecuteOnceForDevicePolicyManager:Z

    .line 834
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mBeforeMakingCall:Z

    .line 837
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mUseSavedContactImage:Z

    .line 846
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsNoiseSuppressionSupported:Z

    .line 849
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mContactBufferId:Ljava/lang/StringBuffer;

    .line 854
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    .line 858
    new-instance v0, Landroid/content/IntentFilter;

    const-string v1, "android.intent.action.CONFIGURATION_CHANGED"

    invoke-direct {v0, v1}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mConfigurationChangedFilter:Landroid/content/IntentFilter;

    .line 861
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    .line 891
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->FallBackCallNumber:Ljava/lang/String;

    .line 892
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->AcceptByVoiceCallNumber:Ljava/lang/String;

    .line 896
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mAllOlcOpened:Z

    .line 897
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isAllOLC:Z

    .line 898
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mMRBTstart:Z

    .line 899
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mMRBTend:Z

    .line 901
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsShowEndCallScreenStarted:Z

    .line 909
    const-string v0, "tablet_device"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    .line 910
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mIsRecordSupport:Z

    .line 916
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mMenuFirstCreated:Z

    .line 941
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsSwitchCameraAnimationStarted:Z

    .line 944
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 951
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsNoDataFromModem:Z

    .line 958
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    .line 959
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    .line 960
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsShownVolumeBar:Z

    .line 962
    const-string v0, "onehand_dialer_enabled"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_ENABLED:Ljava/lang/String;

    .line 963
    const-string v0, "onehand_direction"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_DIRECTION:Ljava/lang/String;

    .line 964
    const-string v0, "hand_adaptable_operation"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->HAND_ADAPTABLE_OPERATION:Ljava/lang/String;

    .line 967
    const-string v0, "keyguard_default_wallpaper_res_id"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->KEY_DEFAULT_WALLPAPER_RES_ID:Ljava/lang/String;

    .line 968
    const-string v0, "com.android.keyguard"

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->KEYGUARD_PACKAGE:Ljava/lang/String;

    .line 969
    iput v5, p0, Lcom/android/phone/InVTCallScreen;->INVALID_ID:I

    .line 971
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsKeyLockScreen:Z

    .line 974
    new-instance v0, Lcom/android/phone/InVTCallScreen$1;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$1;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    .line 1461
    new-instance v0, Lcom/android/phone/InVTCallScreen$2;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$2;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAudioFocusListener:Landroid/media/AudioManager$OnAudioFocusChangeListener;

    .line 1480
    new-instance v0, Lcom/android/phone/InVTCallScreen$3;

    new-instance v1, Landroid/os/Handler;

    invoke-direct {v1}, Landroid/os/Handler;-><init>()V

    invoke-direct {v0, p0, v1}, Lcom/android/phone/InVTCallScreen$3;-><init>(Lcom/android/phone/InVTCallScreen;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallHandGripChangeObserver:Landroid/database/ContentObserver;

    .line 1515
    new-instance v0, Lcom/android/phone/InVTCallScreen$4;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$4;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mReceiver:Landroid/content/BroadcastReceiver;

    .line 1565
    new-instance v0, Lcom/android/phone/InVTCallScreen$5;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$5;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSDCardReceiver:Landroid/content/BroadcastReceiver;

    .line 1579
    new-instance v0, Lcom/android/phone/InVTCallScreen$6;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$6;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDeviceManagerPolicyReceiver:Landroid/content/BroadcastReceiver;

    .line 1598
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsBatteryLow:Z

    .line 1600
    new-instance v0, Lcom/android/phone/InVTCallScreen$7;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$7;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mLowBatteryReceiver:Landroid/content/BroadcastReceiver;

    .line 1634
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsPowerOffAnimationStarted:Z

    .line 1635
    new-instance v0, Lcom/android/phone/InVTCallScreen$8;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$8;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPowerOffAnimationReceiver:Landroid/content/BroadcastReceiver;

    .line 2199
    new-instance v0, Lcom/android/phone/InVTCallScreen$9;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$9;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mTabListener:Landroid/app/ActionBar$TabListener;

    .line 3262
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->keyguardLock:Landroid/app/KeyguardManager$KeyguardLock;

    .line 9270
    new-instance v0, Lcom/android/phone/InVTCallScreen$29;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$29;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothProfileServiceListener:Landroid/bluetooth/BluetoothProfile$ServiceListener;

    .line 10878
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsFarEndTransparent:Z

    .line 11366
    new-instance v0, Lcom/android/phone/InVTCallScreen$39;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$39;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->myListener:Lsiso/vt/VTManager$VTStackStateListener;

    .line 12417
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isCaptureFarEnd:Z

    .line 12763
    new-instance v0, Lcom/android/phone/InVTCallScreen$62;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$62;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSBChangeListener:Landroid/widget/SeekBar$OnSeekBarChangeListener;

    .line 13810
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTimeBlinkCount:I

    .line 13820
    new-instance v0, Lcom/android/phone/InVTCallScreen$68;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$68;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->timerHandler:Landroid/os/Handler;

    .line 14057
    new-instance v0, Lcom/android/phone/InVTCallScreen$69;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$69;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    .line 14936
    sget-object v0, Lcom/android/phone/InVTCallScreen$FocusedButton;->NONE:Lcom/android/phone/InVTCallScreen$FocusedButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

    .line 15317
    new-instance v0, Lcom/android/phone/InVTCallScreen$70;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$70;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEasymodeTrigerListener:Lcom/android/phone/IncomingCallImageWidget$OnTriggerListener;

    .line 15461
    new-instance v0, Lcom/android/phone/InVTCallScreen$71;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$71;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBarChangeListener:Lcom/sec/android/touchwiz/widget/TwSeekBar$OnTwSeekBarChangeListener;

    return-void

    .line 336
    :array_0
    .array-data 0x4
        0xf4t 0x1t 0x2t 0x7ft
        0xf6t 0x1t 0x2t 0x7ft
        0xf8t 0x1t 0x2t 0x7ft
        0xfat 0x1t 0x2t 0x7ft
        0xfct 0x1t 0x2t 0x7ft
    .end array-data
.end method

.method private DisplayWaitingCallDialogWhenDoNotHaveHoldingCall()V
    .locals 0

    .prologue
    .line 8619
    return-void
.end method

.method private DisplayWaitingCallDialogWhenHaveHoldingCall()V
    .locals 9

    .prologue
    const v7, 0x7f090411

    .line 8624
    const-string v0, "InVTCallScreen: Waiting Call Dialog 2"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8627
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isConferenceCall(Lcom/android/internal/telephony/Call;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 8629
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getConnections()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    .line 8630
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x7f09040f

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {v0}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 8632
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/CallerInfo;

    .line 8634
    iget-object v1, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 8635
    if-nez v1, :cond_5

    .line 8636
    iget-object v0, v0, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    :goto_0
    move-object v1, v2

    .line 8660
    :goto_1
    new-instance v2, Landroid/app/AlertDialog$Builder;

    invoke-direct {v2, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    .line 8661
    const/4 v3, 0x3

    new-array v3, v3, [Ljava/lang/String;

    .line 8662
    const/4 v4, 0x0

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    aput-object v1, v3, v4

    .line 8663
    const/4 v1, 0x1

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v5

    invoke-virtual {v5, v7}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    aput-object v0, v3, v1

    .line 8664
    const/4 v0, 0x2

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v4, 0x7f090412

    invoke-virtual {v1, v4}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v1

    aput-object v1, v3, v0

    .line 8665
    new-instance v0, Lcom/android/phone/InVTCallScreen$28;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$28;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v2, v3, v0}, Landroid/app/AlertDialog$Builder;->setItems([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    .line 8702
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getLayoutInflater()Landroid/view/LayoutInflater;

    move-result-object v0

    const v1, 0x7f040105

    const/4 v3, 0x0

    invoke-virtual {v0, v1, v3}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v1

    .line 8703
    const v0, 0x7f0a03e9

    invoke-virtual {v1, v0}, Landroid/view/View;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    .line 8705
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    const v4, 0x7f090413

    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 8706
    invoke-virtual {v2, v1}, Landroid/app/AlertDialog$Builder;->setCustomTitle(Landroid/view/View;)Landroid/app/AlertDialog$Builder;

    .line 8707
    invoke-virtual {v2}, Landroid/app/AlertDialog$Builder;->show()Landroid/app/AlertDialog;

    .line 8708
    return-void

    .line 8638
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isConferenceCall(Lcom/android/internal/telephony/Call;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 8640
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/CallerInfo;

    .line 8642
    iget-object v1, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 8643
    if-nez v1, :cond_4

    .line 8644
    iget-object v0, v0, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    .line 8645
    :goto_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->getConnections()Ljava/util/List;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    .line 8646
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    const v4, 0x7f090410

    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    move-object v8, v1

    move-object v1, v0

    move-object v0, v8

    .line 8649
    goto/16 :goto_1

    .line 8651
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/CallerInfo;

    .line 8652
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/telephony/CallerInfo;

    .line 8653
    iget-object v3, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 8654
    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 8655
    if-nez v3, :cond_2

    .line 8656
    iget-object v3, v0, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    .line 8657
    :cond_2
    if-nez v2, :cond_3

    .line 8658
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    move-object v1, v3

    goto/16 :goto_1

    :cond_3
    move-object v0, v2

    move-object v1, v3

    goto/16 :goto_1

    :cond_4
    move-object v0, v1

    goto :goto_2

    :cond_5
    move-object v0, v1

    goto/16 :goto_0
.end method

.method private DuosAnswerVTCall()V
    .locals 9

    .prologue
    const v8, 0x7f090392

    const/4 v5, 0x3

    const/4 v2, 0x0

    const/4 v1, 0x1

    const/4 v4, 0x2

    .line 15725
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_0

    const-string v0, "DuosAnswerVTCall..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15732
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v0

    if-nez v0, :cond_6

    move v0, v1

    .line 15733
    :goto_0
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v3

    if-nez v3, :cond_7

    move v3, v1

    .line 15734
    :goto_1
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v6}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/internal/telephony/Call;->isRinging()Z

    move-result v6

    .line 15736
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v7}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v7

    invoke-static {v7}, Lcom/android/phone/PhoneUtils;->isConferenceCall(Lcom/android/internal/telephony/Call;)Z

    move-result v7

    if-nez v7, :cond_1

    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v7}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v7

    invoke-static {v7}, Lcom/android/phone/PhoneUtils;->isConferenceCall(Lcom/android/internal/telephony/Call;)Z

    move-result v7

    if-eqz v7, :cond_8

    .line 15740
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v3, 0x7f090020

    invoke-virtual {v0, v3}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v0

    move v3, v4

    .line 15769
    :goto_2
    if-nez v0, :cond_2

    .line 15770
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v0

    if-nez v0, :cond_10

    const-string v0, "SIM2"

    .line 15772
    :cond_2
    :goto_3
    new-instance v6, Landroid/app/AlertDialog$Builder;

    invoke-direct {v6, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    .line 15774
    if-eq v3, v4, :cond_3

    if-ne v3, v5, :cond_11

    .line 15776
    :cond_3
    new-array v3, v4, [Ljava/lang/String;

    .line 15777
    const-string v5, "%s"

    .line 15778
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v5

    const v7, 0x7f090394

    invoke-virtual {v5, v7}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v5

    const-string v7, "%s"

    invoke-virtual {v5, v7, v0}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v2

    .line 15779
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v5, 0x7f090393

    invoke-virtual {v2, v5}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v2

    const-string v5, "%s"

    invoke-virtual {v2, v5, v0}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v0

    aput-object v0, v3, v1

    .line 15780
    new-instance v0, Lcom/android/phone/InVTCallScreen$72;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$72;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v6, v3, v0}, Landroid/app/AlertDialog$Builder;->setItems([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    .line 15795
    invoke-virtual {p0, v8}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v6, v0}, Landroid/app/AlertDialog$Builder;->setTitle(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    .line 15796
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_4

    .line 15798
    :try_start_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    .line 15802
    :goto_4
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    .line 15804
    :cond_4
    invoke-virtual {v6}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    .line 15805
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, v4}, Landroid/view/Window;->addFlags(I)V

    .line 15806
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    .line 15841
    :cond_5
    :goto_5
    return-void

    :cond_6
    move v0, v2

    .line 15732
    goto/16 :goto_0

    :cond_7
    move v3, v2

    .line 15733
    goto/16 :goto_1

    .line 15741
    :cond_8
    if-eqz v0, :cond_9

    if-eqz v3, :cond_9

    .line 15744
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->getSIMName(I)Ljava/lang/String;

    move-result-object v0

    move v3, v1

    goto/16 :goto_2

    .line 15745
    :cond_9
    if-nez v0, :cond_a

    if-eqz v3, :cond_d

    :cond_a
    if-eqz v6, :cond_d

    .line 15748
    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 15749
    :goto_6
    if-eqz v0, :cond_c

    .line 15750
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/CallerInfo;

    .line 15751
    iget-object v3, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 15752
    if-nez v3, :cond_15

    .line 15753
    iget-object v0, v0, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    :goto_7
    move v3, v5

    .line 15757
    goto/16 :goto_2

    .line 15748
    :cond_b
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    goto :goto_6

    .line 15755
    :cond_c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->getSIMName(I)Ljava/lang/String;

    move-result-object v0

    goto :goto_7

    .line 15757
    :cond_d
    if-eqz v0, :cond_e

    .line 15760
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/CallerInfo;

    .line 15761
    iget-object v3, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 15762
    if-nez v3, :cond_14

    .line 15763
    iget-object v0, v0, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    :goto_8
    move v3, v4

    .line 15764
    goto/16 :goto_2

    .line 15765
    :cond_e
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_f

    const-string v0, "DuosAnswerVTCall():answercall..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15766
    :cond_f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->answerCall(Lcom/android/internal/telephony/Call;)Z

    goto/16 :goto_5

    .line 15770
    :cond_10
    const-string v0, "SIM1"

    goto/16 :goto_3

    .line 15808
    :cond_11
    if-ne v3, v1, :cond_13

    .line 15809
    const-string v1, "%s"

    .line 15810
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, v8}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v6, v1}, Landroid/app/AlertDialog$Builder;->setTitle(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    .line 15811
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x7f0907ca

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v2, "%s"

    invoke-virtual {v1, v2, v0}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v6, v0}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    .line 15812
    const v0, 0x7f09041a

    new-instance v1, Lcom/android/phone/InVTCallScreen$73;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$73;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v6, v0, v1}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    .line 15820
    const v0, 0x7f09041b

    new-instance v1, Lcom/android/phone/InVTCallScreen$74;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$74;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v6, v0, v1}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    .line 15825
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_12

    .line 15827
    :try_start_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    .line 15831
    :goto_9
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    .line 15833
    :cond_12
    invoke-virtual {v6}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    .line 15834
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, v4}, Landroid/view/Window;->addFlags(I)V

    .line 15835
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitingCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    goto/16 :goto_5

    .line 15839
    :cond_13
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_5

    const-string v0, "DuosAnswerVTCall():NO dialog created..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_5

    .line 15828
    :catch_0
    move-exception v0

    goto :goto_9

    .line 15799
    :catch_1
    move-exception v0

    goto/16 :goto_4

    :cond_14
    move-object v0, v3

    goto/16 :goto_8

    :cond_15
    move-object v0, v3

    goto/16 :goto_7
.end method

.method private DuosVTPhoneSwitch()V
    .locals 5

    .prologue
    const/4 v4, 0x2

    .line 15844
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_0

    const-string v0, "DuosVTPhoneSwitch..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15847
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_2

    .line 15848
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->displayCallScreen()V

    .line 15849
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/Call$State;->INCOMING:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v1, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/Call$State;->INCOMING:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v1, :cond_1

    .line 15850
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-virtual {v0, v1}, Lcom/android/phone/PhoneGlobals;->getRinger(Lcom/android/internal/telephony/Phone;)Lcom/android/phone/Ringer;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/Ringer;->stopRing()V

    .line 15851
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-virtual {v0, v1}, Lcom/android/phone/PhoneGlobals;->getRinger(Lcom/android/internal/telephony/Phone;)Lcom/android/phone/Ringer;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/Ringer;->isRinging()Z

    move-result v0

    if-nez v0, :cond_1

    .line 15852
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-virtual {v0, v1}, Lcom/android/phone/PhoneGlobals;->getRinger(Lcom/android/internal/telephony/Phone;)Lcom/android/phone/Ringer;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/Ringer;->ring()V

    .line 15901
    :cond_1
    :goto_0
    return-void

    .line 15855
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_3

    .line 15857
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->changePhone(Lcom/android/internal/telephony/Phone;)V

    goto :goto_0

    .line 15863
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v0

    if-nez v0, :cond_5

    .line 15864
    const/4 v0, 0x1

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->getSIMName(I)Ljava/lang/String;

    move-result-object v0

    .line 15868
    :goto_1
    if-nez v0, :cond_4

    .line 15869
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v0

    if-nez v0, :cond_6

    const-string v0, "SIM1"

    .line 15871
    :cond_4
    :goto_2
    new-instance v1, Landroid/app/AlertDialog$Builder;

    invoke-direct {v1, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    .line 15873
    const-string v2, "%s"

    .line 15874
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x7f0907cd

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/app/AlertDialog$Builder;->setTitle(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    .line 15875
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x7f0907cb

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v2

    const-string v3, "%s"

    invoke-virtual {v2, v3, v0}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    .line 15876
    const v0, 0x7f09041a

    new-instance v2, Lcom/android/phone/InVTCallScreen$75;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$75;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v1, v0, v2}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    .line 15885
    const v0, 0x7f09041b

    new-instance v2, Lcom/android/phone/InVTCallScreen$76;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$76;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v1, v0, v2}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    .line 15892
    new-instance v0, Lcom/android/phone/InVTCallScreen$77;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$77;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v1, v0}, Landroid/app/AlertDialog$Builder;->setOnCancelListener(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;

    .line 15898
    invoke-virtual {v1}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    .line 15899
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, v4}, Landroid/view/Window;->addFlags(I)V

    .line 15900
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    goto/16 :goto_0

    .line 15866
    :cond_5
    invoke-static {v4}, Lcom/android/phone/PhoneUtils;->getSIMName(I)Ljava/lang/String;

    move-result-object v0

    goto :goto_1

    .line 15869
    :cond_6
    const-string v0, "SIM2"

    goto :goto_2
.end method

.method private GetValidFileName(Z)Ljava/lang/String;
    .locals 8
    .parameter "Video"

    .prologue
    .line 13138
    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    .line 13139
    .local v3, tempFileName:Ljava/lang/StringBuffer;
    invoke-static {}, Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;

    move-result-object v2

    .line 13141
    .local v2, path:Ljava/io/File;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "/Videocall/"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 13142
    .local v1, dirPath:Ljava/lang/String;
    new-instance v0, Ljava/io/File;

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 13143
    .local v0, dir:Ljava/io/File;
    invoke-virtual {v0}, Ljava/io/File;->isDirectory()Z

    move-result v4

    if-nez v4, :cond_0

    .line 13144
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Directory is not in sdcard. Create new folder : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13145
    invoke-virtual {v0}, Ljava/io/File;->mkdir()Z

    .line 13150
    :goto_0
    if-eqz p1, :cond_1

    .line 13151
    invoke-virtual {v3, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "VT"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "yyyy-MM-dd kk.mm.ss"

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v6

    invoke-static {v5, v6, v7}, Landroid/text/format/DateFormat;->format(Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, ".3gp"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 13162
    :goto_1
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "File Name : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13163
    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v4

    return-object v4

    .line 13147
    :cond_0
    const-string v4, "Directory is in sdcard already"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 13157
    :cond_1
    invoke-virtual {v3, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "VT"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "yyyy-MM-dd kk.mm.ss"

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v6

    invoke-static {v5, v6, v7}, Landroid/text/format/DateFormat;->format(Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, ".jpg"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_1
.end method

.method private GetValidFileName(ZZ)Ljava/lang/String;
    .locals 7
    .parameter "Video"
    .parameter "bNear"

    .prologue
    .line 14568
    const-wide/16 v1, 0x0

    .line 14569
    .local v1, counter:J
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->getLastCaptureFileID()J

    move-result-wide v1

    .line 14571
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    .line 14573
    .local v4, tempFileName:Ljava/lang/StringBuffer;
    new-instance v3, Ljava/io/File;

    invoke-static {}, Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;

    move-result-object v5

    invoke-virtual {v5}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v3, v5}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 14574
    .local v3, path:Ljava/io/File;
    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    move-result-object v0

    .line 14575
    .local v0, c:Ljava/util/Calendar;
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v5

    invoke-virtual {v0, v5, v6}, Ljava/util/Calendar;->setTimeInMillis(J)V

    .line 14577
    invoke-virtual {v3}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    const-string v6, "/"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v6

    if-eqz p2, :cond_0

    const-string v5, "MeP"

    :goto_0
    invoke-virtual {v6, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    const/4 v6, 0x1

    invoke-virtual {v0, v6}, Ljava/util/Calendar;->get(I)I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v5

    const/4 v6, 0x2

    invoke-virtual {v0, v6}, Ljava/util/Calendar;->get(I)I

    move-result v6

    add-int/lit8 v6, v6, 0x1

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v5

    const/4 v6, 0x5

    invoke-virtual {v0, v6}, Ljava/util/Calendar;->get(I)I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v5

    const/16 v6, 0xa

    invoke-virtual {v0, v6}, Ljava/util/Calendar;->get(I)I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v5

    const/16 v6, 0xc

    invoke-virtual {v0, v6}, Ljava/util/Calendar;->get(I)I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v5

    const/16 v6, 0xd

    invoke-virtual {v0, v6}, Ljava/util/Calendar;->get(I)I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v5

    const-string v6, "_"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    invoke-virtual {v5, v1, v2}, Ljava/lang/StringBuffer;->append(J)Ljava/lang/StringBuffer;

    .line 14588
    if-eqz p1, :cond_1

    .line 14589
    const-string v5, ".3gp"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 14597
    :goto_1
    invoke-direct {p0, v1, v2}, Lcom/android/phone/InVTCallScreen;->setLastCaptureFileID(J)V

    .line 14598
    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v5

    return-object v5

    .line 14577
    :cond_0
    const-string v5, "YuP"

    goto :goto_0

    .line 14591
    :cond_1
    if-eqz p2, :cond_2

    .line 14592
    const-string v5, ".vci"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_1

    .line 14594
    :cond_2
    const-string v5, ".vcy"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_1
.end method

.method private IsItPossibleShowVolumePanel()Z
    .locals 1

    .prologue
    .line 15535
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_0

    .line 15536
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v0}, Landroid/widget/ImageButton;->getVisibility()I

    move-result v0

    if-nez v0, :cond_0

    .line 15537
    const/4 v0, 0x1

    .line 15540
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private IsTelefonicaOperator()Z
    .locals 5

    .prologue
    const/4 v1, 0x0

    const/4 v2, 0x1

    .line 14684
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getContext()Landroid/content/Context;

    move-result-object v3

    const-string v4, "phone"

    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/telephony/TelephonyManager;

    .line 14686
    .local v0, telephonyManager:Landroid/telephony/TelephonyManager;
    if-eqz v0, :cond_2

    .line 14688
    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "722010"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eq v3, v2, :cond_0

    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "722070"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eq v3, v2, :cond_0

    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "73603"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eq v3, v2, :cond_0

    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "71204"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eq v3, v2, :cond_0

    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "70403"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eq v3, v2, :cond_0

    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "71402"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eq v3, v2, :cond_0

    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "74404"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-ne v3, v2, :cond_1

    :cond_0
    move v1, v2

    .line 14706
    :cond_1
    :goto_0
    return v1

    .line 14705
    :cond_2
    const-string v2, "telephonyManager is null"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method private IsVAUOperator()Z
    .locals 5

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 14711
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getContext()Landroid/content/Context;

    move-result-object v3

    const-string v4, "phone"

    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/telephony/TelephonyManager;

    .line 14714
    .local v0, telephonyManager:Landroid/telephony/TelephonyManager;
    if-eqz v0, :cond_1

    .line 14716
    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;

    move-result-object v3

    const-string v4, "50503"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-ne v3, v1, :cond_0

    .line 14728
    :goto_0
    return v1

    :cond_0
    move v1, v2

    .line 14722
    goto :goto_0

    .line 14727
    :cond_1
    const-string v1, "telephonyManager is null"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    move v1, v2

    .line 14728
    goto :goto_0
.end method

.method static synthetic access$000(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;Z)V
    .locals 0
    .parameter "x0"
    .parameter "x1"
    .parameter "x2"

    .prologue
    .line 256
    invoke-direct {p0, p1, p2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    return-void
.end method

.method static synthetic access$100(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsDestroyed:Z

    return v0
.end method

.method static synthetic access$1000(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isMO_Disconnect:Z

    return v0
.end method

.method static synthetic access$10000(Lcom/android/phone/InVTCallScreen;)Landroid/widget/RelativeLayout;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mNearEndArea:Landroid/widget/RelativeLayout;

    return-object v0
.end method

.method static synthetic access$1002(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->isMO_Disconnect:Z

    return p1
.end method

.method static synthetic access$10100(Lcom/android/phone/InVTCallScreen;)Landroid/widget/RelativeLayout;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndArea:Landroid/widget/RelativeLayout;

    return-object v0
.end method

.method static synthetic access$10200(Lcom/android/phone/InVTCallScreen;)Lcom/android/phone/InCSVTCallMenu;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    return-object v0
.end method

.method static synthetic access$10302(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->nearend_pressed:Z

    return p0
.end method

.method static synthetic access$10400()Z
    .locals 1

    .prologue
    .line 256
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->mIsSKTServiceMode:Z

    return v0
.end method

.method static synthetic access$10402(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->mIsSKTServiceMode:Z

    return p0
.end method

.method static synthetic access$10500(Lcom/android/phone/InVTCallScreen;)Landroid/widget/TextView;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    return-object v0
.end method

.method static synthetic access$10600(Lcom/android/phone/InVTCallScreen;)Landroid/os/Handler;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    return-object v0
.end method

.method static synthetic access$10700(Lcom/android/phone/InVTCallScreen;)Landroid/widget/Button;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    return-object v0
.end method

.method static synthetic access$10800(Lcom/android/phone/InVTCallScreen;)Landroid/widget/Button;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    return-object v0
.end method

.method static synthetic access$10900(Lcom/android/phone/InVTCallScreen;)Landroid/widget/Button;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    return-object v0
.end method

.method static synthetic access$1100(Lcom/android/phone/InVTCallScreen;)Landroid/os/Message;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->disconnectMsg:Landroid/os/Message;

    return-object v0
.end method

.method static synthetic access$11000(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->hideFarEnViewAnim()V

    return-void
.end method

.method static synthetic access$1102(Lcom/android/phone/InVTCallScreen;Landroid/os/Message;)Landroid/os/Message;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->disconnectMsg:Landroid/os/Message;

    return-object p1
.end method

.method static synthetic access$11100(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallType:Z

    return v0
.end method

.method static synthetic access$11200(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateOwnImageStatus()V

    return-void
.end method

.method static synthetic access$11300(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsShowEndCallScreenStarted:Z

    return v0
.end method

.method static synthetic access$11400(Lcom/android/phone/InVTCallScreen;Z)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->updateEndcallButtonState(Z)V

    return-void
.end method

.method static synthetic access$11500(Lcom/android/phone/InVTCallScreen;)Landroid/widget/Button;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    return-object v0
.end method

.method static synthetic access$11600(Lcom/android/phone/InVTCallScreen;)Landroid/widget/Button;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    return-object v0
.end method

.method static synthetic access$11700(Lcom/android/phone/InVTCallScreen;)Landroid/widget/Button;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    return-object v0
.end method

.method static synthetic access$11800(Lcom/android/phone/InVTCallScreen;I)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->displayToast(I)V

    return-void
.end method

.method static synthetic access$11900(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordingAlert:Z

    return v0
.end method

.method static synthetic access$11902(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mRecordingAlert:Z

    return p1
.end method

.method static synthetic access$12000(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageSelectedFromOption:Z

    return v0
.end method

.method static synthetic access$12002(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageSelectedFromOption:Z

    return p1
.end method

.method static synthetic access$1202(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    return p0
.end method

.method static synthetic access$12100(Lcom/android/phone/InVTCallScreen;)Ljava/lang/String;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    return-object v0
.end method

.method static synthetic access$12102(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)Ljava/lang/String;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    return-object p1
.end method

.method static synthetic access$12202(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageEnabled:Z

    return p1
.end method

.method static synthetic access$12300(Lcom/android/phone/InVTCallScreen;)Ljava/lang/String;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previousFilePath:Ljava/lang/String;

    return-object v0
.end method

.method static synthetic access$12302(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)Ljava/lang/String;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->previousFilePath:Ljava/lang/String;

    return-object p1
.end method

.method static synthetic access$12400(Lcom/android/phone/InVTCallScreen;)Lcom/android/phone/PreviewEffectState;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    return-object v0
.end method

.method static synthetic access$12500(Lcom/android/phone/InVTCallScreen;)Landroid/widget/LinearLayout;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerInfoLayout:Landroid/widget/LinearLayout;

    return-object v0
.end method

.method static synthetic access$12600(Lcom/android/phone/InVTCallScreen;)Lcom/android/phone/PreviewEffectUI;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    return-object v0
.end method

.method static synthetic access$12700(Lcom/android/phone/InVTCallScreen;)Landroid/widget/LinearLayout;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    return-object v0
.end method

.method static synthetic access$12800(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    return v0
.end method

.method static synthetic access$12802(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    return p1
.end method

.method static synthetic access$12900(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mLowMemoryStopRecording:Z

    return v0
.end method

.method static synthetic access$12902(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mLowMemoryStopRecording:Z

    return p1
.end method

.method static synthetic access$13000(Lcom/android/phone/InVTCallScreen;)I
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mSwitchRecording:I

    return v0
.end method

.method static synthetic access$13002(Lcom/android/phone/InVTCallScreen;I)I
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput p1, p0, Lcom/android/phone/InVTCallScreen;->mSwitchRecording:I

    return p1
.end method

.method static synthetic access$1302(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->mHomePressed:Z

    return p0
.end method

.method static synthetic access$13100(Lcom/android/phone/InVTCallScreen;)I
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndRecordStopped:I

    return v0
.end method

.method static synthetic access$13200(Lcom/android/phone/InVTCallScreen;)I
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mNearEndRecordStopped:I

    return v0
.end method

.method static synthetic access$13300(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    return-void
.end method

.method static synthetic access$13402(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->isAllOLC:Z

    return p1
.end method

.method static synthetic access$13502(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mAllOlcOpened:Z

    return p1
.end method

.method static synthetic access$13600(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_Old()V

    return-void
.end method

.method static synthetic access$13700(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_Big()V

    return-void
.end method

.method static synthetic access$13800(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_Small()V

    return-void
.end method

.method static synthetic access$13900(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_BigOnly()V

    return-void
.end method

.method static synthetic access$1400()Z
    .locals 1

    .prologue
    .line 256
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->mWasRemoteFrameReceive:Z

    return v0
.end method

.method static synthetic access$14000(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->resetAudioState()V

    return-void
.end method

.method static synthetic access$1402(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->mWasRemoteFrameReceive:Z

    return p0
.end method

.method static synthetic access$14100(Lcom/android/phone/InVTCallScreen;)I
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarSelection:I

    return v0
.end method

.method static synthetic access$14102(Lcom/android/phone/InVTCallScreen;I)I
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput p1, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarSelection:I

    return p1
.end method

.method static synthetic access$14200(Lcom/android/phone/InVTCallScreen;)Lcom/android/phone/InVTCallScreen$BrightZoomTimer;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->brzoomCntDwn:Lcom/android/phone/InVTCallScreen$BrightZoomTimer;

    return-object v0
.end method

.method static synthetic access$14300(Lcom/android/phone/InVTCallScreen;)Landroid/widget/FrameLayout;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    return-object v0
.end method

.method static synthetic access$14400(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->switchCamera()V

    return-void
.end method

.method static synthetic access$14500(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dualCamera()V

    return-void
.end method

.method static synthetic access$14600(Lcom/android/phone/InVTCallScreen;)I
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTimeBlinkCount:I

    return v0
.end method

.method static synthetic access$14602(Lcom/android/phone/InVTCallScreen;I)I
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput p1, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTimeBlinkCount:I

    return p1
.end method

.method static synthetic access$14608(Lcom/android/phone/InVTCallScreen;)I
    .locals 2
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTimeBlinkCount:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTimeBlinkCount:I

    return v0
.end method

.method static synthetic access$14700(Lcom/android/phone/InVTCallScreen;)Landroid/os/Handler;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->timerHandler:Landroid/os/Handler;

    return-object v0
.end method

.method static synthetic access$14800(Lcom/android/phone/InVTCallScreen;)Landroid/widget/TextView;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpperTitleText:Landroid/widget/TextView;

    return-object v0
.end method

.method static synthetic access$14900()I
    .locals 1

    .prologue
    .line 256
    sget v0, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    return v0
.end method

.method static synthetic access$14902(I)I
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput p0, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    return p0
.end method

.method static synthetic access$1500(Lcom/android/phone/InVTCallScreen;)I
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    return v0
.end method

.method static synthetic access$15002(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->mStopCameraRequired:Z

    return p0
.end method

.method static synthetic access$15102(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mIsFarEndTransparent:Z

    return p1
.end method

.method static synthetic access$15200(Lcom/android/phone/InVTCallScreen;)Lcom/sec/android/touchwiz/widget/TwSeekBar;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    return-object v0
.end method

.method static synthetic access$15300(Lcom/android/phone/InVTCallScreen;Lcom/android/internal/telephony/Phone;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->changePhone(Lcom/android/internal/telephony/Phone;)V

    return-void
.end method

.method static synthetic access$1600(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isVTCallAlreadyStop:Z

    return v0
.end method

.method static synthetic access$1602(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->isVTCallAlreadyStop:Z

    return p1
.end method

.method static synthetic access$1700(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopVTCall()V

    return-void
.end method

.method static synthetic access$1800()Z
    .locals 1

    .prologue
    .line 256
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    return v0
.end method

.method static synthetic access$1802(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    return p0
.end method

.method static synthetic access$1900(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->continueOnDisconnection()V

    return-void
.end method

.method static synthetic access$200(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    return-void
.end method

.method static synthetic access$2000(Lcom/android/phone/InVTCallScreen;Landroid/os/AsyncResult;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->onDisconnect(Landroid/os/AsyncResult;)V

    return-void
.end method

.method static synthetic access$2100(Lcom/android/phone/InVTCallScreen;)Lsiso/vt/VTManager;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    return-object v0
.end method

.method static synthetic access$2102(Lcom/android/phone/InVTCallScreen;Lsiso/vt/VTManager;)Lsiso/vt/VTManager;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    return-object p1
.end method

.method static synthetic access$2200(Lcom/android/phone/InVTCallScreen;)Landroid/media/AudioManager;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    return-object v0
.end method

.method static synthetic access$2300(Lcom/android/phone/InVTCallScreen;Landroid/os/AsyncResult;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->onMMIInitiate(Landroid/os/AsyncResult;)V

    return-void
.end method

.method static synthetic access$2400(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onMMICancel()V

    return-void
.end method

.method static synthetic access$2500(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissMmiStartedDialog()V

    return-void
.end method

.method static synthetic access$2600(Lcom/android/phone/InVTCallScreen;Lcom/android/internal/telephony/MmiCode;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->onMMIComplete(Lcom/android/internal/telephony/MmiCode;)V

    return-void
.end method

.method static synthetic access$2700(Lcom/android/phone/InVTCallScreen;Landroid/os/AsyncResult;C)V
    .locals 0
    .parameter "x0"
    .parameter "x1"
    .parameter "x2"

    .prologue
    .line 256
    invoke-direct {p0, p1, p2}, Lcom/android/phone/InVTCallScreen;->handlePostOnDialChars(Landroid/os/AsyncResult;C)V

    return-void
.end method

.method static synthetic access$2800(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->delayedCleanupAfterDisconnect()V

    return-void
.end method

.method static synthetic access$2900(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mMuteEnable:Z

    return v0
.end method

.method static synthetic access$2902(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mMuteEnable:Z

    return p1
.end method

.method static synthetic access$300(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    return v0
.end method

.method static synthetic access$3000(Lcom/android/phone/InVTCallScreen;Z)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->updateMuteButton(Z)V

    return-void
.end method

.method static synthetic access$3100(Lcom/android/phone/InVTCallScreen;)Landroid/widget/ToggleButton;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    return-object v0
.end method

.method static synthetic access$3200(Lcom/android/phone/InVTCallScreen;)Lcom/android/internal/telephony/Call;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    return-object v0
.end method

.method static synthetic access$3300(Lcom/android/phone/InVTCallScreen;)Lcom/android/internal/telephony/CallManager;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    return-object v0
.end method

.method static synthetic access$3400(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateScreen()V

    return-void
.end method

.method static synthetic access$3500(Lcom/android/phone/InVTCallScreen;)Landroid/app/AlertDialog;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    return-object v0
.end method

.method static synthetic access$3502(Lcom/android/phone/InVTCallScreen;Landroid/app/AlertDialog;)Landroid/app/AlertDialog;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    return-object p1
.end method

.method static synthetic access$3600(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateButtonUI()V

    return-void
.end method

.method static synthetic access$3700(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->bailOutAfterErrorDialog()V

    return-void
.end method

.method static synthetic access$3800(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mSuccessToastNotRequired:Z

    return v0
.end method

.method static synthetic access$3802(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mSuccessToastNotRequired:Z

    return p1
.end method

.method static synthetic access$3900(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateSelectedImageFromGallery()V

    return-void
.end method

.method static synthetic access$400(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->phoneIsInUse()Z

    move-result v0

    return v0
.end method

.method static synthetic access$4000(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    return v0
.end method

.method static synthetic access$4002(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    return p1
.end method

.method static synthetic access$4100(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateSelectedVideoFromGallery()V

    return-void
.end method

.method static synthetic access$4200(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    return v0
.end method

.method static synthetic access$4202(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    return p1
.end method

.method static synthetic access$4300(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    return-void
.end method

.method static synthetic access$4400(Lcom/android/phone/InVTCallScreen;Landroid/net/Uri;)Ljava/lang/String;
    .locals 1
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->getVideoFileNameFromUri(Landroid/net/Uri;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$4500(Lcom/android/phone/InVTCallScreen;)Ljava/lang/String;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    return-object v0
.end method

.method static synthetic access$4502(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)Ljava/lang/String;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    return-object p1
.end method

.method static synthetic access$4600(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->showVideo(Ljava/lang/String;)V

    return-void
.end method

.method static synthetic access$4700(Lcom/android/phone/InVTCallScreen;)Landroid/widget/ImageView;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwitchedViewAnimationImage:Landroid/widget/ImageView;

    return-object v0
.end method

.method static synthetic access$4702(Lcom/android/phone/InVTCallScreen;Landroid/widget/ImageView;)Landroid/widget/ImageView;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mSwitchedViewAnimationImage:Landroid/widget/ImageView;

    return-object p1
.end method

.method static synthetic access$4800(Lcom/android/phone/InVTCallScreen;)Landroid/widget/ImageView;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    return-object v0
.end method

.method static synthetic access$4900(Lcom/android/phone/InVTCallScreen;)Landroid/widget/ImageView;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    return-object v0
.end method

.method static synthetic access$500(Lcom/android/phone/InVTCallScreen;Landroid/os/AsyncResult;)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->onPhoneStateChanged(Landroid/os/AsyncResult;)V

    return-void
.end method

.method static synthetic access$5000(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsSwitchCameraAnimationStarted:Z

    return v0
.end method

.method static synthetic access$5002(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mIsSwitchCameraAnimationStarted:Z

    return p1
.end method

.method static synthetic access$5100(Lcom/android/phone/InVTCallScreen;)Landroid/graphics/drawable/AnimationDrawable;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    return-object v0
.end method

.method static synthetic access$5200(Lcom/android/phone/InVTCallScreen;)Landroid/os/Handler;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    return-object v0
.end method

.method static synthetic access$5300(Lcom/android/phone/InVTCallScreen;)Landroid/app/ProgressDialog;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    return-object v0
.end method

.method static synthetic access$5302(Lcom/android/phone/InVTCallScreen;Landroid/app/ProgressDialog;)Landroid/app/ProgressDialog;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    return-object p1
.end method

.method static synthetic access$5400(Lcom/android/phone/InVTCallScreen;)Ljava/lang/String;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->FallBackCallNumber:Ljava/lang/String;

    return-object v0
.end method

.method static synthetic access$5502(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    return p1
.end method

.method static synthetic access$5600(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mMRBTstart:Z

    return v0
.end method

.method static synthetic access$5602(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mMRBTstart:Z

    return p1
.end method

.method static synthetic access$5700(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mMRBTend:Z

    return v0
.end method

.method static synthetic access$5702(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mMRBTend:Z

    return p1
.end method

.method static synthetic access$5800(Lcom/android/phone/InVTCallScreen;)Lcom/android/phone/CallTime;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    return-object v0
.end method

.method static synthetic access$5900(Lcom/android/phone/InVTCallScreen;)Lcom/android/internal/telephony/Call;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    return-object v0
.end method

.method static synthetic access$600(Lcom/android/phone/InVTCallScreen;)Lcom/android/internal/telephony/Phone;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    return-object v0
.end method

.method static synthetic access$6000(Lcom/android/phone/InVTCallScreen;)Landroid/widget/TextView;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    return-object v0
.end method

.method static synthetic access$6100(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissAllDialogs()V

    return-void
.end method

.method static synthetic access$6200(Lcom/android/phone/InVTCallScreen;Z)V
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    return-void
.end method

.method static synthetic access$6300()Z
    .locals 1

    .prologue
    .line 256
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->isFinishSwipe:Z

    return v0
.end method

.method static synthetic access$6302(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->isFinishSwipe:Z

    return p0
.end method

.method static synthetic access$6400(Lcom/android/phone/InVTCallScreen;)Landroid/view/View;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCallButtonFrame:Landroid/view/View;

    return-object v0
.end method

.method static synthetic access$6500(Lcom/android/phone/InVTCallScreen;)Landroid/view/View;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    return-object v0
.end method

.method static synthetic access$6600(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->hideVolumePanel()V

    return-void
.end method

.method static synthetic access$6700(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setLeftOneHandModeArrow()V

    return-void
.end method

.method static synthetic access$6800(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setRightOneHandModeArrow()V

    return-void
.end method

.method static synthetic access$6900(Lcom/android/phone/InVTCallScreen;)Lcom/android/phone/PhoneGlobals;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    return-object v0
.end method

.method static synthetic access$7000(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->IsItPossibleShowVolumePanel()Z

    move-result v0

    return v0
.end method

.method static synthetic access$702(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)Ljava/lang/String;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    return-object p1
.end method

.method static synthetic access$7100(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showVolumePanel()V

    return-void
.end method

.method static synthetic access$7200(Lcom/android/phone/InVTCallScreen;)Landroid/widget/Toast;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    return-object v0
.end method

.method static synthetic access$7202(Lcom/android/phone/InVTCallScreen;Landroid/widget/Toast;)Landroid/widget/Toast;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    return-object p1
.end method

.method static synthetic access$7300(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsplayVideo:Z

    return v0
.end method

.method static synthetic access$7400(Lcom/android/phone/InVTCallScreen;)I
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->previousSelectedType:I

    return v0
.end method

.method static synthetic access$7402(Lcom/android/phone/InVTCallScreen;I)I
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput p1, p0, Lcom/android/phone/InVTCallScreen;->previousSelectedType:I

    return p1
.end method

.method static synthetic access$7502(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mIsBatteryLow:Z

    return p1
.end method

.method static synthetic access$7600(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->performBatteryLowProcess()V

    return-void
.end method

.method static synthetic access$7702(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mIsPowerOffAnimationStarted:Z

    return p1
.end method

.method static synthetic access$7800(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsSimTabUIUpdate:Z

    return v0
.end method

.method static synthetic access$7900()Z
    .locals 1

    .prologue
    .line 256
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    return v0
.end method

.method static synthetic access$800(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopRecordingAudio()V

    return-void
.end method

.method static synthetic access$8000(Lcom/android/phone/InVTCallScreen;)Lcom/android/internal/telephony/Phone;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    return-object v0
.end method

.method static synthetic access$8100(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->DuosVTPhoneSwitch()V

    return-void
.end method

.method static synthetic access$8200(Lcom/android/phone/InVTCallScreen;)Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    return-object v0
.end method

.method static synthetic access$8300(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showRadioOnDialog()V

    return-void
.end method

.method static synthetic access$8402(Lcom/android/phone/InVTCallScreen;Landroid/app/AlertDialog;)Landroid/app/AlertDialog;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    return-object p1
.end method

.method static synthetic access$8500(Lcom/android/phone/InVTCallScreen;)Lcom/android/internal/telephony/Call;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    return-object v0
.end method

.method static synthetic access$8600(Lcom/android/phone/InVTCallScreen;)Landroid/bluetooth/BluetoothHeadset;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    return-object v0
.end method

.method static synthetic access$8602(Lcom/android/phone/InVTCallScreen;Landroid/bluetooth/BluetoothHeadset;)Landroid/bluetooth/BluetoothHeadset;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    return-object p1
.end method

.method static synthetic access$8700(Lcom/android/phone/InVTCallScreen;)Landroid/widget/TextView;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    return-object v0
.end method

.method static synthetic access$8800(Lcom/android/phone/InVTCallScreen;)Landroid/widget/LinearLayout;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgHandle:Landroid/widget/LinearLayout;

    return-object v0
.end method

.method static synthetic access$8900(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mNearEndViewClicked:Z

    return v0
.end method

.method static synthetic access$8902(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mNearEndViewClicked:Z

    return p1
.end method

.method static synthetic access$900(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateEndCallButton()V

    return-void
.end method

.method static synthetic access$9000(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mFirstFarEndViewClicked:Z

    return v0
.end method

.method static synthetic access$9002(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mFirstFarEndViewClicked:Z

    return p1
.end method

.method static synthetic access$9100(Lcom/android/phone/InVTCallScreen;)Z
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mFirstNearEndViewClicked:Z

    return v0
.end method

.method static synthetic access$9102(Lcom/android/phone/InVTCallScreen;Z)Z
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mFirstNearEndViewClicked:Z

    return p1
.end method

.method static synthetic access$9200()I
    .locals 1

    .prologue
    .line 256
    sget v0, Lcom/android/phone/InVTCallScreen;->mXMoveStart:I

    return v0
.end method

.method static synthetic access$9202(I)I
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput p0, Lcom/android/phone/InVTCallScreen;->mXMoveStart:I

    return p0
.end method

.method static synthetic access$9300()I
    .locals 1

    .prologue
    .line 256
    sget v0, Lcom/android/phone/InVTCallScreen;->mYMoveStart:I

    return v0
.end method

.method static synthetic access$9302(I)I
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput p0, Lcom/android/phone/InVTCallScreen;->mYMoveStart:I

    return p0
.end method

.method static synthetic access$9400()I
    .locals 1

    .prologue
    .line 256
    sget v0, Lcom/android/phone/InVTCallScreen;->mLongPressMoveCount:I

    return v0
.end method

.method static synthetic access$9402(I)I
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput p0, Lcom/android/phone/InVTCallScreen;->mLongPressMoveCount:I

    return p0
.end method

.method static synthetic access$9408()I
    .locals 2

    .prologue
    .line 256
    sget v0, Lcom/android/phone/InVTCallScreen;->mLongPressMoveCount:I

    add-int/lit8 v1, v0, 0x1

    sput v1, Lcom/android/phone/InVTCallScreen;->mLongPressMoveCount:I

    return v0
.end method

.method static synthetic access$9500()Z
    .locals 1

    .prologue
    .line 256
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->mLongPressMenuEnabled:Z

    return v0
.end method

.method static synthetic access$9502(Z)Z
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    sput-boolean p0, Lcom/android/phone/InVTCallScreen;->mLongPressMenuEnabled:Z

    return p0
.end method

.method static synthetic access$9600(Lcom/android/phone/InVTCallScreen;)Landroid/graphics/Rect;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mNearEndSurfaceRect:Landroid/graphics/Rect;

    return-object v0
.end method

.method static synthetic access$9602(Lcom/android/phone/InVTCallScreen;Landroid/graphics/Rect;)Landroid/graphics/Rect;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mNearEndSurfaceRect:Landroid/graphics/Rect;

    return-object p1
.end method

.method static synthetic access$9700(Lcom/android/phone/InVTCallScreen;)Landroid/graphics/Rect;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndSurfaceRect:Landroid/graphics/Rect;

    return-object v0
.end method

.method static synthetic access$9702(Lcom/android/phone/InVTCallScreen;Landroid/graphics/Rect;)Landroid/graphics/Rect;
    .locals 0
    .parameter "x0"
    .parameter "x1"

    .prologue
    .line 256
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mFarEndSurfaceRect:Landroid/graphics/Rect;

    return-object p1
.end method

.method static synthetic access$9800(Lcom/android/phone/InVTCallScreen;)Lcom/android/phone/DTMFTwelveKeyDialerForVT;
    .locals 1
    .parameter "x0"

    .prologue
    .line 256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    return-object v0
.end method

.method static synthetic access$9900(Lcom/android/phone/InVTCallScreen;)V
    .locals 0
    .parameter "x0"

    .prologue
    .line 256
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceViewAnimated()V

    return-void
.end method

.method private bailOutAfterErrorDialog()V
    .locals 2

    .prologue
    .line 8436
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_1

    .line 8437
    const-string v0, "bailOutAfterErrorDialog: DISMISSING mGenericErrorDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8440
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8441
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    .line 8457
    :cond_0
    :goto_0
    return-void

    .line 8443
    :cond_1
    const-string v0, "bailOutAfterErrorDialog(): end InVTCallScreen session..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8444
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    if-eqz v0, :cond_2

    .line 8445
    const/4 v0, 0x1

    sput-boolean v0, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    .line 8451
    :goto_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallState;->clearPendingCallStatusCode()V

    .line 8452
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inCallUiState:Lcom/android/phone/InCallUiState;

    invoke-virtual {v0}, Lcom/android/phone/InCallUiState;->clearPendingCallStatusCode()V

    .line 8454
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_0

    .line 8455
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->finish()V

    goto :goto_0

    .line 8447
    :cond_2
    const/4 v0, 0x0

    sput-boolean v0, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    .line 8449
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->UNDEFINED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    goto :goto_1
.end method

.method private button_initialize()V
    .locals 13

    .prologue
    const/4 v12, 0x0

    const/16 v11, 0x8

    const/4 v7, 0x1

    const/4 v10, 0x4

    const/4 v8, 0x0

    .line 9818
    const-string v0, "Enter button_initialize"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9820
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .line 9822
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 9823
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    .line 9824
    const v0, 0x7f0a02d1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    .line 9826
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    if-eqz v0, :cond_0

    .line 9827
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    iget v4, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-static {v2, v4}, Lcom/android/phone/PhoneUtilsDsds;->getSimIconMini(Landroid/content/Context;I)I

    move-result v2

    invoke-virtual {v3, v2}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 9831
    :cond_0
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    packed-switch v0, :pswitch_data_0

    .line 10865
    :cond_1
    :goto_0
    const-string v0, "Exit button_initialize"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 10866
    return-void

    .line 9834
    :pswitch_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    const/4 v1, -0x1

    invoke-virtual {v0, v1}, Lcom/android/phone/InCSVTCallMenu;->setMenuSelected(I)V

    .line 9836
    const v0, 0x7f0a036f

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    .line 9837
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    if-eqz v0, :cond_2

    .line 9838
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    const v1, 0x7f0903fb

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(I)V

    .line 9841
    :cond_2
    const v0, 0x7f0a0369

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    .line 9842
    const v0, 0x7f0a036a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    .line 9844
    const-string v0, "phone_number_locator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 9845
    const v0, 0x7f0a0059

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    .line 9849
    :cond_3
    const-string v0, ""

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 9850
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    const-string v1, ""

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9851
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v1, ""

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9853
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 9855
    const v0, 0x7f0a004e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    .line 9856
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    if-eqz v0, :cond_4

    .line 9857
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    const-string v1, ""

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9862
    :cond_4
    const-string v0, "phone_number_locator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 9863
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    if-eqz v0, :cond_5

    .line 9864
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    invoke-virtual {v0, v8}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9865
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    const-string v1, ""

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9870
    :cond_5
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_21

    .line 9871
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 9875
    :goto_1
    if-eqz v0, :cond_b

    .line 9876
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->updateDisplayForCaller(Lcom/android/internal/telephony/Connection;)V

    .line 9878
    invoke-static {p0, v0}, Lcom/android/phone/PhoneUtils;->getCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;)Lcom/android/internal/telephony/CallerInfo;

    move-result-object v9

    .line 9880
    const-string v1, "kor_cs_vt_network_operator"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 9882
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getNumberPresentation()I

    move-result v0

    .line 9884
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    .line 9885
    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .line 9887
    if-eqz v9, :cond_7

    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_ALLOWED:I

    if-ne v0, v2, :cond_7

    .line 9888
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "cnapName : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v2, v9, Lcom/android/internal/telephony/CallerInfo;->cnapName:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, "mContactName : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v2, v9, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " +callstate : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9889
    iget-object v0, v9, Lcom/android/internal/telephony/CallerInfo;->cnapName:Ljava/lang/String;

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_7

    iget-boolean v0, v9, Lcom/android/internal/telephony/CallerInfo;->contactExists:Z

    if-eqz v0, :cond_7

    .line 9890
    iget-object v6, v9, Lcom/android/internal/telephony/CallerInfo;->cnapName:Ljava/lang/String;

    .line 9891
    iget-object v0, v9, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    sput-object v0, Lcom/android/phone/PhoneUtilsExt;->mContactName:Ljava/lang/String;

    .line 9892
    sget-object v0, Lcom/android/internal/telephony/Call$State;->INCOMING:Lcom/android/internal/telephony/Call$State;

    if-eq v1, v0, :cond_6

    sget-object v0, Lcom/android/internal/telephony/Call$State;->WAITING:Lcom/android/internal/telephony/Call$State;

    if-ne v1, v0, :cond_7

    :cond_6
    sget-object v0, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    if-nez v0, :cond_7

    .line 9893
    new-instance v0, Lcom/android/phone/InVTCallScreen$30;

    const-wide/32 v2, 0x493e0

    const-wide/16 v4, 0x3e8

    move-object v1, p0

    invoke-direct/range {v0 .. v6}, Lcom/android/phone/InVTCallScreen$30;-><init>(Lcom/android/phone/InVTCallScreen;JJLjava/lang/String;)V

    sput-object v0, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    .line 9910
    sget-object v0, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    invoke-virtual {v0}, Landroid/os/CountDownTimer;->start()Landroid/os/CountDownTimer;

    .line 9917
    :cond_7
    if-eqz v9, :cond_b

    .line 9919
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_23

    .line 9920
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v0

    if-nez v0, :cond_22

    move v0, v7

    .line 9925
    :goto_2
    const-string v1, "display_additional_caller_info"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_a

    const-string v1, "phone_kk_tablet_gui"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_a

    .line 9926
    if-eqz v9, :cond_24

    iget-boolean v1, v9, Lcom/android/internal/telephony/CallerInfo;->contactExists:Z

    if-eqz v1, :cond_24

    if-eqz v0, :cond_24

    .line 9927
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-nez v0, :cond_9

    .line 9928
    const v0, 0x7f0a01f4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/ViewStub;

    .line 9929
    if-eqz v0, :cond_8

    .line 9930
    invoke-virtual {v0}, Landroid/view/ViewStub;->inflate()Landroid/view/View;

    .line 9931
    :cond_8
    const v0, 0x7f0a0272

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/SocialStatus;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    .line 9934
    :cond_9
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v0, :cond_a

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_a

    .line 9936
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    iget-wide v1, v9, Lcom/android/internal/telephony/CallerInfo;->person_id:J

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    invoke-static {v0, v1, v2, v3}, Lcom/android/phone/AdditionalCallerInfoAsyncQuery;->startQuery(Landroid/content/Context;JLcom/android/phone/AdditionalCallerInfoAsyncQuery$OnQueryCompleteListener;)V

    .line 9944
    :cond_a
    :goto_3
    iget-object v0, v9, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    if-eqz v0, :cond_b

    iget-object v0, v9, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_b

    .line 9945
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    sget-object v1, Landroid/provider/ContactsContract$Contacts;->CONTENT_URI:Landroid/net/Uri;

    iget-wide v2, v9, Lcom/android/internal/telephony/CallerInfo;->person_id:J

    invoke-static {v1, v2, v3}, Landroid/content/ContentUris;->withAppendedId(Landroid/net/Uri;J)Landroid/net/Uri;

    move-result-object v1

    new-instance v2, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->incomingContactImage:Landroid/widget/ImageView;

    invoke-direct {v2, v3, v12, v9, v7}, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;-><init>(Landroid/widget/ImageView;Landroid/widget/ImageView;Lcom/android/internal/telephony/CallerInfo;I)V

    invoke-static {v7, v0, v1, p0, v2}, Lcom/android/phone/ContactsAsyncHelper;->startObtainPhotoAsync(ILandroid/content/Context;Landroid/net/Uri;Lcom/android/phone/ContactsAsyncHelper$OnImageLoadCompleteListener;Ljava/lang/Object;)V

    .line 9953
    :cond_b
    const v0, 0x7f0a03d9

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/IncomingCallWidget;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    .line 9954
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_25

    .line 9955
    const v0, 0x7f0a03da

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/IncomingCallEasyImageWidget;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    .line 9956
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    if-eqz v0, :cond_c

    .line 9957
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mEasymodeTrigerListener:Lcom/android/phone/IncomingCallImageWidget$OnTriggerListener;

    invoke-virtual {v0, v1}, Lcom/android/phone/IncomingCallEasyImageWidget;->setOnTriggerListener(Lcom/android/phone/IncomingCallImageWidget$OnTriggerListener;)V

    .line 9962
    :cond_c
    :goto_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showIncomingCallWidget(Lcom/android/internal/telephony/Call;)V

    .line 9964
    const-string v0, "vt_cmcc_operator_fallback"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_28

    .line 9965
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_11

    .line 9967
    const v0, 0x7f0a03d6

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideocallFallbackLayout:Landroid/widget/LinearLayout;

    .line 9968
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideocallFallbackLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_26

    .line 9969
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideocallFallbackLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v8}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 9974
    :goto_5
    const v0, 0x7f0a03d8

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejMsgButton:Landroid/widget/Button;

    .line 9975
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejMsgButton:Landroid/widget/Button;

    if-eqz v0, :cond_d

    .line 9976
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejMsgButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 9978
    :cond_d
    const v0, 0x7f0a03d7

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAcceptbyVoiceCallButton:Landroid/widget/Button;

    .line 9979
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAcceptbyVoiceCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_e

    .line 9980
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAcceptbyVoiceCallButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 9982
    :cond_e
    sget v1, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_UNKNOWN:I

    .line 9983
    const-string v0, ""

    .line 9984
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v2

    if-eqz v2, :cond_27

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v2

    if-eqz v2, :cond_27

    .line 9985
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getNumberPresentation()I

    move-result v1

    .line 9986
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    .line 9990
    :goto_6
    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_RESTRICTED:I

    if-eq v1, v2, :cond_f

    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_UNKNOWN:I

    if-eq v1, v2, :cond_f

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_f

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getLawmoLockState()Z

    move-result v0

    if-eqz v0, :cond_11

    .line 9993
    :cond_f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejMsgButton:Landroid/widget/Button;

    if-eqz v0, :cond_10

    .line 9994
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejMsgButton:Landroid/widget/Button;

    invoke-virtual {v0, v11}, Landroid/widget/Button;->setVisibility(I)V

    .line 9997
    :cond_10
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAcceptbyVoiceCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_11

    .line 9998
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAcceptbyVoiceCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v11}, Landroid/widget/Button;->setVisibility(I)V

    .line 10071
    :cond_11
    :goto_7
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_2f

    .line 10072
    const v0, 0x7f0a03d5

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    .line 10078
    :cond_12
    :goto_8
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_16

    .line 10079
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setVisibility(I)V

    .line 10080
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10082
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_30

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->checkCameraStartCondition_Security()Z

    move-result v0

    if-nez v0, :cond_13

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    invoke-virtual {v0, v12}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_13

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v8}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_30

    .line 10083
    :cond_13
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f090432

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    .line 10084
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_14

    .line 10085
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f0207ff

    invoke-virtual {v0, v1, v8, v8, v8}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    .line 10086
    :cond_14
    invoke-virtual {p0, v8}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 10100
    :cond_15
    :goto_9
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-nez v0, :cond_16

    .line 10101
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    .line 10105
    :cond_16
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_19

    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_19

    .line 10107
    const v0, 0x7f0a03d4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    .line 10108
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_18

    .line 10109
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setVisibility(I)V

    .line 10110
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10112
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_32

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->checkCameraStartCondition_Security()Z

    move-result v0

    if-nez v0, :cond_17

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    invoke-virtual {v0, v12}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_17

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v8}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_32

    .line 10113
    :cond_17
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f090432

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    .line 10114
    invoke-virtual {p0, v8}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 10125
    :cond_18
    :goto_a
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-nez v0, :cond_19

    .line 10126
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    .line 10130
    :cond_19
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_34

    .line 10131
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    if-eqz v0, :cond_1a

    .line 10132
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v0, v10}, Landroid/widget/SlidingDrawer;->setVisibility(I)V

    .line 10140
    :cond_1a
    :goto_b
    const-string v0, "enhanced_driving_mode"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-static {v0}, Lcom/android/phone/PhoneUtilsCommon;->isDrivingModeOn(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 10142
    const-string v0, "Driving Mode on"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 10143
    const v0, 0x7f0a03db

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v1

    .line 10144
    if-eqz v1, :cond_1

    .line 10145
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v2, 0x2

    if-ne v0, v2, :cond_1c

    .line 10146
    const v0, 0x7f0a03dc

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    .line 10147
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;

    move-result-object v2

    iget v2, v2, Landroid/util/DisplayMetrics;->density:F

    .line 10148
    if-eqz v0, :cond_1b

    .line 10149
    invoke-virtual {v0, v8, v8, v8, v8}, Landroid/view/View;->setPadding(IIII)V

    .line 10150
    new-instance v3, Landroid/widget/FrameLayout$LayoutParams;

    const v4, 0x439b8000

    mul-float/2addr v4, v2

    float-to-int v4, v4

    const/4 v5, -0x1

    invoke-direct {v3, v4, v5}, Landroid/widget/FrameLayout$LayoutParams;-><init>(II)V

    invoke-virtual {v0, v3}, Landroid/view/View;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 10152
    :cond_1b
    const v0, 0x7f0a01c6

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    .line 10153
    if-eqz v0, :cond_1c

    .line 10154
    new-instance v3, Landroid/widget/RelativeLayout$LayoutParams;

    const v4, 0x439d8000

    mul-float/2addr v2, v4

    float-to-int v2, v2

    const/4 v4, -0x2

    invoke-direct {v3, v2, v4}, Landroid/widget/RelativeLayout$LayoutParams;-><init>(II)V

    invoke-virtual {v0, v3}, Landroid/view/View;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 10157
    :cond_1c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-eqz v0, :cond_1d

    .line 10158
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v0, v10}, Lcom/android/phone/IncomingCallWidget;->setVisibility(I)V

    .line 10159
    :cond_1d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    if-eqz v0, :cond_1e

    .line 10160
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    invoke-virtual {v0, v10}, Lcom/android/phone/IncomingCallEasyImageWidget;->setVisibility(I)V

    .line 10161
    :cond_1e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    if-eqz v0, :cond_1f

    .line 10162
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v0, v10}, Landroid/widget/SlidingDrawer;->setVisibility(I)V

    .line 10164
    :cond_1f
    const v0, 0x7f0a020e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAnswerButton:Landroid/view/View;

    .line 10165
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAnswerButton:Landroid/view/View;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v2}, Landroid/view/View;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10166
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAnswerButton:Landroid/view/View;

    invoke-virtual {v0, p0}, Landroid/view/View;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10167
    const v0, 0x7f0a020f

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAnswerButtonTextView:Landroid/widget/TextView;

    .line 10168
    const v0, 0x7f0a0075

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectButton:Landroid/view/View;

    .line 10169
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectButton:Landroid/view/View;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v2}, Landroid/view/View;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10170
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectButton:Landroid/view/View;

    invoke-virtual {v0, p0}, Landroid/view/View;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10171
    const v0, 0x7f0a0210

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectButtonTextView:Landroid/widget/TextView;

    .line 10173
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_20

    .line 10174
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v10}, Landroid/widget/Button;->setVisibility(I)V

    .line 10176
    :cond_20
    invoke-virtual {v1, v8}, Landroid/view/View;->setVisibility(I)V

    .line 10178
    invoke-static {}, Lcom/android/phone/PhoneUtils;->setVoicetalkLocale()Ljava/util/Locale;

    move-result-object v0

    .line 10179
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x7f080007

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getStringArray(I)[Ljava/lang/String;

    move-result-object v1

    .line 10180
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->setConfigurationLocale(Ljava/util/Locale;)Ljava/util/Locale;

    .line 10181
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAnswerButtonTextView:Landroid/widget/TextView;

    aget-object v2, v1, v8

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 10182
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectButtonTextView:Landroid/widget/TextView;

    aget-object v1, v1, v7

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto/16 :goto_0

    .line 9873
    :cond_21
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    goto/16 :goto_1

    :cond_22
    move v0, v8

    .line 9920
    goto/16 :goto_2

    .line 9922
    :cond_23
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v0

    goto/16 :goto_2

    .line 9939
    :cond_24
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v0, :cond_a

    .line 9940
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    invoke-virtual {v0, v11}, Lcom/android/phone/SocialStatus;->setVisibility(I)V

    goto/16 :goto_3

    .line 9959
    :cond_25
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-eqz v0, :cond_c

    .line 9960
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v0, p0}, Lcom/android/phone/IncomingCallWidget;->setOnTriggerListener(Lcom/android/phone/IncomingCallWidget$OnTriggerListener;)V

    goto/16 :goto_4

    .line 9971
    :cond_26
    const-string v0, "button_initialize() : mVideocallFallbackLayout is null!!"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_5

    .line 9988
    :cond_27
    const-string v2, "NullPointerException hanppens when init buttons"

    invoke-direct {p0, v2, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    goto/16 :goto_6

    .line 10003
    :cond_28
    const v0, 0x7f0a02ff

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/SlidingDrawer;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    .line 10004
    const v0, 0x7f0a0302

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgHandle:Landroid/widget/LinearLayout;

    .line 10006
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_29

    const-string v0, "feature_remind_me_later_support "

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_29

    .line 10007
    const v0, 0x7f0a0304

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    .line 10008
    const v1, 0x7f0907a6

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(I)V

    .line 10012
    :cond_29
    const-string v0, "reject_call_with_message_icon_mode"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2b

    .line 10013
    const v0, 0x7f0a0301

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/ViewGroup;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgContent:Landroid/view/ViewGroup;

    .line 10014
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgContent:Landroid/view/ViewGroup;

    if-eqz v0, :cond_2a

    .line 10015
    const v0, 0x7f0a02e0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/ViewGroup;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgTextModeLayout:Landroid/view/ViewGroup;

    .line 10016
    const v0, 0x7f0a02e7

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/ViewGroup;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgIconModeLayout:Landroid/view/ViewGroup;

    .line 10019
    :cond_2a
    const-string v0, "reject_call_with_message_icon_mode"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2b

    .line 10020
    invoke-static {p0}, Lcom/android/phone/callsettings/RejectCallWithMsgModes;->isIconModeEnable(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_2c

    .line 10021
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgTextModeLayout:Landroid/view/ViewGroup;

    invoke-virtual {v0, v11}, Landroid/view/ViewGroup;->setVisibility(I)V

    .line 10022
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgIconModeLayout:Landroid/view/ViewGroup;

    invoke-virtual {v0, v8}, Landroid/view/ViewGroup;->setVisibility(I)V

    .line 10033
    :cond_2b
    :goto_c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    if-eqz v0, :cond_11

    .line 10034
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    new-instance v1, Lcom/android/phone/InVTCallScreen$31;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$31;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/widget/SlidingDrawer;->setOnDrawerOpenListener(Landroid/widget/SlidingDrawer$OnDrawerOpenListener;)V

    .line 10044
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    new-instance v1, Lcom/android/phone/InVTCallScreen$32;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$32;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/widget/SlidingDrawer;->setOnDrawerCloseListener(Landroid/widget/SlidingDrawer$OnDrawerCloseListener;)V

    .line 10056
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2d

    .line 10057
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    .line 10061
    :goto_d
    invoke-static {p0, v0}, Lcom/android/phone/RespondViaSmsManager;->allowRespondViaSmsForCall(Landroid/content/Context;Lcom/android/internal/telephony/Call;)Z

    move-result v0

    .line 10062
    if-eqz v0, :cond_2e

    .line 10063
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v0, v8}, Landroid/widget/SlidingDrawer;->setVisibility(I)V

    goto/16 :goto_7

    .line 10025
    :cond_2c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgTextModeLayout:Landroid/view/ViewGroup;

    invoke-virtual {v0, v8}, Landroid/view/ViewGroup;->setVisibility(I)V

    .line 10026
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgIconModeLayout:Landroid/view/ViewGroup;

    invoke-virtual {v0, v11}, Landroid/view/ViewGroup;->setVisibility(I)V

    goto :goto_c

    .line 10059
    :cond_2d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    goto :goto_d

    .line 10065
    :cond_2e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v0, v10}, Landroid/widget/SlidingDrawer;->setVisibility(I)V

    goto/16 :goto_7

    .line 10074
    :cond_2f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_12

    .line 10075
    const-string v0, "EasyModeEnabled, why mHide value is not null?? "

    invoke-direct {p0, v0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    goto/16 :goto_8

    .line 10088
    :cond_30
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_31

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_31

    .line 10090
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f0903fa

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    .line 10091
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 10092
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f0207fe

    invoke-virtual {v0, v1, v8, v8, v8}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto/16 :goto_9

    .line 10093
    :cond_31
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_15

    .line 10095
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f090432

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    .line 10096
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 10097
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f0207ff

    invoke-virtual {v0, v1, v8, v8, v8}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto/16 :goto_9

    .line 10116
    :cond_32
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_33

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_33

    .line 10118
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f0903fa

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    goto/16 :goto_a

    .line 10119
    :cond_33
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_18

    .line 10121
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f090432

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    goto/16 :goto_a

    .line 10134
    :cond_34
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_1a

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_1a

    .line 10135
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_1a

    .line 10136
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v10}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_b

    .line 10188
    :pswitch_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    const/4 v2, -0x1

    invoke-virtual {v0, v2}, Lcom/android/phone/InCSVTCallMenu;->setMenuSelected(I)V

    .line 10189
    const v0, 0x7f0a036f

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    .line 10191
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    if-eqz v0, :cond_36

    .line 10192
    const v0, 0x7f0a03e1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationImage:Landroid/widget/ImageView;

    .line 10193
    iput-object v12, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationList:[I

    .line 10194
    const/4 v0, 0x3

    new-array v0, v0, [I

    fill-array-data v0, :array_0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationList:[I

    .line 10195
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationList:[I

    if-eqz v0, :cond_52

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationImage:Landroid/widget/ImageView;

    if-eqz v0, :cond_52

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_52

    .line 10196
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_51

    .line 10197
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    const v2, 0x7f090524

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(I)V

    .line 10202
    :goto_e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v0, :cond_35

    .line 10203
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v0}, Lcom/android/phone/FrameAnimationForVT;->stop()V

    .line 10205
    :cond_35
    iput-object v12, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 10207
    new-instance v0, Lcom/android/phone/FrameAnimationForVT;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationImage:Landroid/widget/ImageView;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationList:[I

    const/4 v4, 0x2

    invoke-direct {v0, v2, v3, v4}, Lcom/android/phone/FrameAnimationForVT;-><init>(Landroid/widget/ImageView;[II)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 10208
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v0, :cond_36

    .line 10209
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v0}, Lcom/android/phone/FrameAnimationForVT;->start()V

    .line 10218
    :cond_36
    :goto_f
    const v0, 0x7f0a0369

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    .line 10219
    const v0, 0x7f0a036a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    .line 10221
    const-string v0, "phone_number_locator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_37

    .line 10222
    const v0, 0x7f0a0059

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    .line 10225
    :cond_37
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_38

    .line 10226
    const v0, 0x7f0a0367

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    .line 10227
    const-string v0, "vt_white_theme"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_54

    .line 10228
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v2, 0x2

    if-ne v0, v2, :cond_53

    .line 10229
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainLandBackgroundToNormal()V

    .line 10237
    :cond_38
    :goto_10
    const-string v0, ""

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 10238
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 10239
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 10240
    const-string v0, "phone_number_locator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_39

    .line 10241
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    if-eqz v0, :cond_39

    .line 10242
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    invoke-virtual {v0, v8}, Landroid/widget/TextView;->setVisibility(I)V

    .line 10243
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 10247
    :cond_39
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    if-nez v0, :cond_3a

    .line 10248
    new-instance v0, Lcom/android/phone/SmallerHitTargetTouchListener;

    invoke-direct {v0}, Lcom/android/phone/SmallerHitTargetTouchListener;-><init>()V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    .line 10250
    :cond_3a
    const-string v0, "vt_cmcc_operator_open_close_camera"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_56

    .line 10251
    const v0, 0x7f0a0365

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    .line 10252
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_3b

    .line 10253
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v11}, Landroid/widget/Button;->setVisibility(I)V

    .line 10255
    :cond_3b
    const v0, 0x7f0a034a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ToggleButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    .line 10256
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_3c

    .line 10257
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v8}, Landroid/widget/ToggleButton;->setVisibility(I)V

    .line 10258
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v2}, Landroid/widget/ToggleButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10259
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p0}, Landroid/widget/ToggleButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10260
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_55

    .line 10261
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->getMute(Lcom/android/internal/telephony/Phone;)Z

    move-result v0

    if-eqz v0, :cond_3c

    .line 10262
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v7}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 10280
    :cond_3c
    :goto_11
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_58

    .line 10281
    const v0, 0x7f0a0393

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    .line 10284
    :goto_12
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_3d

    .line 10285
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10286
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10287
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 10288
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 10291
    :cond_3d
    const v0, 0x7f0a0100

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    .line 10292
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_3e

    .line 10293
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10295
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_59

    .line 10296
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    .line 10300
    :goto_13
    sget-object v2, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v2, :cond_5a

    .line 10301
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v7}, Landroid/widget/Button;->setEnabled(Z)V

    .line 10306
    :cond_3e
    :goto_14
    const v0, 0x7f0a0362

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    .line 10307
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_3f

    .line 10308
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10310
    :cond_3f
    const v0, 0x7f0a0127

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDTMFDialerLayout:Landroid/widget/LinearLayout;

    .line 10312
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_5b

    .line 10313
    const v0, 0x7f0a0290

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/EditText;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    .line 10316
    :goto_15
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    if-eqz v0, :cond_40

    .line 10317
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    invoke-virtual {v0, v8}, Landroid/widget/EditText;->setWritingBuddyEnabled(Z)V

    .line 10319
    :cond_40
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    if-eqz v0, :cond_41

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_41

    .line 10320
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getAssets()Landroid/content/res/AssetManager;

    move-result-object v2

    const-string v3, "fonts/Num47_TW.ttf"

    invoke-static {v2, v3}, Landroid/graphics/Typeface;->createFromAsset(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/graphics/Typeface;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/EditText;->setTypeface(Landroid/graphics/Typeface;)V

    .line 10323
    :cond_41
    const v0, 0x7f0a0352

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndLayout:Landroid/widget/LinearLayout;

    .line 10325
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_5c

    .line 10326
    const v0, 0x7f0a0394

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    .line 10329
    :goto_16
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    if-eqz v0, :cond_42

    .line 10330
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10331
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10334
    :cond_42
    const v0, 0x7f0a0364

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ToggleButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    .line 10335
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_43

    .line 10336
    const-string v0, "no_receiver_in_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_5d

    .line 10337
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v2}, Landroid/widget/ToggleButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10338
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p0}, Landroid/widget/ToggleButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10339
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSpeakerButton()V

    .line 10340
    sget-object v0, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-eq v1, v0, :cond_43

    .line 10341
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v8}, Landroid/widget/ToggleButton;->setEnabled(Z)V

    .line 10348
    :cond_43
    :goto_17
    const v0, 0x7f0a034a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ToggleButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    .line 10349
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_44

    .line 10350
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10351
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p0}, Landroid/widget/ToggleButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10353
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5e

    .line 10354
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->getMute(Lcom/android/internal/telephony/Phone;)Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 10358
    :goto_18
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v8}, Landroid/widget/ToggleButton;->setEnabled(Z)V

    .line 10361
    :cond_44
    const v0, 0x7f0a0366

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ToggleButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    .line 10362
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_45

    .line 10363
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10364
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p0}, Landroid/widget/ToggleButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10365
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnectedOrPending()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 10368
    :cond_45
    const-string v0, "volume_panel"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_48

    .line 10369
    const v0, 0x7f0a01da

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    .line 10370
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    if-eqz v0, :cond_46

    .line 10371
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, p0}, Landroid/widget/ImageButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10372
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, v8}, Landroid/widget/ImageButton;->setEnabled(Z)V

    .line 10373
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, v10}, Landroid/widget/ImageButton;->setVisibility(I)V

    .line 10376
    :cond_46
    iput-boolean v8, p0, Lcom/android/phone/InVTCallScreen;->mIsShownVolumeBar:Z

    .line 10378
    const v0, 0x7f0a01dc

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/sec/android/touchwiz/widget/TwSeekBar;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    .line 10380
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    if-eqz v0, :cond_47

    .line 10381
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBarChangeListener:Lcom/sec/android/touchwiz/widget/TwSeekBar$OnTwSeekBarChangeListener;

    invoke-virtual {v0, v1}, Lcom/sec/android/touchwiz/widget/TwSeekBar;->setOnTwSeekBarChangeListener(Lcom/sec/android/touchwiz/widget/TwSeekBar$OnTwSeekBarChangeListener;)V

    .line 10384
    :cond_47
    const v0, 0x7f0a01db

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    .line 10385
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_48

    .line 10386
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v11}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10391
    :cond_48
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5f

    .line 10392
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 10396
    :goto_19
    if-eqz v0, :cond_4c

    .line 10398
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->updateDisplayForCaller(Lcom/android/internal/telephony/Connection;)V

    .line 10400
    invoke-static {p0, v0}, Lcom/android/phone/PhoneUtils;->getCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;)Lcom/android/internal/telephony/CallerInfo;

    move-result-object v1

    .line 10402
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_60

    .line 10403
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 10408
    :goto_1a
    const-string v2, "display_additional_caller_info"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_4b

    const-string v2, "phone_kk_tablet_gui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_4b

    .line 10409
    if-eqz v1, :cond_61

    iget-boolean v2, v1, Lcom/android/internal/telephony/CallerInfo;->contactExists:Z

    if-eqz v2, :cond_61

    if-eqz v0, :cond_61

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isDialingOrAlerting()Z

    move-result v0

    if-eqz v0, :cond_61

    .line 10411
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-nez v0, :cond_4a

    .line 10412
    const v0, 0x7f0a01f4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/ViewStub;

    .line 10413
    if-eqz v0, :cond_49

    .line 10414
    invoke-virtual {v0}, Landroid/view/ViewStub;->inflate()Landroid/view/View;

    .line 10415
    :cond_49
    const v0, 0x7f0a0272

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/SocialStatus;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    .line 10418
    :cond_4a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v0, :cond_4b

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_4b

    .line 10420
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    iget-wide v2, v1, Lcom/android/internal/telephony/CallerInfo;->person_id:J

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    invoke-static {v0, v2, v3, v4}, Lcom/android/phone/AdditionalCallerInfoAsyncQuery;->startQuery(Landroid/content/Context;JLcom/android/phone/AdditionalCallerInfoAsyncQuery$OnQueryCompleteListener;)V

    .line 10428
    :cond_4b
    :goto_1b
    if-eqz v1, :cond_62

    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    if-eqz v0, :cond_62

    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_62

    .line 10430
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    sget-object v2, Landroid/provider/ContactsContract$Contacts;->CONTENT_URI:Landroid/net/Uri;

    iget-wide v3, v1, Lcom/android/internal/telephony/CallerInfo;->person_id:J

    invoke-static {v2, v3, v4}, Landroid/content/ContentUris;->withAppendedId(Landroid/net/Uri;J)Landroid/net/Uri;

    move-result-object v2

    new-instance v3, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    const/4 v6, 0x2

    invoke-direct {v3, v4, v5, v1, v6}, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;-><init>(Landroid/widget/ImageView;Landroid/widget/ImageView;Lcom/android/internal/telephony/CallerInfo;I)V

    invoke-static {v7, v0, v2, p0, v3}, Lcom/android/phone/ContactsAsyncHelper;->startObtainPhotoAsync(ILandroid/content/Context;Landroid/net/Uri;Lcom/android/phone/ContactsAsyncHelper$OnImageLoadCompleteListener;Ljava/lang/Object;)V

    .line 10460
    :cond_4c
    :goto_1c
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_66

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v7, :cond_66

    .line 10461
    const v0, 0x7f0a039d

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    .line 10465
    :goto_1d
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_4d

    sget-boolean v0, Lcom/android/phone/PhoneUtils;->mInCallButtonViewDrivingModeByExtra:Z

    if-eqz v0, :cond_1

    .line 10466
    :cond_4d
    const v0, 0x7f0a0391

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 10467
    if-eqz v0, :cond_4e

    .line 10468
    invoke-virtual {v0, v10}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10470
    :cond_4e
    const v0, 0x7f0a0392

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 10471
    if-eqz v0, :cond_4f

    .line 10472
    invoke-virtual {v0, v8}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10474
    :cond_4f
    sget-boolean v0, Lcom/android/phone/PhoneUtils;->mInCallButtonViewDrivingModeByExtra:Z

    if-eqz v0, :cond_1

    .line 10475
    const v0, 0x7f0a03e3

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 10476
    if-eqz v0, :cond_50

    .line 10477
    invoke-virtual {v0, v10}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10478
    :cond_50
    const v0, 0x7f0a03e4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    .line 10479
    if-eqz v0, :cond_1

    .line 10480
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10481
    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10482
    invoke-virtual {v0, v8}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_0

    .line 10199
    :cond_51
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    const v2, 0x7f090185

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(I)V

    goto/16 :goto_e

    .line 10213
    :cond_52
    iput-object v12, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationList:[I

    .line 10214
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    const v2, 0x7f090524

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(I)V

    goto/16 :goto_f

    .line 10231
    :cond_53
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainBackgroundToNormal()V

    goto/16 :goto_10

    .line 10233
    :cond_54
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    const/high16 v2, -0x100

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setBackgroundColor(I)V

    goto/16 :goto_10

    .line 10264
    :cond_55
    invoke-static {}, Lcom/android/phone/PhoneUtils;->getMute()Z

    move-result v0

    if-eqz v0, :cond_3c

    .line 10265
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v7}, Landroid/widget/ToggleButton;->setChecked(Z)V

    goto/16 :goto_11

    .line 10269
    :cond_56
    const v0, 0x7f0a0365

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    .line 10270
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_3c

    .line 10271
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10272
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10273
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-nez v0, :cond_57

    .line 10274
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v2, 0x7f090432

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setText(I)V

    .line 10276
    :cond_57
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    goto/16 :goto_11

    .line 10283
    :cond_58
    const v0, 0x7f0a027e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    goto/16 :goto_12

    .line 10298
    :cond_59
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    goto/16 :goto_13

    .line 10303
    :cond_5a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setEnabled(Z)V

    goto/16 :goto_14

    .line 10315
    :cond_5b
    const v0, 0x7f0a0126

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/EditText;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    goto/16 :goto_15

    .line 10328
    :cond_5c
    const v0, 0x7f0a0363

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    goto/16 :goto_16

    .line 10344
    :cond_5d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v11}, Landroid/widget/ToggleButton;->setVisibility(I)V

    goto/16 :goto_17

    .line 10356
    :cond_5e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-static {}, Lcom/android/phone/PhoneUtils;->getMute()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    goto/16 :goto_18

    .line 10394
    :cond_5f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    goto/16 :goto_19

    .line 10405
    :cond_60
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    goto/16 :goto_1a

    .line 10423
    :cond_61
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v0, :cond_4b

    .line 10424
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    invoke-virtual {v0, v11}, Lcom/android/phone/SocialStatus;->setVisibility(I)V

    goto/16 :goto_1b

    .line 10434
    :cond_62
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_4c

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mUseSavedContactImage:Z

    if-nez v0, :cond_4c

    .line 10435
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v0, :cond_63

    .line 10436
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v0}, Lcom/android/phone/FrameAnimationForVT;->stop()V

    .line 10438
    :cond_63
    iput-object v12, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 10439
    iput-object v12, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    .line 10441
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingAnimation:[I

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    .line 10442
    const-string v0, "caller_animation_small_images"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_65

    .line 10443
    const v0, 0x7f0a03e2

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    .line 10444
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    if-eqz v1, :cond_64

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    if-eqz v1, :cond_64

    if-eqz v0, :cond_64

    .line 10445
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    invoke-virtual {v1, v12}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 10446
    invoke-virtual {v0, v8}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 10447
    new-instance v1, Lcom/android/phone/FrameAnimationForVT;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    const/4 v3, 0x5

    invoke-direct {v1, v0, v2, v3}, Lcom/android/phone/FrameAnimationForVT;-><init>(Landroid/widget/ImageView;[II)V

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 10454
    :cond_64
    :goto_1e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v0, :cond_4c

    .line 10455
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v0}, Lcom/android/phone/FrameAnimationForVT;->start()V

    goto/16 :goto_1c

    .line 10450
    :cond_65
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    if-eqz v0, :cond_64

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    if-eqz v0, :cond_64

    .line 10451
    new-instance v0, Lcom/android/phone/FrameAnimationForVT;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    const/4 v3, 0x5

    invoke-direct {v0, v1, v2, v3}, Lcom/android/phone/FrameAnimationForVT;-><init>(Landroid/widget/ImageView;[II)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    goto :goto_1e

    .line 10463
    :cond_66
    const v0, 0x7f0a037b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    goto/16 :goto_1d

    .line 10493
    :pswitch_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v0, v8}, Lcom/android/phone/InCSVTCallMenu;->setMenuSelected(I)V

    .line 10494
    const-string v0, "In DURINGCALL condn button initialize"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 10495
    const v0, 0x7f0a0367

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    .line 10496
    const v0, 0x7f0a0127

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDTMFDialerLayout:Landroid/widget/LinearLayout;

    .line 10497
    const v0, 0x7f0a0352

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndLayout:Landroid/widget/LinearLayout;

    .line 10498
    const v0, 0x7f0a0351

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerInfoLayout:Landroid/widget/LinearLayout;

    .line 10499
    const v0, 0x7f0a0350

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    .line 10500
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_67

    .line 10501
    const v0, 0x7f0a0395

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/RelativeLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mNearEndArea:Landroid/widget/RelativeLayout;

    .line 10502
    const v0, 0x7f0a0396

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/RelativeLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndArea:Landroid/widget/RelativeLayout;

    .line 10506
    :cond_67
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_69

    .line 10507
    const v0, 0x7f0a0383

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBarOptionmenu:Landroid/widget/ImageButton;

    .line 10508
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBarOptionmenu:Landroid/widget/ImageButton;

    if-eqz v0, :cond_68

    .line 10509
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBarOptionmenu:Landroid/widget/ImageButton;

    invoke-virtual {v0, p0}, Landroid/widget/ImageButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10513
    :cond_68
    const v0, 0x7f0a0384

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingImageScreenButton:Landroid/widget/Button;

    .line 10514
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingImageScreenButton:Landroid/widget/Button;

    if-eqz v0, :cond_69

    .line 10515
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingImageScreenButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10518
    :cond_69
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsRecordSupport:Z

    if-nez v0, :cond_6a

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_6a

    .line 10519
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v10}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10522
    :cond_6a
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_a2

    .line 10523
    const v0, 0x7f0a0393

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    .line 10524
    const v0, 0x7f0a0394

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    .line 10526
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-nez v0, :cond_6b

    .line 10527
    const v0, 0x7f0a027e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    .line 10530
    :cond_6b
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    if-nez v0, :cond_6c

    .line 10531
    const v0, 0x7f0a0363

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    .line 10539
    :cond_6c
    :goto_1f
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6d

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_6e

    .line 10540
    :cond_6d
    const v0, 0x7f0a0100

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    .line 10542
    :cond_6e
    const v0, 0x7f0a0362

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    .line 10543
    const v0, 0x7f0a034a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ToggleButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    .line 10544
    const v0, 0x7f0a036e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    .line 10545
    const v0, 0x7f0a036d

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    .line 10546
    const-string v0, "vt_audio_mixed_recording"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6f

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    if-eqz v0, :cond_6f

    .line 10547
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    const v1, 0x7f0903ac

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(Ljava/lang/CharSequence;)V

    .line 10549
    :cond_6f
    const v0, 0x7f0a036c

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    .line 10551
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsRecordSupport:Z

    if-nez v0, :cond_70

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    if-eqz v0, :cond_70

    .line 10552
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v10}, Landroid/widget/Button;->setVisibility(I)V

    .line 10556
    :cond_70
    const v0, 0x7f0a0369

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    .line 10557
    const v0, 0x7f0a036a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    .line 10558
    const v0, 0x7f0a036b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    .line 10559
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_a3

    .line 10560
    const v0, 0x7f0a0290

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/EditText;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    .line 10563
    :goto_20
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    if-eqz v0, :cond_71

    .line 10564
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    invoke-virtual {v0, v8}, Landroid/widget/EditText;->setWritingBuddyEnabled(Z)V

    .line 10565
    :cond_71
    const v0, 0x7f0a0364

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ToggleButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    .line 10566
    const v0, 0x7f0a0365

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    .line 10567
    const v0, 0x7f0a0366

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ToggleButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    .line 10568
    const v0, 0x7f0a038c

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mNoiseReductionImage:Landroid/widget/ImageView;

    .line 10571
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    if-eqz v0, :cond_72

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_72

    .line 10572
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getAssets()Landroid/content/res/AssetManager;

    move-result-object v1

    const-string v2, "fonts/Num47_TW.ttf"

    invoke-static {v1, v2}, Landroid/graphics/Typeface;->createFromAsset(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/graphics/Typeface;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/EditText;->setTypeface(Landroid/graphics/Typeface;)V

    .line 10576
    :cond_72
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_a4

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v7, :cond_a4

    .line 10577
    const v0, 0x7f0a039d

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    .line 10581
    :goto_21
    const v0, 0x7f0a0374

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    .line 10583
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_74

    .line 10584
    const v0, 0x7f0a038d

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainMenuButton:Landroid/widget/ImageButton;

    .line 10585
    const-string v0, "hw_home_key"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_73

    .line 10586
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainMenuButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, v8}, Landroid/widget/ImageButton;->setVisibility(I)V

    .line 10587
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainMenuButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, p0}, Landroid/widget/ImageButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10590
    :cond_73
    const-string v0, "vt_white_theme"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_a5

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_a5

    .line 10591
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainLandBackgroundToNormal()V

    .line 10596
    :cond_74
    :goto_22
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_75

    .line 10597
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    if-eqz v0, :cond_75

    .line 10598
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    invoke-virtual {v0, v8}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 10602
    :cond_75
    const-string v0, "vt_theme_feature_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_76

    .line 10603
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectUI;->initPreviewEffectUIButtons()V

    .line 10606
    :cond_76
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    const-string v1, ""

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 10607
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v1, ""

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 10610
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_a6

    .line 10611
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 10615
    :goto_23
    if-eqz v0, :cond_77

    .line 10616
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->updateDisplayForCaller(Lcom/android/internal/telephony/Connection;)V

    .line 10619
    :cond_77
    const-string v0, "vt_adjust_screen_brightness"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_78

    .line 10620
    const v0, 0x7f0a0385

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/FrameLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    .line 10621
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    if-eqz v0, :cond_78

    .line 10622
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    invoke-virtual {v0, v10}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 10625
    :cond_78
    const-string v0, "volume_panel"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7b

    .line 10626
    const v0, 0x7f0a01da

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    .line 10627
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    if-eqz v0, :cond_79

    .line 10628
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, p0}, Landroid/widget/ImageButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10629
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, v7}, Landroid/widget/ImageButton;->setEnabled(Z)V

    .line 10632
    :cond_79
    iput-boolean v8, p0, Lcom/android/phone/InVTCallScreen;->mIsShownVolumeBar:Z

    .line 10634
    const v0, 0x7f0a01dc

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/sec/android/touchwiz/widget/TwSeekBar;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    .line 10635
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    if-eqz v0, :cond_7a

    .line 10636
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBarChangeListener:Lcom/sec/android/touchwiz/widget/TwSeekBar$OnTwSeekBarChangeListener;

    invoke-virtual {v0, v1}, Lcom/sec/android/touchwiz/widget/TwSeekBar;->setOnTwSeekBarChangeListener(Lcom/sec/android/touchwiz/widget/TwSeekBar$OnTwSeekBarChangeListener;)V

    .line 10639
    :cond_7a
    const v0, 0x7f0a01db

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    .line 10640
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_7b

    .line 10641
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v11}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10645
    :cond_7b
    const v0, 0x7f0a0378

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    .line 10646
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v10}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 10650
    const v0, 0x7f0a0377

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    .line 10651
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_a7

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v7, :cond_a7

    .line 10652
    const v0, 0x7f0a039f

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    .line 10653
    const v0, 0x7f0a03a0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    .line 10654
    const v0, 0x7f0a03a1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    .line 10660
    :goto_24
    const v0, 0x7f0a037e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    .line 10661
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v10}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10662
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v10}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10663
    const v0, 0x7f0a0379

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    .line 10665
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    if-eqz v0, :cond_7c

    .line 10666
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0, v10}, Landroid/widget/TextView;->setVisibility(I)V

    .line 10669
    :cond_7c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    if-eqz v0, :cond_7d

    .line 10670
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0, v10}, Landroid/widget/TextView;->setVisibility(I)V

    .line 10673
    :cond_7d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    if-nez v0, :cond_7e

    .line 10674
    new-instance v0, Lcom/android/phone/SmallerHitTargetTouchListener;

    invoke-direct {v0}, Lcom/android/phone/SmallerHitTargetTouchListener;-><init>()V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    .line 10677
    :cond_7e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    if-eqz v0, :cond_7f

    .line 10678
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v10}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 10681
    :cond_7f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    if-eqz v0, :cond_80

    .line 10682
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10684
    :cond_80
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    if-eqz v0, :cond_82

    .line 10685
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v0

    if-nez v0, :cond_81

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-nez v0, :cond_81

    .line 10686
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setEnabled(Z)V

    .line 10687
    :cond_81
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10690
    :cond_82
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    if-eqz v0, :cond_83

    .line 10691
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10693
    :cond_83
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_84

    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_84

    .line 10694
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    if-eqz v0, :cond_84

    .line 10695
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v11}, Landroid/widget/Button;->setVisibility(I)V

    .line 10699
    :cond_84
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_86

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->mIsFirstVideoFrameDecoded:Z

    if-nez v0, :cond_86

    .line 10700
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_a8

    .line 10701
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    if-eqz v0, :cond_85

    .line 10702
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v10}, Landroid/widget/Button;->setVisibility(I)V

    .line 10711
    :cond_85
    :goto_25
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    if-eqz v0, :cond_86

    .line 10712
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setEnabled(Z)V

    .line 10716
    :cond_86
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_87

    .line 10717
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10719
    :cond_87
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_88

    .line 10720
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10722
    :cond_88
    const v0, 0x7f0a03a5

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/FrameLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOffLayout:Landroid/widget/FrameLayout;

    .line 10723
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOffLayout:Landroid/widget/FrameLayout;

    if-eqz v0, :cond_8a

    .line 10724
    const v0, 0x7f0a03a7

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOff:Landroid/widget/ImageButton;

    .line 10725
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOff:Landroid/widget/ImageButton;

    if-eqz v0, :cond_89

    .line 10726
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOff:Landroid/widget/ImageButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/ImageButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10727
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOff:Landroid/widget/ImageButton;

    invoke-virtual {v0, p0}, Landroid/widget/ImageButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10730
    :cond_89
    const v0, 0x7f0a03a8

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOffIcon:Landroid/widget/ImageView;

    .line 10731
    const v0, 0x7f0a03a6

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/CircleTimeProgressView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCircleTimeProgressView:Lcom/android/phone/CircleTimeProgressView;

    .line 10733
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isDualCameraEnabled()Z

    move-result v0

    if-eqz v0, :cond_8a

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isDualCameraStarted:Z

    if-eqz v0, :cond_8a

    .line 10736
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v2, v2, Lcom/android/phone/InVTCallState;->mDualCameraEnabledTime:J

    sub-long/2addr v0, v2

    const-wide/16 v2, 0x3e8

    div-long/2addr v0, v2

    .line 10737
    const-wide/16 v2, 0xb4

    cmp-long v0, v0, v2

    if-lez v0, :cond_8a

    .line 10738
    invoke-virtual {p0, v8}, Lcom/android/phone/InVTCallScreen;->requestDualCamera(Z)V

    .line 10739
    invoke-virtual {p0, v8}, Lcom/android/phone/InVTCallScreen;->updateDualCameraLayout(Z)V

    .line 10748
    :cond_8a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_8b

    .line 10749
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10750
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10751
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 10752
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 10754
    :cond_8b
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    if-eqz v0, :cond_8c

    .line 10755
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10756
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10758
    :cond_8c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_8d

    .line 10759
    const-string v0, "no_receiver_in_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_aa

    .line 10760
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10761
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p0}, Landroid/widget/ToggleButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10762
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSpeakerButton()V

    .line 10768
    :cond_8d
    :goto_26
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_90

    .line 10769
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10770
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10772
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_8e

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingEffectLayout()Z

    move-result v0

    if-eqz v0, :cond_8f

    .line 10773
    :cond_8e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f090432

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    .line 10775
    :cond_8f
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 10777
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 10779
    :cond_90
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_92

    .line 10780
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10781
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p0}, Landroid/widget/ToggleButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10782
    const-string v0, "kor_qc_cs_vt"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_ab

    .line 10783
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mMuteEnable:Z

    if-nez v0, :cond_91

    .line 10784
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mMuteEnable:Z

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->updateMuteButton(Z)V

    .line 10785
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x82

    const-wide/16 v2, 0x2710

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 10789
    :cond_91
    :goto_27
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_ac

    .line 10790
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->getMute(Lcom/android/internal/telephony/Phone;)Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 10795
    :cond_92
    :goto_28
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_93

    .line 10796
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10797
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p0}, Landroid/widget/ToggleButton;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 10798
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnectedOrPending()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 10801
    :cond_93
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v0

    if-eqz v0, :cond_94

    .line 10802
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStartRecordingUI()V

    .line 10804
    :cond_94
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-eqz v0, :cond_95

    .line 10805
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStartRecordingUIForNearEnd()V

    .line 10808
    :cond_95
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingEmotionalAni()Z

    move-result v0

    if-eqz v0, :cond_96

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_96

    .line 10809
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateLayoutForDrawEffectUI()V

    .line 10810
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectUI;->updateAutoToggle()V

    .line 10814
    :cond_96
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingThemeView()Z

    move-result v0

    if-eqz v0, :cond_97

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_97

    .line 10815
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateLayoutForDrawEffectUI()V

    .line 10816
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectUI;->restoreThemeViewPanel()V

    .line 10820
    :cond_97
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_98

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->showDialpad:Z

    if-eqz v0, :cond_98

    .line 10821
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->showDTMFDialpad()V

    .line 10824
    :cond_98
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateNoiseReductionImage()V

    .line 10826
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_99

    .line 10828
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showHideFarEndViewAnim()V

    .line 10829
    const v0, 0x7f0a038f

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBlockImageView:Landroid/widget/ImageView;

    .line 10832
    :cond_99
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_9b

    .line 10833
    const v0, 0x7f0a0391

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 10834
    if-eqz v0, :cond_9a

    .line 10835
    invoke-virtual {v0, v10}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10836
    :cond_9a
    const v0, 0x7f0a0392

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 10837
    if-eqz v0, :cond_9b

    .line 10838
    invoke-virtual {v0, v8}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 10841
    :cond_9b
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_a0

    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_a0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_a0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_a0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_a0

    .line 10842
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_9c

    const-string v0, "no_receiver_in_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_9c

    .line 10843
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v11}, Landroid/widget/Button;->setVisibility(I)V

    .line 10845
    :cond_9c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_9d

    .line 10846
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v8}, Landroid/widget/ToggleButton;->setVisibility(I)V

    .line 10848
    :cond_9d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-nez v0, :cond_9f

    const-string v0, "phone_kk_tablet_gui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_9f

    .line 10849
    const v0, 0x7f0a01f4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/ViewStub;

    .line 10850
    if-eqz v0, :cond_9e

    .line 10851
    invoke-virtual {v0}, Landroid/view/ViewStub;->inflate()Landroid/view/View;

    .line 10852
    :cond_9e
    const v0, 0x7f0a0272

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/SocialStatus;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    .line 10854
    :cond_9f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v0, :cond_a0

    .line 10855
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    invoke-virtual {v0, v11}, Lcom/android/phone/SocialStatus;->setVisibility(I)V

    .line 10858
    :cond_a0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_a1

    .line 10859
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->restoreFocusedButtonIndex()V

    .line 10861
    :cond_a1
    const-string v0, "Exit DURINGCALL condn button initialize"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 10535
    :cond_a2
    const v0, 0x7f0a027e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    .line 10536
    const v0, 0x7f0a0363

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    goto/16 :goto_1f

    .line 10562
    :cond_a3
    const v0, 0x7f0a0126

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/EditText;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerEditText:Landroid/widget/EditText;

    goto/16 :goto_20

    .line 10579
    :cond_a4
    const v0, 0x7f0a037b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    goto/16 :goto_21

    .line 10593
    :cond_a5
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainBackgroundToNormal()V

    goto/16 :goto_22

    .line 10613
    :cond_a6
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    goto/16 :goto_23

    .line 10656
    :cond_a7
    const v0, 0x7f0a037e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    .line 10657
    const v0, 0x7f0a037f

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    .line 10658
    const v0, 0x7f0a0380

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    goto/16 :goto_24

    .line 10704
    :cond_a8
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    if-eqz v0, :cond_a9

    .line 10705
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setEnabled(Z)V

    .line 10707
    :cond_a9
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    if-eqz v0, :cond_85

    .line 10708
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setEnabled(Z)V

    goto/16 :goto_25

    .line 10764
    :cond_aa
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v11}, Landroid/widget/ToggleButton;->setVisibility(I)V

    goto/16 :goto_26

    .line 10787
    :cond_ab
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_91

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_91

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_91

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_91

    .line 10788
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v7}, Landroid/widget/ToggleButton;->setEnabled(Z)V

    goto/16 :goto_27

    .line 10792
    :cond_ac
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-static {}, Lcom/android/phone/PhoneUtils;->getMute()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    goto/16 :goto_28

    .line 9831
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch

    .line 10194
    :array_0
    .array-data 0x4
        0x3ft 0x1t 0x2t 0x7ft
        0x40t 0x1t 0x2t 0x7ft
        0x41t 0x1t 0x2t 0x7ft
    .end array-data
.end method

.method private capture_farend_view(J)V
    .locals 8
    .parameter

    .prologue
    const/4 v7, 0x0

    const/16 v6, 0x7e

    const/16 v5, 0x80

    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 13214
    const-string v0, "In capture_farend_view method"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13215
    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->checkStorageMemorySpace(Z)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 13216
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->isFarEndCapture:Z

    .line 13218
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v0}, Landroid/graphics/drawable/AnimationDrawable;->isRunning()Z

    move-result v0

    if-nez v0, :cond_0

    .line 13219
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v5}, Landroid/os/Handler;->removeMessages(I)V

    .line 13220
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v0}, Landroid/graphics/drawable/AnimationDrawable;->stop()V

    .line 13221
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    .line 13223
    :cond_0
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->imageCaptureAnimation()V

    .line 13224
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    if-eqz v0, :cond_3

    .line 13225
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 13226
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v5}, Landroid/os/Handler;->removeMessages(I)V

    .line 13227
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const-wide/16 v1, 0x28a

    invoke-virtual {v0, v5, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 13228
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v0}, Landroid/graphics/drawable/AnimationDrawable;->start()V

    .line 13229
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    invoke-virtual {v0, v3}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 13233
    :goto_0
    const v0, 0x7f090435

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->displayToast(I)V

    .line 13235
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 13236
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-direct {p0, v3, v3}, Lcom/android/phone/InVTCallScreen;->GetValidFileName(ZZ)Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    .line 13242
    :goto_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Capture File Name : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13243
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mRecordingAlert:Z

    .line 13244
    const-string v0, "data/data/com.android.phone/files/video_call_capture.jpg"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    .line 13245
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v6}, Landroid/os/Handler;->removeMessages(I)V

    .line 13246
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const-wide/16 v1, 0x1388

    invoke-virtual {v0, v6, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 13248
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_1

    .line 13249
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    invoke-virtual {v0, v1, v4}, Lsiso/vt/VTManager;->CaptureImage(Ljava/lang/String;Z)V

    .line 13251
    :cond_1
    new-array v0, v4, [Ljava/lang/String;

    .line 13252
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    aput-object v1, v0, v3

    .line 13254
    const-string v1, "kor_cs_vt_ui"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 13255
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->doScrambleImage(Ljava/lang/String;)V

    .line 13258
    :cond_2
    new-instance v1, Lcom/android/phone/InVTCallScreen$64;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$64;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-static {p0, v0, v7, v1}, Landroid/media/MediaScannerConnection;->scanFile(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V

    .line 13274
    :goto_2
    return-void

    .line 13231
    :cond_3
    const-string v0, "mCaptureImageAnimation == null!"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 13239
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->GetValidFileName(Z)Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    goto :goto_1

    .line 13266
    :cond_5
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_6

    .line 13267
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v4}, Landroid/widget/Button;->setEnabled(Z)V

    .line 13268
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v4}, Landroid/widget/Button;->setEnabled(Z)V

    .line 13269
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    .line 13272
    :cond_6
    const/16 v0, 0x8

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto :goto_2
.end method

.method private changePhone(Lcom/android/internal/telephony/Phone;)V
    .locals 4
    .parameter "phone"

    .prologue
    const/4 v3, 0x0

    .line 15703
    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v1, :cond_0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "InVTCallScreen: changePhone() to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-interface {p1}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15705
    :cond_0
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/phone/PhoneGlobals;->getApplicationContext()Landroid/content/Context;

    move-result-object v1

    const-string v2, "audio"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/media/AudioManager;

    .line 15707
    .local v0, audioManager:Landroid/media/AudioManager;
    invoke-interface {p1}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v1

    if-nez v1, :cond_1

    .line 15708
    const-string v1, "phone_type=cp1"

    invoke-virtual {v0, v1}, Landroid/media/AudioManager;->setParameters(Ljava/lang/String;)V

    .line 15712
    :goto_0
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1, p1}, Lcom/android/phone/PhoneGlobals;->setCurrentPhone(Lcom/android/internal/telephony/Phone;)V

    .line 15713
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    if-eqz v1, :cond_3

    .line 15714
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mHasDelayedChangePhone:Z

    if-eqz v1, :cond_2

    .line 15715
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mHasDelayedChangePhone:Z

    .line 15722
    :goto_1
    return-void

    .line 15710
    :cond_1
    const-string v1, "phone_type=cp2"

    invoke-virtual {v0, v1}, Landroid/media/AudioManager;->setParameters(Ljava/lang/String;)V

    goto :goto_0

    .line 15717
    :cond_2
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    goto :goto_1

    .line 15720
    :cond_3
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/phone/PhoneGlobals;->displayCallScreen()V

    goto :goto_1
.end method

.method private checkForCleanupState()Z
    .locals 6

    .prologue
    const/4 v3, 0x0

    const/4 v4, 0x1

    .line 7108
    const-string v5, "feature_chn_duos"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 7109
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v5}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    .line 7110
    .local v2, state:Lcom/android/internal/telephony/PhoneConstants$State;
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 7111
    .local v0, fgCall:Lcom/android/internal/telephony/Call;
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    .line 7117
    .local v1, ringingCall:Lcom/android/internal/telephony/Call;
    :goto_0
    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v2, v5, :cond_3

    .line 7118
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 7130
    :cond_0
    :goto_1
    return v3

    .line 7113
    .end local v0           #fgCall:Lcom/android/internal/telephony/Call;
    .end local v1           #ringingCall:Lcom/android/internal/telephony/Call;
    .end local v2           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    :cond_1
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v5}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    .line 7114
    .restart local v2       #state:Lcom/android/internal/telephony/PhoneConstants$State;
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .line 7115
    .restart local v0       #fgCall:Lcom/android/internal/telephony/Call;
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    .restart local v1       #ringingCall:Lcom/android/internal/telephony/Call;
    goto :goto_0

    :cond_2
    move v3, v4

    .line 7121
    goto :goto_1

    .line 7123
    :cond_3
    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v2, v5, :cond_4

    .line 7124
    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v5

    if-nez v5, :cond_0

    move v3, v4

    .line 7127
    goto :goto_1

    :cond_4
    move v3, v4

    .line 7130
    goto :goto_1
.end method

.method private checkIfOkToInitiateOutgoingCall(I)Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    .locals 8
    .parameter

    .prologue
    const/4 v7, 0x3

    const/4 v6, 0x2

    const/4 v5, 0x1

    .line 6945
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "checkIfOkToInitiateOutgoingCall: ServiceState = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6947
    const-string v0, "feature_ktt"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "feature_kor_open"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 6949
    :cond_0
    packed-switch p1, :pswitch_data_0

    .line 7080
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unexpected ServiceState: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6952
    :pswitch_0
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    .line 7098
    :goto_0
    return-object v0

    .line 6956
    :pswitch_1
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->POWER_OFF:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto :goto_0

    .line 6963
    :pswitch_2
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto :goto_0

    .line 6968
    :pswitch_3
    const-string v0, "ril.skt.network_regist"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 6969
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "checkIfOkToInitiateOutgoingCall: ril = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6970
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_6

    const-string v1, "Idle"

    invoke-virtual {v0, v1}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v1

    const/4 v2, -0x1

    if-le v1, v2, :cond_6

    .line 6972
    const-string v1, ";"

    const/4 v2, 0x4

    invoke-virtual {v0, v1, v2}, Ljava/lang/String;->split(Ljava/lang/String;I)[Ljava/lang/String;

    move-result-object v0

    .line 6973
    const/4 v1, 0x0

    aget-object v1, v0, v1

    const-string v2, "Status"

    invoke-virtual {v1, v2}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 6974
    aget-object v1, v1, v5

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v1

    .line 6975
    aget-object v2, v0, v6

    const-string v3, "CS"

    invoke-virtual {v2, v3}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v2

    .line 6976
    aget-object v2, v2, v5

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    .line 6977
    aget-object v3, v0, v7

    const-string v4, "PS"

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    .line 6978
    aget-object v3, v3, v5

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v3

    .line 6979
    aget-object v0, v0, v5

    const-string v4, "Idle"

    invoke-virtual {v0, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 6980
    aget-object v0, v0, v5

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    .line 6982
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Status = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", Idle = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", Cs = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", Ps = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6984
    if-nez v1, :cond_1

    .line 6985
    sparse-switch v0, :sswitch_data_0

    .line 6993
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->STATE_OUT_OF_SERVICE:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 6989
    :sswitch_0
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REG_FAIL:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 6991
    :sswitch_1
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REGSTERING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 6998
    :cond_1
    const-string v4, "feature_ktt"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 7000
    sparse-switch v0, :sswitch_data_1

    .line 7045
    :cond_2
    if-eq v1, v7, :cond_3

    const/16 v0, 0xd

    if-eq v1, v0, :cond_3

    if-eqz v2, :cond_6

    if-eqz v3, :cond_6

    .line 7047
    :cond_3
    packed-switch v2, :pswitch_data_1

    .line 7067
    :pswitch_4
    if-ne v3, v6, :cond_5

    .line 7068
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->IMSI_UNKNOWN:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7002
    :sswitch_2
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REGSTERING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7004
    :sswitch_3
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_SKT_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7006
    :sswitch_4
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->IMSI_UNKNOWN:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7008
    :sswitch_5
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_MS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7010
    :sswitch_6
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_ME:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7018
    :sswitch_7
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REG_FAIL:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7022
    :sswitch_8
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REGSTERING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7024
    :cond_4
    const-string v0, "feature_kor_open"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7025
    sparse-switch v2, :sswitch_data_2

    .line 7040
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REG_FAIL:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7031
    :sswitch_9
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_ME:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7034
    :sswitch_a
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->NETWORK_REG_FAIL:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7038
    :sswitch_b
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REGSTERING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7049
    :pswitch_5
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->IMSI_UNKNOWN:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7051
    :pswitch_6
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_MS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7053
    :pswitch_7
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_ME:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7061
    :pswitch_8
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REG_FAIL:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7065
    :pswitch_9
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REGSTERING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7070
    :cond_5
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7077
    :cond_6
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->STATE_OUT_OF_SERVICE:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7083
    :cond_7
    packed-switch p1, :pswitch_data_2

    .line 7100
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unexpected ServiceState: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7086
    :pswitch_a
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7090
    :pswitch_b
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->POWER_OFF:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7093
    :pswitch_c
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->STATE_OUT_OF_SERVICE:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 7098
    :pswitch_d
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_0

    .line 6949
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_3
        :pswitch_2
        :pswitch_1
    .end packed-switch

    .line 6985
    :sswitch_data_0
    .sparse-switch
        0xc -> :sswitch_0
        0xd -> :sswitch_0
        0xf -> :sswitch_0
        0xfe -> :sswitch_1
    .end sparse-switch

    .line 7000
    :sswitch_data_1
    .sparse-switch
        0x2 -> :sswitch_4
        0x3 -> :sswitch_5
        0x6 -> :sswitch_6
        0x7 -> :sswitch_7
        0x8 -> :sswitch_7
        0xb -> :sswitch_7
        0xc -> :sswitch_7
        0xd -> :sswitch_7
        0xe -> :sswitch_7
        0xf -> :sswitch_7
        0x10 -> :sswitch_8
        0x11 -> :sswitch_8
        0x16 -> :sswitch_8
        0xfe -> :sswitch_2
        0xff -> :sswitch_3
    .end sparse-switch

    .line 7047
    :pswitch_data_1
    .packed-switch 0x2
        :pswitch_5
        :pswitch_6
        :pswitch_4
        :pswitch_4
        :pswitch_7
        :pswitch_8
        :pswitch_8
        :pswitch_4
        :pswitch_4
        :pswitch_8
        :pswitch_8
        :pswitch_8
        :pswitch_8
        :pswitch_8
        :pswitch_9
        :pswitch_9
        :pswitch_4
        :pswitch_4
        :pswitch_4
        :pswitch_4
        :pswitch_9
    .end packed-switch

    .line 7025
    :sswitch_data_2
    .sparse-switch
        0x2 -> :sswitch_9
        0x3 -> :sswitch_9
        0x6 -> :sswitch_9
        0x7 -> :sswitch_a
        0xe -> :sswitch_a
        0x10 -> :sswitch_b
        0x11 -> :sswitch_b
        0x16 -> :sswitch_b
    .end sparse-switch

    .line 7083
    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_a
        :pswitch_c
        :pswitch_d
        :pswitch_b
    .end packed-switch
.end method

.method private checkPresetImg()V
    .locals 4

    .prologue
    .line 14227
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "preset_path"

    invoke-static {v2, v3}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 14228
    .local v1, presetImgPath:Ljava/lang/String;
    const/4 v0, 0x1

    .line 14230
    .local v0, defaultPresetImg:Z
    if-eqz v1, :cond_2

    .line 14231
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "checkPresetImgPath():: defaultPresetImg = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14232
    const-string v2, "data/data/com.android.phone/files/preset_defaultimage.jpg"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 14233
    const/4 v0, 0x1

    .line 14238
    :goto_0
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v2, :cond_0

    .line 14239
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v2, v1}, Lsiso/vt/VTManager;->setPresetImg(Ljava/lang/String;)V

    .line 14245
    :cond_0
    :goto_1
    return-void

    .line 14235
    :cond_1
    const/4 v0, 0x0

    .line 14236
    const-string v2, "checkPresetImgPath():: defaultPresetImg is false"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 14241
    :cond_2
    const-string v2, "checkPresetImgPath():: presetImgPath is null!!"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_1
.end method

.method private checkStorageMemorySpace(Z)Z
    .locals 12
    .parameter "checkForVideo"

    .prologue
    const/4 v6, 0x1

    const/4 v7, 0x0

    .line 13116
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    .line 13117
    .local v2, lCurrTime:J
    new-instance v4, Ljava/io/File;

    const-string v8, "/sdcard/"

    invoke-direct {v4, v8}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 13118
    .local v4, path:Ljava/io/File;
    new-instance v5, Landroid/os/StatFs;

    invoke-virtual {v4}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v5, v8}, Landroid/os/StatFs;-><init>(Ljava/lang/String;)V

    .line 13119
    .local v5, stat:Landroid/os/StatFs;
    invoke-virtual {v5}, Landroid/os/StatFs;->getAvailableBlocks()I

    move-result v8

    int-to-long v8, v8

    invoke-virtual {v5}, Landroid/os/StatFs;->getBlockSize()I

    move-result v10

    int-to-long v10, v10

    mul-long/2addr v8, v10

    const-wide/16 v10, 0x400

    div-long v0, v8, v10

    .line 13120
    .local v0, availableSize:J
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Memory Size Avialable is in Kb : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {p0, v8}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13121
    if-eqz p1, :cond_2

    .line 13122
    const-wide/16 v8, 0x2710

    cmp-long v8, v0, v8

    if-lez v8, :cond_1

    .line 13132
    :cond_0
    :goto_0
    return v6

    :cond_1
    move v6, v7

    .line 13126
    goto :goto_0

    .line 13129
    :cond_2
    const-wide/16 v8, 0x3e8

    cmp-long v8, v0, v8

    if-gtz v8, :cond_0

    move v6, v7

    .line 13132
    goto :goto_0
.end method

.method private continueOnDisconnection()V
    .locals 4

    .prologue
    const/4 v3, 0x0

    .line 1700
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 1701
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v1

    if-nez v1, :cond_0

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .line 1711
    .local v0, notifier:Lcom/android/phone/CallNotifier;
    :goto_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->disconnectMsg:Landroid/os/Message;

    iget-object v1, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v1, Landroid/os/AsyncResult;

    invoke-virtual {v0, v1, v3}, Lcom/android/phone/CallNotifier;->continueDisconnectionAfterVTStackCleanup(Landroid/os/AsyncResult;Z)V

    .line 1713
    sput-boolean v3, Lcom/android/phone/InVTCallScreen;->disconnectDueToLowBattery:Z

    .line 1714
    return-void

    .line 1701
    .end local v0           #notifier:Lcom/android/phone/CallNotifier;
    :cond_0
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier2:Lcom/android/phone/CallNotifier;

    goto :goto_0

    .line 1702
    :cond_1
    const-string v1, "sec_product_feature_common_dsds_support"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 1703
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v2}, Lcom/android/phone/PhoneUtilsDsds;->getSubscription(Lcom/android/internal/telephony/Phone;)I

    move-result v2

    aget-object v0, v1, v2

    .restart local v0       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_0

    .line 1704
    .end local v0           #notifier:Lcom/android/phone/CallNotifier;
    :cond_2
    const-string v1, "feature_multisim"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 1705
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getSimSlot()I

    move-result v2

    aget-object v0, v1, v2

    .restart local v0       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_0

    .line 1707
    .end local v0           #notifier:Lcom/android/phone/CallNotifier;
    :cond_3
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .restart local v0       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_0
.end method

.method private createDefaultImages()V
    .locals 6

    .prologue
    const/4 v5, -0x1

    .line 1852
    const/4 v1, 0x0

    .line 1856
    :try_start_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    .line 1857
    const v0, 0x7f020776

    invoke-virtual {v2, v0}, Landroid/content/res/Resources;->openRawResource(I)Ljava/io/InputStream;

    move-result-object v1

    .line 1858
    new-instance v0, Ljava/io/File;

    const-string v3, "data/data/com.android.phone/files/video_call_recording_start.jpg"

    invoke-direct {v0, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 1859
    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v0

    if-nez v0, :cond_1

    .line 1860
    const-string v0, "video_call_recording_start.jpg"

    const/4 v3, 0x0

    invoke-virtual {p0, v0, v3}, Lcom/android/phone/InVTCallScreen;->openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_0 .. :try_end_0} :catch_4

    move-result-object v3

    .line 1862
    if-eqz v1, :cond_0

    .line 1865
    :try_start_1
    invoke-virtual {v1}, Ljava/io/InputStream;->available()I

    move-result v0

    new-array v0, v0, [B

    .line 1866
    invoke-virtual {v1, v0}, Ljava/io/InputStream;->read([B)I

    move-result v4

    if-eq v4, v5, :cond_0

    .line 1867
    invoke-virtual {v3, v0}, Ljava/io/OutputStream;->write([B)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_1 .. :try_end_1} :catch_3

    .line 1874
    :cond_0
    :goto_0
    :try_start_2
    invoke-virtual {v3}, Ljava/io/OutputStream;->close()V

    .line 1876
    :cond_1
    if-eqz v1, :cond_2

    .line 1877
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V

    .line 1879
    :cond_2
    const v0, 0x7f020707

    invoke-virtual {v2, v0}, Landroid/content/res/Resources;->openRawResource(I)Ljava/io/InputStream;

    move-result-object v1

    .line 1880
    new-instance v0, Ljava/io/File;

    const-string v3, "data/data/com.android.phone/files/video_call_capture.jpg"

    invoke-direct {v0, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 1881
    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v0

    if-nez v0, :cond_4

    .line 1882
    const-string v0, "video_call_capture.jpg"

    const/4 v3, 0x0

    invoke-virtual {p0, v0, v3}, Lcom/android/phone/InVTCallScreen;->openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_2 .. :try_end_2} :catch_4

    move-result-object v3

    .line 1884
    if-eqz v1, :cond_3

    .line 1887
    :try_start_3
    invoke-virtual {v1}, Ljava/io/InputStream;->available()I

    move-result v0

    new-array v0, v0, [B

    .line 1888
    invoke-virtual {v1, v0}, Ljava/io/InputStream;->read([B)I

    move-result v4

    if-eq v4, v5, :cond_3

    .line 1889
    invoke-virtual {v3, v0}, Ljava/io/OutputStream;->write([B)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_6
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_3 .. :try_end_3} :catch_7

    .line 1896
    :cond_3
    :goto_1
    :try_start_4
    invoke-virtual {v3}, Ljava/io/OutputStream;->close()V

    .line 1898
    :cond_4
    if-eqz v1, :cond_5

    .line 1899
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V

    .line 1901
    :cond_5
    const v0, 0x7f02057e

    invoke-virtual {v2, v0}, Landroid/content/res/Resources;->openRawResource(I)Ljava/io/InputStream;

    move-result-object v1

    .line 1902
    new-instance v0, Ljava/io/File;

    const-string v2, "data/data/com.android.phone/files/preset_defaultimage.jpg"

    invoke-direct {v0, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 1903
    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v0

    if-nez v0, :cond_7

    .line 1904
    const-string v0, "preset_defaultimage.jpg"

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v2}, Lcom/android/phone/InVTCallScreen;->openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_4 .. :try_end_4} :catch_4

    move-result-object v2

    .line 1906
    if-eqz v1, :cond_6

    .line 1909
    :try_start_5
    invoke-virtual {v1}, Ljava/io/InputStream;->available()I

    move-result v0

    new-array v0, v0, [B

    .line 1910
    invoke-virtual {v1, v0}, Ljava/io/InputStream;->read([B)I

    move-result v3

    if-eq v3, v5, :cond_6

    .line 1911
    invoke-virtual {v2, v0}, Ljava/io/OutputStream;->write([B)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_8
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_5 .. :try_end_5} :catch_9

    .line 1918
    :cond_6
    :goto_2
    :try_start_6
    invoke-virtual {v2}, Ljava/io/OutputStream;->close()V

    .line 1920
    :cond_7
    if-eqz v1, :cond_8

    .line 1921
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_6 .. :try_end_6} :catch_4

    .line 1930
    :cond_8
    if-eqz v1, :cond_9

    .line 1931
    :try_start_7
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_a

    .line 1936
    :cond_9
    :goto_3
    return-void

    .line 1868
    :catch_0
    move-exception v0

    .line 1869
    :try_start_8
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_8 .. :try_end_8} :catch_4

    goto :goto_0

    .line 1922
    :catch_1
    move-exception v0

    .line 1923
    :try_start_9
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    .line 1930
    if-eqz v1, :cond_9

    .line 1931
    :try_start_a
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_2

    goto :goto_3

    .line 1932
    :catch_2
    move-exception v0

    goto :goto_3

    .line 1870
    :catch_3
    move-exception v0

    .line 1871
    :try_start_b
    invoke-virtual {v0}, Landroid/content/res/Resources$NotFoundException;->printStackTrace()V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0
    .catch Ljava/io/IOException; {:try_start_b .. :try_end_b} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_b .. :try_end_b} :catch_4

    goto/16 :goto_0

    .line 1924
    :catch_4
    move-exception v0

    .line 1925
    :try_start_c
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Error::Can\'t find drawable: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    .line 1930
    if-eqz v1, :cond_9

    .line 1931
    :try_start_d
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_d
    .catch Ljava/io/IOException; {:try_start_d .. :try_end_d} :catch_5

    goto :goto_3

    .line 1932
    :catch_5
    move-exception v0

    goto :goto_3

    .line 1890
    :catch_6
    move-exception v0

    .line 1891
    :try_start_e
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_0
    .catch Ljava/io/IOException; {:try_start_e .. :try_end_e} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_e .. :try_end_e} :catch_4

    goto :goto_1

    .line 1929
    :catchall_0
    move-exception v0

    .line 1930
    if-eqz v1, :cond_a

    .line 1931
    :try_start_f
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_f
    .catch Ljava/io/IOException; {:try_start_f .. :try_end_f} :catch_b

    .line 1934
    :cond_a
    :goto_4
    throw v0

    .line 1892
    :catch_7
    move-exception v0

    .line 1893
    :try_start_10
    invoke-virtual {v0}, Landroid/content/res/Resources$NotFoundException;->printStackTrace()V

    goto/16 :goto_1

    .line 1912
    :catch_8
    move-exception v0

    .line 1913
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2

    .line 1914
    :catch_9
    move-exception v0

    .line 1915
    invoke-virtual {v0}, Landroid/content/res/Resources$NotFoundException;->printStackTrace()V
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_0
    .catch Ljava/io/IOException; {:try_start_10 .. :try_end_10} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_10 .. :try_end_10} :catch_4

    goto :goto_2

    .line 1932
    :catch_a
    move-exception v0

    goto :goto_3

    :catch_b
    move-exception v1

    goto :goto_4
.end method

.method private delayedCleanupAfterDisconnect()V
    .locals 4

    .prologue
    const/16 v3, 0x6c

    const/4 v2, 0x0

    .line 7147
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7148
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "delayedCleanupAfterDisconnect()...  Phone state = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7154
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v3}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7155
    const-string v0, "delayedCleanupAfterDisconnect(): remove unnecessary messages"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7156
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v3}, Landroid/os/Handler;->removeMessages(I)V

    .line 7169
    :cond_0
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 7170
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->clearDisconnected()V

    .line 7175
    :goto_1
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->checkForCleanupState()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 7177
    const-string v0, "- delayedCleanupAfterDisconnect: phone is idle..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7179
    const-string v0, "After internalHangup call the calllog -Exit"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7180
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isVTCallAlreadyStop:Z

    .line 7181
    iput v2, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 7182
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->endInVTCallScreenSession()V

    .line 7196
    :cond_1
    :goto_2
    iput v2, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 7197
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isVTCallAlreadyStop:Z

    .line 7198
    return-void

    .line 7150
    :cond_2
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "delayedCleanupAfterDisconnect()...  Phone state = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v1}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    goto :goto_0

    .line 7172
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->clearDisconnected()V

    goto :goto_1

    .line 7186
    :cond_4
    const-string v0, "- delayedCleanupAfterDisconnect: staying on the InVTCallScreen..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7187
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_5

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->dumpCallState(Lcom/android/internal/telephony/Phone;)V

    .line 7189
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v0

    if-nez v0, :cond_1

    .line 7190
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v1, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->CALL_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v0, v1, :cond_1

    .line 7191
    const-string v0, "- delayedCleanupAfterDisconnect: has new incoming video call, Set screen mode to NORMAL"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7192
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    goto :goto_2
.end method

.method private dialPadControlHandlerOptionMenu()V
    .locals 2

    .prologue
    .line 14957
    const-string v0, "Dialer Pad Already Not open"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14958
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_0

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 14959
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->resetControls()V

    .line 14960
    :cond_0
    return-void
.end method

.method private disableControls()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 9774
    const-string v0, "Disable the Controls during Disconnection"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9775
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_2

    .line 9776
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_2

    .line 9777
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 9778
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 9779
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setEnabled(Z)V

    .line 9781
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 9782
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setEnabled(Z)V

    .line 9785
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    if-eqz v0, :cond_2

    .line 9786
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setEnabled(Z)V

    .line 9791
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean v2, v0, Lcom/android/phone/InVTCallState;->mIsFirstVideoFrameDecoded:Z

    .line 9792
    return-void
.end method

.method private disableEndCallButton()V
    .locals 2

    .prologue
    const/4 v1, 0x0

    .line 14993
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 14994
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 14995
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 14996
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 14997
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    if-eqz v0, :cond_2

    .line 14998
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 14999
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCreateButton:Landroid/widget/Button;

    if-eqz v0, :cond_3

    .line 15000
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCreateButton:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 15001
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpdateButton:Landroid/widget/Button;

    if-eqz v0, :cond_4

    .line 15002
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpdateButton:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 15003
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mViewContact:Landroid/widget/Button;

    if-eqz v0, :cond_5

    .line 15004
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mViewContact:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 15005
    :cond_5
    const-string v0, "ip_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 15006
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_6

    .line 15007
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 15009
    :cond_6
    return-void
.end method

.method private dismissAllDialogs()V
    .locals 2

    .prologue
    const/4 v1, 0x0

    .line 8466
    const-string v0, "dismissAllDialogs()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8473
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMissingVoicemailDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_0

    .line 8474
    const-string v0, "- DISMISSING mMissingVoicemailDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8475
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMissingVoicemailDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8476
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMissingVoicemailDialog:Landroid/app/AlertDialog;

    .line 8478
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    if-eqz v0, :cond_1

    .line 8479
    const-string v0, "- DISMISSING mMmiStartedDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8480
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->dismiss()V

    .line 8481
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    .line 8483
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_2

    .line 8484
    const-string v0, "- DISMISSING mGenericErrorDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8485
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8486
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    .line 8488
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_3

    .line 8489
    const-string v0, "- DISMISSING mSuppServiceFailureDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8490
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8491
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    .line 8493
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_4

    .line 8494
    const-string v0, "- DISMISSING mWaitPromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8495
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8496
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    .line 8498
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWildPromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_5

    .line 8499
    const-string v0, "- DISMISSING mWildPromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8500
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWildPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8501
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mWildPromptDialog:Landroid/app/AlertDialog;

    .line 8503
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallLostDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_6

    .line 8504
    const-string v0, "- DISMISSING mCallLostDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8505
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallLostDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8506
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallLostDialog:Landroid/app/AlertDialog;

    .line 8509
    :cond_6
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_7

    .line 8510
    const-string v0, "- DISMISSING mPausePromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8511
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8512
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    .line 8514
    :cond_7
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    if-eqz v0, :cond_8

    .line 8515
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    invoke-virtual {v0}, Landroid/app/ProgressDialog;->dismiss()V

    .line 8516
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    .line 8518
    :cond_8
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialogVoiceCall:Landroid/app/Dialog;

    if-eqz v0, :cond_9

    .line 8519
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialogVoiceCall:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->dismiss()V

    .line 8520
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialogVoiceCall:Landroid/app/Dialog;

    .line 8523
    :cond_9
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_a

    .line 8524
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 8525
    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    .line 8528
    :cond_a
    return-void
.end method

.method private dismissContextDailogBox()V
    .locals 1

    .prologue
    .line 4646
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->isShowing()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4647
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->dismiss()V

    .line 4648
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    .line 4650
    :cond_0
    return-void
.end method

.method private dismissMmiStartedDialog()V
    .locals 1

    .prologue
    .line 6159
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    if-eqz v0, :cond_0

    .line 6160
    const-string v0, "dismissMmiStartedDialog().."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6161
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->dismiss()V

    .line 6162
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    .line 6164
    :cond_0
    return-void
.end method

.method private dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;Landroid/view/View;)V
    .locals 3
    .parameter "event"
    .parameter "view"

    .prologue
    .line 14762
    invoke-virtual {p1}, Landroid/view/accessibility/AccessibilityEvent;->getText()Ljava/util/List;

    move-result-object v0

    .line 14763
    .local v0, eventText:Ljava/util/List;,"Ljava/util/List<Ljava/lang/CharSequence;>;"
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    .line 14764
    .local v1, size:I
    invoke-virtual {p2, p1}, Landroid/view/View;->dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)Z

    .line 14766
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ne v1, v2, :cond_0

    .line 14767
    const/4 v2, 0x0

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 14769
    :cond_0
    return-void
.end method

.method private displayToast(I)V
    .locals 1
    .parameter "aResId"

    .prologue
    .line 12037
    const/4 v0, 0x1

    invoke-static {p0, p1, v0}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    .line 12038
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    if-eqz v0, :cond_0

    .line 12039
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    .line 12040
    :cond_0
    return-void
.end method

.method private doScrambleImage(Ljava/lang/String;)V
    .locals 11
    .parameter "fullpath"

    .prologue
    .line 14603
    const/16 v8, 0x20

    .line 14604
    .local v8, scramblesize:I
    const/4 v2, 0x0

    .line 14607
    .local v2, datalength:I
    new-instance v1, Ljava/io/File;

    invoke-direct {v1, p1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 14610
    .local v1, capturedImageFile:Ljava/io/File;
    const/4 v4, 0x0

    .line 14611
    .local v4, inputStream:Ljava/io/BufferedInputStream;
    const/4 v6, 0x0

    .line 14612
    .local v6, outStream:Ljava/io/FileOutputStream;
    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v9

    if-eqz v9, :cond_2

    .line 14614
    const-string v9, "doScrambleImage - file exsits "

    invoke-direct {p0, v9}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14617
    :try_start_0
    new-instance v5, Ljava/io/BufferedInputStream;

    new-instance v9, Ljava/io/FileInputStream;

    invoke-direct {v9, p1}, Ljava/io/FileInputStream;-><init>(Ljava/lang/String;)V

    invoke-direct {v5, v9}, Ljava/io/BufferedInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14618
    .end local v4           #inputStream:Ljava/io/BufferedInputStream;
    .local v5, inputStream:Ljava/io/BufferedInputStream;
    :try_start_1
    invoke-virtual {v5}, Ljava/io/BufferedInputStream;->available()I

    move-result v2

    .line 14619
    new-array v0, v2, [B
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_3

    .local v0, bufArray:[B
    move-object v7, v6

    .line 14621
    .end local v6           #outStream:Ljava/io/FileOutputStream;
    .local v7, outStream:Ljava/io/FileOutputStream;
    :goto_0
    :try_start_2
    invoke-virtual {v5, v0}, Ljava/io/BufferedInputStream;->read([B)I

    move-result v9

    const/4 v10, -0x1

    if-eq v9, v10, :cond_0

    .line 14622
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "doScrambleImage - datalength = "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-direct {p0, v9}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14623
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "doScrambleImage - scramblesize = "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-direct {p0, v9}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14626
    iget-object v9, p0, Lcom/android/phone/InVTCallScreen;->scramble:Lcom/android/phone/callsettings/ScrambleLib;

    invoke-virtual {v9, v0, v2, v8}, Lcom/android/phone/callsettings/ScrambleLib;->setScrambleData([BII)V

    .line 14627
    iget-object v9, p0, Lcom/android/phone/InVTCallScreen;->scramble:Lcom/android/phone/callsettings/ScrambleLib;

    invoke-virtual {v9}, Lcom/android/phone/callsettings/ScrambleLib;->encode()Z

    .line 14630
    new-instance v6, Ljava/io/FileOutputStream;

    invoke-direct {v6, v1}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4

    .line 14631
    .end local v7           #outStream:Ljava/io/FileOutputStream;
    .restart local v6       #outStream:Ljava/io/FileOutputStream;
    :try_start_3
    invoke-virtual {v6, v0}, Ljava/io/FileOutputStream;->write([B)V

    .line 14632
    invoke-virtual {v6}, Ljava/io/FileOutputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_3

    move-object v7, v6

    .end local v6           #outStream:Ljava/io/FileOutputStream;
    .restart local v7       #outStream:Ljava/io/FileOutputStream;
    goto :goto_0

    :cond_0
    move-object v6, v7

    .end local v7           #outStream:Ljava/io/FileOutputStream;
    .restart local v6       #outStream:Ljava/io/FileOutputStream;
    move-object v4, v5

    .line 14639
    .end local v0           #bufArray:[B
    .end local v5           #inputStream:Ljava/io/BufferedInputStream;
    .restart local v4       #inputStream:Ljava/io/BufferedInputStream;
    :goto_1
    if-eqz v4, :cond_1

    :try_start_4
    invoke-virtual {v4}, Ljava/io/BufferedInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    .line 14645
    :cond_1
    :goto_2
    if-eqz v6, :cond_2

    :try_start_5
    invoke-virtual {v6}, Ljava/io/FileOutputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    .line 14650
    :cond_2
    :goto_3
    return-void

    .line 14634
    :catch_0
    move-exception v3

    .line 14635
    .local v3, e:Ljava/io/IOException;
    :goto_4
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    .line 14640
    .end local v3           #e:Ljava/io/IOException;
    :catch_1
    move-exception v3

    .line 14641
    .restart local v3       #e:Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2

    .line 14646
    .end local v3           #e:Ljava/io/IOException;
    :catch_2
    move-exception v3

    .line 14647
    .restart local v3       #e:Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_3

    .line 14634
    .end local v3           #e:Ljava/io/IOException;
    .end local v4           #inputStream:Ljava/io/BufferedInputStream;
    .restart local v5       #inputStream:Ljava/io/BufferedInputStream;
    :catch_3
    move-exception v3

    move-object v4, v5

    .end local v5           #inputStream:Ljava/io/BufferedInputStream;
    .restart local v4       #inputStream:Ljava/io/BufferedInputStream;
    goto :goto_4

    .end local v4           #inputStream:Ljava/io/BufferedInputStream;
    .end local v6           #outStream:Ljava/io/FileOutputStream;
    .restart local v0       #bufArray:[B
    .restart local v5       #inputStream:Ljava/io/BufferedInputStream;
    .restart local v7       #outStream:Ljava/io/FileOutputStream;
    :catch_4
    move-exception v3

    move-object v6, v7

    .end local v7           #outStream:Ljava/io/FileOutputStream;
    .restart local v6       #outStream:Ljava/io/FileOutputStream;
    move-object v4, v5

    .end local v5           #inputStream:Ljava/io/BufferedInputStream;
    .restart local v4       #inputStream:Ljava/io/BufferedInputStream;
    goto :goto_4
.end method

.method private dualCamera()V
    .locals 2

    .prologue
    .line 12559
    const-string v0, "This is inside CallVtScreen dualCamera method"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12561
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 12562
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v1}, Lcom/android/phone/PreviewEffectState;->isDualCameraEnabled()Z

    move-result v1

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->enableDualCamera(Z)V

    .line 12564
    :cond_0
    return-void
.end method

.method private dumpBluetoothState()V
    .locals 5

    .prologue
    const/4 v4, 0x1

    .line 9295
    const-string v2, "============== dumpBluetoothState() ============="

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9296
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= isBluetoothAvailable: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAvailable()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9297
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= isBluetoothAudioConnected: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnected()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9298
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= isBluetoothAudioConnectedOrPending: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnectedOrPending()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9299
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= PhoneGlobals.showBluetoothIndication: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/phone/PhoneGlobals;->showBluetoothIndication()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9300
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    if-eqz v2, :cond_2

    .line 9301
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= mBluetoothPhone.isAudioOn: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/phone/PhoneGlobals;->isBluetoothHeadsetAudioOn()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9302
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= mBluetoothPhone.isAudioOn: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/phone/PhoneGlobals;->isBluetoothHeadsetAudioOn()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9303
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v2, :cond_1

    .line 9304
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v2}, Landroid/bluetooth/BluetoothHeadset;->getConnectedDevices()Ljava/util/List;

    move-result-object v1

    .line 9306
    .local v1, deviceList:Ljava/util/List;,"Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v2

    if-lez v2, :cond_0

    .line 9307
    const/4 v2, 0x0

    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/bluetooth/BluetoothDevice;

    .line 9308
    .local v0, device:Landroid/bluetooth/BluetoothDevice;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= BluetoothHeadset.getCurrentDevice: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9309
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "= BluetoothHeadset.State: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v3, v0}, Landroid/bluetooth/BluetoothHeadset;->getConnectionState(Landroid/bluetooth/BluetoothDevice;)I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9317
    .end local v0           #device:Landroid/bluetooth/BluetoothDevice;
    .end local v1           #deviceList:Ljava/util/List;,"Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    :cond_0
    :goto_0
    return-void

    .line 9312
    :cond_1
    const-string v2, "= mBluetoothHeadset is null"

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    goto :goto_0

    .line 9315
    :cond_2
    const-string v2, "= mBluetoothPhone is null; device is not BT capable"

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    goto :goto_0
.end method

.method private enableKeyGuardLock()V
    .locals 3

    .prologue
    .line 3297
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->keyguardLock:Landroid/app/KeyguardManager$KeyguardLock;

    if-nez v1, :cond_1

    .line 3307
    :cond_0
    :goto_0
    return-void

    .line 3300
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "value of KeyGuard"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->KeyGuard:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3301
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->keyguardLock:Landroid/app/KeyguardManager$KeyguardLock;

    if-eqz v1, :cond_0

    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->KeyGuard:Z

    if-eqz v1, :cond_0

    .line 3302
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->keyguardLock:Landroid/app/KeyguardManager$KeyguardLock;

    .line 3303
    .local v0, keyguardLockRenable:Landroid/app/KeyguardManager$KeyguardLock;
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->keyguardLock:Landroid/app/KeyguardManager$KeyguardLock;

    invoke-virtual {v1}, Landroid/app/KeyguardManager$KeyguardLock;->reenableKeyguard()V

    .line 3304
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->KeyGuard:Z

    .line 3305
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->keyguardLock:Landroid/app/KeyguardManager$KeyguardLock;

    goto :goto_0
.end method

.method private formatTimeString(J)Ljava/lang/String;
    .locals 5
    .parameter "aTime"

    .prologue
    .line 13066
    move-wide v1, p1

    .line 13067
    .local v1, elapsedTime:J
    const-string v0, "%1$02d:%2$02d:%3$02d"

    .line 13069
    .local v0, FAST_FORMAT_HHMMSS:Ljava/lang/String;
    const-wide/16 v3, 0x3e8

    div-long/2addr v1, v3

    .line 13072
    const/4 v3, 0x0

    invoke-static {v3, v0, v1, v2}, Lcom/android/phone/util/PhoneDateUtils;->formatElapsedTime(Ljava/lang/StringBuilder;Ljava/lang/String;J)Ljava/lang/String;

    move-result-object v3

    return-object v3
.end method

.method private getCallNumber(Lcom/android/internal/telephony/Call;)Ljava/lang/String;
    .locals 7
    .parameter "call"

    .prologue
    .line 7201
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    if-eqz v4, :cond_3

    .line 7202
    const/4 v0, 0x0

    .line 7203
    .local v0, conn:Lcom/android/internal/telephony/Connection;
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v4}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v3

    .line 7205
    .local v3, phoneType:I
    const/4 v4, 0x2

    if-ne v3, v4, :cond_0

    .line 7206
    invoke-virtual {p1}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 7214
    :goto_0
    if-eqz v0, :cond_3

    .line 7215
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v2

    .line 7216
    .local v2, o:Ljava/lang/Object;
    instance-of v4, v2, Lcom/android/internal/telephony/CallerInfo;

    if-eqz v4, :cond_3

    move-object v1, v2

    .line 7217
    check-cast v1, Lcom/android/internal/telephony/CallerInfo;

    .line 7218
    .local v1, info:Lcom/android/internal/telephony/CallerInfo;
    iget-object v4, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    .line 7222
    .end local v0           #conn:Lcom/android/internal/telephony/Connection;
    .end local v1           #info:Lcom/android/internal/telephony/CallerInfo;
    .end local v2           #o:Ljava/lang/Object;
    .end local v3           #phoneType:I
    :goto_1
    return-object v4

    .line 7207
    .restart local v0       #conn:Lcom/android/internal/telephony/Connection;
    .restart local v3       #phoneType:I
    :cond_0
    const/4 v4, 0x1

    if-ne v3, v4, :cond_1

    .line 7208
    invoke-virtual {p1}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    goto :goto_0

    .line 7209
    :cond_1
    const/4 v4, 0x3

    if-ne v3, v4, :cond_2

    .line 7210
    const-string v4, "handling PHONE_TYPE_SIP to avoid fatal exception, should not come here"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 7212
    :cond_2
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unexpected phone type: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 7222
    .end local v0           #conn:Lcom/android/internal/telephony/Connection;
    .end local v3           #phoneType:I
    :cond_3
    const/4 v4, 0x0

    goto :goto_1
.end method

.method private getConnection(Lcom/android/internal/telephony/Call;)Lcom/android/internal/telephony/Connection;
    .locals 4
    .parameter "call"

    .prologue
    .line 7813
    invoke-virtual {p1}, Lcom/android/internal/telephony/Call;->getPhone()Lcom/android/internal/telephony/Phone;

    move-result-object v1

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v0

    .line 7814
    .local v0, phoneType:I
    const/4 v1, 0x2

    if-ne v0, v1, :cond_0

    .line 7815
    invoke-virtual {p1}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v1

    .line 7817
    :goto_0
    return-object v1

    .line 7816
    :cond_0
    const/4 v1, 0x1

    if-eq v0, v1, :cond_1

    const/4 v1, 0x3

    if-ne v0, v1, :cond_2

    .line 7817
    :cond_1
    invoke-virtual {p1}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v1

    goto :goto_0

    .line 7819
    :cond_2
    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unexpected phone type: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public static getDisplayMode()Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    .locals 3

    .prologue
    .line 14418
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "getDisplayMode  =  "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Lcom/android/phone/InVTCallScreen;->sDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14419
    sget-object v0, Lcom/android/phone/InVTCallScreen;->sDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    return-object v0
.end method

.method private getHandAdaptEnable()Z
    .locals 4

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 15440
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->HAND_ADAPTABLE_OPERATION:Ljava/lang/String;

    invoke-static {v2, v3, v1}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-ne v2, v0, :cond_0

    :goto_0
    return v0

    :cond_0
    move v0, v1

    goto :goto_0
.end method

.method private getInitialNumber(Landroid/content/Intent;)Ljava/lang/String;
    .locals 2
    .parameter "intent"
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/android/phone/PhoneUtils$VoiceMailNumberMissingException;
        }
    .end annotation

    .prologue
    .line 6582
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    .line 6584
    .local v0, action:Ljava/lang/String;
    if-nez v0, :cond_0

    .line 6585
    const/4 v1, 0x0

    .line 6593
    :goto_0
    return-object v1

    .line 6588
    :cond_0
    if-eqz v0, :cond_1

    const-string v1, "android.intent.action.CALL"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "android.intent.extra.PHONE_NUMBER"

    invoke-virtual {p1, v1}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 6590
    const-string v1, "android.intent.extra.PHONE_NUMBER"

    invoke-virtual {p1, v1}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    goto :goto_0

    .line 6593
    :cond_1
    invoke-static {p0, p1}, Lcom/android/phone/PhoneUtils;->getNumberFromIntent(Landroid/content/Context;Landroid/content/Intent;)Ljava/lang/String;

    move-result-object v1

    goto :goto_0
.end method

.method private getLastCaptureFileID()J
    .locals 6

    .prologue
    .line 14551
    const-wide/16 v0, 0x0

    .line 14552
    .local v0, counter:J
    const-string v3, "VTCaptureFile"

    const/4 v4, 0x0

    invoke-virtual {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;

    move-result-object v2

    .line 14553
    .local v2, setVTCaptureID:Landroid/content/SharedPreferences;
    const-string v3, "captureID"

    const-wide/16 v4, 0x1

    invoke-interface {v2, v3, v4, v5}, Landroid/content/SharedPreferences;->getLong(Ljava/lang/String;J)J

    move-result-wide v0

    .line 14554
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "getLastCaptureFileID() "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14556
    return-wide v0
.end method

.method public static getOldDisplayMode()Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    .locals 1

    .prologue
    .line 14428
    sget-object v0, Lcom/android/phone/InVTCallScreen;->sOldDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    return-object v0
.end method

.method private getPhoneNumberLocator(Ljava/lang/String;)Ljava/lang/String;
    .locals 5
    .parameter "number"

    .prologue
    .line 14204
    const/4 v0, 0x0

    .line 14205
    .local v0, city_name:Ljava/lang/String;
    move-object v2, p1

    .line 14207
    .local v2, search_number:Ljava/lang/String;
    if-eqz p1, :cond_1

    .line 14208
    invoke-static {p1}, Landroid/telephony/PhoneNumberUtils;->stripSeparators(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 14210
    const-string v3, "+86"

    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 14211
    const/4 v3, 0x3

    invoke-virtual {v2, v3}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v2

    .line 14214
    :cond_0
    :try_start_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v3

    invoke-static {v3, v2}, Lcom/android/phone/PhoneUtils;->getNumberProvinceAndCity(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    .line 14218
    :goto_0
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "getPhoneNumberLocator original number:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " search number:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " city :"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14220
    :cond_1
    if-nez v0, :cond_2

    .line 14221
    const-string v0, ""

    .line 14223
    :cond_2
    return-object v0

    .line 14215
    :catch_0
    move-exception v1

    .line 14216
    .local v1, e:Ljava/lang/Exception;
    const-string v0, ""

    goto :goto_0
.end method

.method private getPresentationString(I)Ljava/lang/String;
    .locals 2
    .parameter

    .prologue
    .line 9583
    const v0, 0x7f090007

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 9584
    sget v1, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_RESTRICTED:I

    if-ne p1, v1, :cond_1

    .line 9585
    const v0, 0x7f090009

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 9589
    :cond_0
    :goto_0
    return-object v0

    .line 9586
    :cond_1
    sget v1, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_PAYPHONE:I

    if-ne p1, v1, :cond_0

    .line 9587
    const v0, 0x7f09000a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    goto :goto_0
.end method

.method private getVideoFileNameFromUri(Landroid/net/Uri;)Ljava/lang/String;
    .locals 7
    .parameter

    .prologue
    const/4 v6, 0x0

    .line 13731
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "inside getVideoFileNameFromUri condition and file Uri is "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {p1}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13734
    const/4 v0, 0x1

    new-array v2, v0, [Ljava/lang/String;

    const/4 v0, 0x0

    const-string v1, "_data"

    aput-object v1, v2, v0

    .line 13739
    :try_start_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object v1, p1

    invoke-virtual/range {v0 .. v5}, Landroid/content/ContentResolver;->query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0
    .catch Landroid/database/sqlite/SQLiteException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/UnsupportedOperationException; {:try_start_0 .. :try_end_0} :catch_1

    move-result-object v1

    .line 13740
    if-eqz v1, :cond_4

    :try_start_1
    invoke-interface {v1}, Landroid/database/Cursor;->getCount()I

    move-result v0

    if-lez v0, :cond_4

    .line 13741
    invoke-interface {v1}, Landroid/database/Cursor;->moveToFirst()Z

    .line 13742
    const-string v0, "_data"

    invoke-interface {v1, v0}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v0

    invoke-interface {v1, v0}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 13743
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "inside getVideoFileNameFromUri condition and file path is "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1
    .catch Landroid/database/sqlite/SQLiteException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Ljava/lang/UnsupportedOperationException; {:try_start_1 .. :try_end_1} :catch_2

    .line 13750
    :goto_0
    if-eqz v1, :cond_0

    .line 13751
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    .line 13754
    :cond_0
    :goto_1
    return-object v0

    .line 13745
    :catch_0
    move-exception v0

    move-object v0, v6

    .line 13750
    :goto_2
    if-eqz v0, :cond_1

    .line 13751
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    :cond_1
    move-object v0, v6

    goto :goto_1

    .line 13747
    :catch_1
    move-exception v0

    move-object v1, v6

    .line 13750
    :goto_3
    if-eqz v1, :cond_2

    .line 13751
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    :cond_2
    move-object v0, v6

    goto :goto_1

    .line 13750
    :catchall_0
    move-exception v0

    move-object v1, v6

    :goto_4
    if-eqz v1, :cond_3

    .line 13751
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    :cond_3
    throw v0

    .line 13750
    :catchall_1
    move-exception v0

    goto :goto_4

    .line 13747
    :catch_2
    move-exception v0

    goto :goto_3

    .line 13745
    :catch_3
    move-exception v0

    move-object v0, v1

    goto :goto_2

    :cond_4
    move-object v0, v6

    goto :goto_0
.end method

.method private handleCallKey()Z
    .locals 9

    .prologue
    const/4 v7, 0x0

    const/4 v6, 0x1

    .line 4052
    const-string v8, "feature_chn_duos"

    invoke-static {v8}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_4

    .line 4053
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_1

    move v4, v6

    .line 4054
    .local v4, hasRingingCall:Z
    :goto_0
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_2

    move v2, v6

    .line 4055
    .local v2, hasActiveCall:Z
    :goto_1
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_3

    move v3, v6

    .line 4061
    .local v3, hasHoldingCall:Z
    :goto_2
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v7}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v5

    .line 4062
    .local v5, phoneType:I
    const/4 v7, 0x2

    if-ne v5, v7, :cond_7

    .line 4067
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    .line 4068
    .local v0, app:Lcom/android/phone/PhoneGlobals;
    iget-object v7, v0, Lcom/android/phone/PhoneGlobals;->cdmaPhoneCallState:Lcom/android/phone/CdmaPhoneCallState;

    invoke-virtual {v7}, Lcom/android/phone/CdmaPhoneCallState;->getCurrentCallState()Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;

    move-result-object v1

    .line 4070
    .local v1, currCallState:Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;
    if-eqz v4, :cond_5

    .line 4073
    const-string v7, "answerCall: First Incoming and Call Waiting scenario"

    invoke-direct {p0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4074
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalAnswerCall()V

    .line 4149
    .end local v0           #app:Lcom/android/phone/PhoneGlobals;
    .end local v1           #currCallState:Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;
    :cond_0
    :goto_3
    return v6

    .end local v2           #hasActiveCall:Z
    .end local v3           #hasHoldingCall:Z
    .end local v4           #hasRingingCall:Z
    .end local v5           #phoneType:I
    :cond_1
    move v4, v7

    .line 4053
    goto :goto_0

    .restart local v4       #hasRingingCall:Z
    :cond_2
    move v2, v7

    .line 4054
    goto :goto_1

    .restart local v2       #hasActiveCall:Z
    :cond_3
    move v3, v7

    .line 4055
    goto :goto_2

    .line 4057
    .end local v2           #hasActiveCall:Z
    .end local v4           #hasRingingCall:Z
    :cond_4
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v7}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v4

    .line 4058
    .restart local v4       #hasRingingCall:Z
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v7}, Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z

    move-result v2

    .line 4059
    .restart local v2       #hasActiveCall:Z
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v7}, Lcom/android/internal/telephony/CallManager;->hasActiveBgCall()Z

    move-result v3

    .restart local v3       #hasHoldingCall:Z
    goto :goto_2

    .line 4077
    .restart local v0       #app:Lcom/android/phone/PhoneGlobals;
    .restart local v1       #currCallState:Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;
    .restart local v5       #phoneType:I
    :cond_5
    sget-object v7, Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;->THRWAY_ACTIVE:Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;

    if-ne v1, v7, :cond_6

    if-eqz v2, :cond_6

    .line 4080
    const-string v7, "answerCall: Merge 3-way call scenario"

    invoke-direct {p0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4082
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v7}, Lcom/android/phone/PhoneUtils;->mergeCalls(Lcom/android/internal/telephony/CallManager;)V

    goto :goto_3

    .line 4083
    :cond_6
    sget-object v7, Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;->CONF_CALL:Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;

    if-ne v1, v7, :cond_0

    .line 4087
    const-string v7, "answerCall: Switch btwn 2 calls scenario"

    invoke-direct {p0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_3

    .line 4090
    .end local v0           #app:Lcom/android/phone/PhoneGlobals;
    .end local v1           #currCallState:Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;
    :cond_7
    if-ne v5, v6, :cond_c

    .line 4091
    if-eqz v4, :cond_8

    .line 4102
    const-string v7, "InVTCallScreen"

    const-string v8, "handleCallKey: incoming call is ringing! (PhoneWindowManager should have handled this key.)"

    invoke-static {v7, v8}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4108
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalAnswerCall()V

    goto :goto_3

    .line 4109
    :cond_8
    if-eqz v2, :cond_9

    if-eqz v3, :cond_9

    .line 4111
    const-string v7, "handleCallKey: both lines in use ==> swap calls."

    invoke-direct {p0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_3

    .line 4113
    :cond_9
    if-eqz v3, :cond_b

    .line 4116
    const-string v7, "handleCallKey: call on hold ==> unhold."

    invoke-direct {p0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4117
    const-string v7, "feature_chn_duos"

    invoke-static {v7}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_a

    .line 4118
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    invoke-static {v7}, Lcom/android/phone/PhoneUtils;->switchHoldingAndActive(Lcom/android/internal/telephony/Call;)Z

    goto :goto_3

    .line 4120
    :cond_a
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v7}, Lcom/android/internal/telephony/CallManager;->getFirstActiveBgCall()Lcom/android/internal/telephony/Call;

    move-result-object v7

    invoke-static {v7}, Lcom/android/phone/PhoneUtils;->switchHoldingAndActive(Lcom/android/internal/telephony/Call;)Z

    goto :goto_3

    .line 4138
    :cond_b
    const-string v7, "handleCallKey: call in foregound ==> ignoring."

    invoke-direct {p0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_3

    .line 4141
    :cond_c
    const/4 v7, 0x3

    if-ne v5, v7, :cond_d

    .line 4142
    const-string v7, "handling PHONE_TYPE_SIP to avoid fatal exception, should not come here"

    invoke-direct {p0, v7}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_3

    .line 4144
    :cond_d
    new-instance v6, Ljava/lang/IllegalStateException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Unexpected phone type: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v6
.end method

.method private handleDialerKeyDown(ILandroid/view/KeyEvent;)Z
    .locals 3
    .parameter "keyCode"
    .parameter "event"

    .prologue
    const/4 v0, 0x0

    .line 3972
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "handleDialerKeyDown: keyCode "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", event "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "..."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3974
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v1}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->okToDialDTMFTones()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 3975
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0, p2}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->onDialerKeyDown(Landroid/view/KeyEvent;)Z

    move-result v0

    .line 3984
    :cond_0
    :goto_0
    return v0

    .line 3978
    :cond_1
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 3979
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mMenuFirstCreated:Z

    if-eqz v1, :cond_0

    const/16 v1, 0x52

    if-ne p1, v1, :cond_0

    .line 3980
    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mMenuFirstCreated:Z

    .line 3981
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMenu:Landroid/view/Menu;

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->onPrepareOptionsMenu(Landroid/view/Menu;)Z

    goto :goto_0
.end method

.method private handlePostOnDialChars(Landroid/os/AsyncResult;C)V
    .locals 4
    .parameter "r"
    .parameter "ch"

    .prologue
    .line 6207
    iget-object v0, p1, Landroid/os/AsyncResult;->result:Ljava/lang/Object;

    check-cast v0, Lcom/android/internal/telephony/Connection;

    .line 6209
    .local v0, c:Lcom/android/internal/telephony/Connection;
    if-eqz v0, :cond_0

    .line 6210
    iget-object v1, p1, Landroid/os/AsyncResult;->userObj:Ljava/lang/Object;

    check-cast v1, Lcom/android/internal/telephony/Connection$PostDialState;

    .line 6212
    .local v1, state:Lcom/android/internal/telephony/Connection$PostDialState;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "handlePostOnDialChar: state = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", ch = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6215
    .end local v1           #state:Lcom/android/internal/telephony/Connection$PostDialState;
    :cond_0
    return-void
.end method

.method private handleStartupError(Lcom/android/phone/InVTCallState$InVTCallInitStatus;)V
    .locals 7
    .parameter

    .prologue
    const v6, 0x7f090401

    const v3, 0x7f09019f

    const/4 v5, 0x4

    const/4 v0, 0x0

    const/4 v4, 0x1

    .line 8024
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "handleStartupError(): status = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8037
    sget-object v1, Lcom/android/phone/InVTCallScreen$78;->$SwitchMap$com$android$phone$InVTCallState$InVTCallInitStatus:[I

    invoke-virtual {p1}, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    .line 8239
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "handleStartupError: unexpected status code "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8240
    const v0, 0x7f0901a4

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    .line 8246
    :cond_0
    :goto_0
    :pswitch_0
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->CALL_FAILED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq p1, v0, :cond_1

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq p1, v0, :cond_1

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->NO_PHONE_NUMBER_SUPPLIED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-ne p1, v0, :cond_2

    .line 8248
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    if-eqz v0, :cond_12

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hasVideoCallConnection(Lcom/android/internal/telephony/Phone;)Z

    move-result v0

    if-eqz v0, :cond_12

    .line 8251
    const-string v0, "InVTCallScreen::already has video call,do not update InVTCallScreenMode"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8257
    :cond_2
    :goto_1
    return-void

    .line 8054
    :pswitch_1
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 8056
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->isAirplaneModeOn()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 8057
    invoke-direct {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_0

    .line 8059
    :cond_3
    const v0, 0x7f0901a0

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_0

    .line 8062
    :cond_4
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 8063
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->isAirplaneModeOn()Z

    move-result v0

    if-eqz v0, :cond_5

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->getSIMActivation(I)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 8064
    invoke-direct {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_0

    .line 8066
    :cond_5
    const v0, 0x7f0901a2

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_0

    .line 8071
    :cond_6
    invoke-direct {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_0

    .line 8079
    :pswitch_2
    const-string v0, "EMERGENCY_ONLY"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8080
    const v0, 0x7f0901a0

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_0

    .line 8086
    :pswitch_3
    const-string v0, "EMERGENCY_SKT_ONLY"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8087
    const v0, 0x7f09070a

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_0

    .line 8093
    :pswitch_4
    const-string v0, "InVTCallScreen"

    const-string v1, "handleStartupError: unexpected PHONE_NOT_IN_USE status"

    invoke-static {v0, v1}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0

    .line 8100
    :pswitch_5
    const v0, 0x7f0901a3

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8112
    :pswitch_6
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_0

    .line 8113
    const v1, 0x7f0901a5

    invoke-static {p0, v1, v0}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v0

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    goto/16 :goto_0

    .line 8123
    :pswitch_7
    const v0, 0x7f0901a4

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8128
    :pswitch_8
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v2, "usecall_fail_option"

    invoke-static {v1, v2, v4}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    .line 8132
    const-string v2, "vt_cmcc_operator_fallback"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 8133
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v2, "usecall_fail_option_cmcc"

    invoke-static {v1, v2, v4}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    .line 8136
    if-nez v1, :cond_7

    .line 8137
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x309

    const-wide/16 v3, 0x1f4

    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 8138
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const v2, 0x7f0904bf

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {p0, v1, v0}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;

    move-result-object v0

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    goto/16 :goto_0

    .line 8140
    :cond_7
    if-ne v1, v4, :cond_8

    .line 8141
    const v0, 0x7f090400

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 8142
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mBeforeMakingCall:Z

    .line 8143
    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_0

    .line 8145
    :cond_8
    invoke-direct {p0, v6, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8148
    :cond_9
    if-eqz v1, :cond_a

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_a

    .line 8149
    const v0, 0x7f090400

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 8150
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mBeforeMakingCall:Z

    .line 8151
    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_0

    .line 8153
    :cond_a
    invoke-direct {p0, v6, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8160
    :pswitch_9
    const-string v1, "ril.simtype"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 8161
    const-string v2, "ril.currentplmn"

    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 8164
    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_b

    .line 8169
    :goto_2
    if-eq v0, v5, :cond_c

    const/16 v1, 0xf

    if-eq v0, v1, :cond_c

    const/16 v1, 0x13

    if-eq v0, v1, :cond_c

    .line 8171
    const v0, 0x7f090544

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8167
    :cond_b
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    goto :goto_2

    .line 8175
    :cond_c
    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 8177
    const v0, 0x7f090546

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8182
    :cond_d
    const-string v0, "domestic"

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 8184
    const v0, 0x7f090545

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8189
    :cond_e
    const v0, 0x7f090546

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8196
    :pswitch_a
    const v0, 0x7f090526

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8202
    :pswitch_b
    const v0, 0x7f090547

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8207
    :pswitch_c
    const v0, 0x7f0901a2

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8210
    :pswitch_d
    const v0, 0x7f090705

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8213
    :pswitch_e
    const v0, 0x7f090706

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8216
    :pswitch_f
    const-string v0, "feature_kor_open"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 8217
    const v0, 0x7f090707

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8219
    :cond_f
    const v0, 0x7f090722

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8222
    :pswitch_10
    const-string v0, "feature_kor_open"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_10

    .line 8223
    const v0, 0x7f090708

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8225
    :cond_10
    const v0, 0x7f090725

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8228
    :pswitch_11
    const v0, 0x7f090723

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8231
    :pswitch_12
    const-string v0, "feature_kor_open"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_11

    .line 8232
    const v0, 0x7f090709

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8234
    :cond_11
    const v0, 0x7f090724

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_0

    .line 8253
    :cond_12
    const-string v0, "InVTCallScreen::InVTCallScreenMode.EMPTY"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8254
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->EMPTY:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    goto/16 :goto_1

    .line 8037
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
        :pswitch_8
        :pswitch_9
        :pswitch_a
        :pswitch_b
        :pswitch_c
        :pswitch_d
        :pswitch_e
        :pswitch_f
        :pswitch_10
        :pswitch_11
        :pswitch_12
    .end packed-switch
.end method

.method private hideFarEnViewAnim()V
    .locals 2

    .prologue
    const/16 v1, 0x8

    .line 9796
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->frameAnimation:Landroid/graphics/drawable/AnimationDrawable;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->frameAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v0}, Landroid/graphics/drawable/AnimationDrawable;->stop()V

    .line 9797
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mConnectFarEndImageView:Landroid/widget/ImageView;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mConnectFarEndImageView:Landroid/widget/ImageView;

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 9798
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->prepareVideoText:Landroid/widget/TextView;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->prepareVideoText:Landroid/widget/TextView;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9799
    :cond_2
    return-void
.end method

.method private hideIncomingCallWidget()V
    .locals 2

    .prologue
    const/16 v1, 0x8

    .line 13910
    const-string v0, "hideIncomingCallWidget()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13912
    const-string v0, "vt_cmcc_operator_fallback"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 13914
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    if-eqz v0, :cond_1

    .line 13915
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v0}, Landroid/widget/SlidingDrawer;->isOpened()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 13916
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v0}, Landroid/widget/SlidingDrawer;->toggle()V

    .line 13917
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v0, v1}, Landroid/widget/SlidingDrawer;->setVisibility(I)V

    .line 13921
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    if-eqz v0, :cond_4

    .line 13922
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    invoke-virtual {v0}, Lcom/android/phone/IncomingCallEasyImageWidget;->clearAnimation()V

    .line 13923
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    invoke-virtual {v0, v1}, Lcom/android/phone/IncomingCallEasyImageWidget;->setVisibility(I)V

    .line 13931
    :cond_2
    :goto_0
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 13932
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setMultiwindowTrayDisable(Z)V

    .line 13934
    :cond_3
    return-void

    .line 13925
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-eqz v0, :cond_2

    .line 13926
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v0}, Lcom/android/phone/IncomingCallWidget;->clearAnimation()V

    .line 13927
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v0, v1}, Lcom/android/phone/IncomingCallWidget;->setVisibility(I)V

    goto :goto_0
.end method

.method private hideVolumePanel()V
    .locals 2

    .prologue
    .line 15544
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x98

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 15545
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsShownVolumeBar:Z

    .line 15547
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_0

    .line 15548
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15550
    :cond_0
    return-void
.end method

.method private imageCaptureAnimation()V
    .locals 2

    .prologue
    .line 12933
    const-string v0, "imageCaptureAnimation() :: Inside capture image animation"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12936
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndCapture:Z

    if-nez v0, :cond_0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_4

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndCapture:Z

    if-eqz v0, :cond_4

    .line 12938
    :cond_1
    const-string v0, "imageCaptureAnimation : : capturing near end "

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12939
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_3

    .line 12940
    const v0, 0x7f0a03a2

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    .line 12952
    :cond_2
    :goto_0
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndCapture:Z

    .line 12953
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->prepareCaptureAnimation()V

    .line 12955
    return-void

    .line 12942
    :cond_3
    const v0, 0x7f0a037d

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    goto :goto_0

    .line 12943
    :cond_4
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndCapture:Z

    if-eqz v0, :cond_5

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_6

    :cond_5
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndCapture:Z

    if-nez v0, :cond_2

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 12945
    :cond_6
    const-string v0, "imageCaptureAnimation : : capturing far end "

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12947
    const v0, 0x7f0a0376

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    goto :goto_0
.end method

.method private initActionBar()V
    .locals 3

    .prologue
    .line 13997
    const-string v0, "ActionBar Initialization"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13998
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getActionBar()Landroid/app/ActionBar;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBar:Landroid/app/ActionBar;

    .line 13999
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBar:Landroid/app/ActionBar;

    if-eqz v0, :cond_0

    .line 14000
    const-string v0, "actionBar is not null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14001
    const-string v0, "layout_inflater"

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/LayoutInflater;

    .line 14002
    const v1, 0x7f0400f5

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 14003
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mActionBar:Landroid/app/ActionBar;

    invoke-virtual {v1, v0}, Landroid/app/ActionBar;->setCustomView(Landroid/view/View;)V

    .line 14004
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBar:Landroid/app/ActionBar;

    const/16 v1, 0x10

    invoke-virtual {v0, v1}, Landroid/app/ActionBar;->setDisplayOptions(I)V

    .line 14006
    :cond_0
    return-void
.end method

.method private initInVTCallScreen()V
    .locals 9

    .prologue
    const v8, 0x7f0400fc

    const/4 v7, 0x4

    const/4 v6, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    .line 3619
    const-string v0, "initInVTCallScreen()..."

    invoke-direct {p0, v0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3621
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-nez v0, :cond_0

    .line 3622
    invoke-static {}, Lsiso/vt/VTManager;->getInstance()Lsiso/vt/VTManager;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    .line 3623
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->myListener:Lsiso/vt/VTManager$VTStackStateListener;

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setStackStateListener(Lsiso/vt/VTManager$VTStackStateListener;)V

    .line 3626
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isOneHandOperationEnabled()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    .line 3628
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3629
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v5, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_1

    .line 3630
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "isVTManagerAlreadyStarted = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3631
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    if-ne v0, v5, :cond_1

    .line 3632
    sput-boolean v4, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    .line 3638
    :cond_1
    const-string v0, "keyguard"

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/KeyguardManager;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mKeyguardManager:Landroid/app/KeyguardManager;

    .line 3639
    const-string v0, "audio"

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/media/AudioManager;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    .line 3643
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_2

    .line 3644
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->removeDialog(I)V

    .line 3649
    :cond_2
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 3650
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    .line 3651
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 3656
    :goto_0
    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_6

    .line 3657
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v2

    if-eqz v2, :cond_5

    .line 3658
    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/Call$State;->DISCONNECTED:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v1, :cond_6

    .line 3659
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateEndCallButton()V

    .line 3956
    :cond_3
    :goto_1
    return-void

    .line 3653
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    .line 3654
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    goto :goto_0

    .line 3665
    :cond_5
    sget-object v0, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v0, :cond_3

    .line 3670
    :cond_6
    new-instance v0, Lcom/android/phone/RespondViaSmsManager;

    invoke-direct {v0}, Lcom/android/phone/RespondViaSmsManager;-><init>()V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

    .line 3674
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_8

    .line 3675
    invoke-static {}, Lcom/android/phone/PhoneUtils;->isCameraAppRunning()Z

    move-result v0

    if-eqz v0, :cond_8

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_8

    .line 3681
    const/high16 v0, 0x100

    .line 3682
    invoke-virtual {p0, v0, v5}, Lcom/android/phone/InVTCallScreen;->setWindowMode(IZ)V

    .line 3685
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v0

    .line 3686
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v1

    invoke-virtual {v1}, Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;

    move-result-object v1

    .line 3689
    const-string v2, "not_support_vt_multiwindow"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_7

    .line 3690
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v3, 0x10

    or-int/2addr v2, v3

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 3692
    :cond_7
    invoke-virtual {v0, v1}, Landroid/view/Window;->setAttributes(Landroid/view/WindowManager$LayoutParams;)V

    .line 3697
    :cond_8
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->phoneIsInUse()Z

    move-result v0

    if-nez v0, :cond_d

    .line 3698
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateEndCallButton()V

    .line 3936
    :cond_9
    :goto_2
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 3937
    iput-object v6, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    iput-object v6, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    .line 3938
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSimUI()V

    .line 3941
    :cond_a
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_b

    .line 3943
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "videocall_mode"

    invoke-static {v0, v1, v5}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-nez v0, :cond_31

    :goto_3
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->isRemoteModeControl:Z

    .line 3947
    :cond_b
    const-string v0, "acrodea_avatar"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_c

    .line 3948
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    if-eqz v0, :cond_c

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    iget-boolean v0, v0, Lcom/android/phone/InCSVTCallMenu;->mEnabledAvatar:Z

    if-eqz v0, :cond_c

    .line 3949
    const-string v0, "show acrodea avatar"

    invoke-direct {p0, v0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3950
    const-string v0, "sdcard/acrodea_avatar_temp.jpg"

    .line 3951
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    .line 3955
    :cond_c
    const-string v0, "Exit initInVTCallScreen"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_1

    .line 3699
    :cond_d
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isVTCallAlreadyStop:Z

    if-eqz v0, :cond_e

    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    if-eqz v0, :cond_e

    .line 3700
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateEndCallButton()V

    goto :goto_2

    .line 3701
    :cond_e
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_14

    .line 3702
    const-string v0, "In vtoutgoing_main_unlock"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3704
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_11

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_11

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_11

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_11

    .line 3705
    invoke-virtual {p0, v8}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    .line 3706
    const v0, 0x7f0a0367

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTMultiWindowLayout:Landroid/widget/LinearLayout;

    .line 3715
    :goto_4
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_f

    .line 3716
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initActionBar()V

    .line 3717
    :cond_f
    const-string v0, "In vtoutgoing_main_unlock : After Inflating screen"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3718
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->surfaceview_initialize()V

    .line 3719
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->button_initialize()V

    .line 3720
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_9

    .line 3721
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_10

    const-string v0, "feature_multisim"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 3723
    :cond_10
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setupDTMFDialer(I)V

    .line 3727
    :goto_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->startDialerSession()V

    goto/16 :goto_2

    .line 3708
    :cond_11
    const-string v0, "not_support_vt_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_12

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_12

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_12

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_12

    .line 3709
    const-string v0, "In vtoutgoing_main_unlock : NOT_SUPPORT_VT_MULTI_WINDOW"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3710
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->normalWindow()V

    .line 3712
    :cond_12
    const v0, 0x7f040104

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    goto :goto_4

    .line 3725
    :cond_13
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setupDTMFDialer()V

    goto :goto_5

    .line 3729
    :cond_14
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v5, :cond_21

    .line 3730
    const-string v0, "In vtincoming_main_lock"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3733
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    if-eqz v0, :cond_33

    .line 3734
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/KeyguardManager;->isKeyguardLocked()Z

    move-result v1

    .line 3735
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/KeyguardManager;->isKeyguardSecure()Z

    move-result v0

    .line 3736
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "app.getKeyguardManager().isKeyguardLocked()="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3737
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "app.getKeyguardManager().isKeyguardSecure()="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3739
    :goto_6
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->notificationMgr:Lcom/android/phone/NotificationMgr;

    iget-object v2, v2, Lcom/android/phone/NotificationMgr;->statusBarHelper:Lcom/android/phone/NotificationMgr$StatusBarHelper;

    invoke-virtual {v2, v4}, Lcom/android/phone/NotificationMgr$StatusBarHelper;->enableSystemBarNavigation(Z)V

    .line 3741
    const-string v2, "support_multi_window"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    const-string v2, "not_support_vt_multiwindow"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_17

    .line 3742
    :cond_15
    const-string v2, "support_vtincomingcall_penwindow"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_1b

    .line 3743
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v2

    if-eqz v2, :cond_16

    if-eqz v0, :cond_17

    if-eqz v1, :cond_17

    .line 3744
    :cond_16
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_17

    .line 3745
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->normalWindow()V

    .line 3746
    const-string v0, "In vtincoming_main_lock : setMultiwindowTrayDisable(true)"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3747
    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->setMultiwindowTrayDisable(Z)V

    .line 3765
    :cond_17
    :goto_7
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1f

    .line 3766
    if-eqz v1, :cond_1e

    .line 3770
    const v0, 0x7f040103

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    .line 3771
    invoke-direct {p0, p0}, Lcom/android/phone/InVTCallScreen;->setKeyguardDefaultWallpaper(Landroid/content/Context;)Z

    .line 3778
    :goto_8
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_18

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBar:Landroid/app/ActionBar;

    if-eqz v0, :cond_18

    .line 3779
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getActionBar()Landroid/app/ActionBar;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/ActionBar;->hide()V

    .line 3780
    :cond_18
    const-string v0, "In vtincoming_main_lock : After Inflating screen"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3782
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_19

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-nez v0, :cond_19

    .line 3783
    const-string v0, "sendLiveVideo test"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3784
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->sendLiveVideo()V

    .line 3786
    :cond_19
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->surfaceview_initialize()V

    .line 3787
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->button_initialize()V

    .line 3789
    const-string v0, "vt_audio_processing_on_ap"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_20

    .line 3790
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.sec.android.app.voicerecorder.rec_save"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/phone/PhoneGlobals;->sendBroadcast(Landroid/content/Intent;)V

    .line 3791
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.samsung.media.fmradio.rec_save"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/phone/PhoneGlobals;->sendBroadcast(Landroid/content/Intent;)V

    .line 3796
    :cond_1a
    :goto_9
    const-string v0, "save voicenote"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3797
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.sec.android.app.voicenote.rec_save"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/phone/PhoneGlobals;->sendBroadcast(Landroid/content/Intent;)V

    goto/16 :goto_2

    .line 3751
    :cond_1b
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_17

    .line 3752
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1c

    .line 3753
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->normalWindow()V

    .line 3755
    :cond_1c
    const-string v0, "In vtincoming_main_lock : setMultiwindowTrayDisable(true)"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3756
    const-string v0, "not_support_vt_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1d

    .line 3757
    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->setMultiwindowTrayDisableAndonTop(Z)V

    goto/16 :goto_7

    .line 3759
    :cond_1d
    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->setMultiwindowTrayDisable(Z)V

    goto/16 :goto_7

    .line 3773
    :cond_1e
    const v0, 0x7f040102

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    goto/16 :goto_8

    .line 3776
    :cond_1f
    const v0, 0x7f040102

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    goto/16 :goto_8

    .line 3792
    :cond_20
    const-string v0, "enbale_voicerecording_popup_when_incoming"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1a

    goto :goto_9

    .line 3798
    :cond_21
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_9

    .line 3799
    const-string v0, "In vtduringcall_main"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3803
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    if-eqz v0, :cond_32

    .line 3804
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/KeyguardManager;->isKeyguardLocked()Z

    move-result v0

    .line 3805
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v1}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v1

    invoke-virtual {v1}, Landroid/app/KeyguardManager;->isKeyguardSecure()Z

    move-result v1

    .line 3806
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "app.getKeyguardManager().isKeyguardLocked()="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3807
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "app.getKeyguardManager().isKeyguardSecure()="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3810
    :goto_a
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notificationMgr:Lcom/android/phone/NotificationMgr;

    iget-object v1, v1, Lcom/android/phone/NotificationMgr;->statusBarHelper:Lcom/android/phone/NotificationMgr$StatusBarHelper;

    invoke-virtual {v1, v5}, Lcom/android/phone/NotificationMgr$StatusBarHelper;->enableSystemBarNavigation(Z)V

    .line 3812
    const-string v1, "not_support_vt_multiwindow"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_22

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v1, :cond_22

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v1}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v1

    if-eqz v1, :cond_22

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v1

    if-nez v1, :cond_22

    .line 3813
    const-string v1, "In vtduringcall_main : NOT_SUPPORT_VT_MULTI_WINDOW"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3814
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v1}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->normalWindow()V

    .line 3817
    :cond_22
    const-string v1, "support_multi_window"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_28

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v1, :cond_28

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v1}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v1

    if-eqz v1, :cond_28

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v1

    if-nez v1, :cond_28

    .line 3818
    invoke-virtual {p0, v8}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    .line 3819
    const v0, 0x7f0a0367

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTMultiWindowLayout:Landroid/widget/LinearLayout;

    .line 3820
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTMultiWindowLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_24

    .line 3823
    const v0, 0x7f0a0368

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 3824
    if-eqz v0, :cond_23

    .line 3825
    new-instance v1, Lcom/android/phone/InVTCallScreen$12;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$12;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->addOnLayoutChangeListener(Landroid/view/View$OnLayoutChangeListener;)V

    .line 3864
    :cond_23
    const v0, 0x7f0a0350

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 3865
    const v1, 0x7f0a036f

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v1

    check-cast v1, Landroid/widget/TextView;

    .line 3866
    const v2, 0x7f0a0371

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v2

    check-cast v2, Landroid/widget/ImageView;

    .line 3867
    const v3, 0x7f0a0372

    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v3

    check-cast v3, Landroid/widget/FrameLayout;

    .line 3869
    if-eqz v0, :cond_24

    if-eqz v1, :cond_24

    if-eqz v2, :cond_24

    if-eqz v3, :cond_24

    .line 3870
    invoke-virtual {v0, v4}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 3871
    invoke-virtual {v1, v7}, Landroid/widget/TextView;->setVisibility(I)V

    .line 3872
    invoke-virtual {v2, v7}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 3873
    invoke-virtual {v3, v4}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 3910
    :cond_24
    :goto_b
    const v0, 0x7f0a0370

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/PreviewEffectUI;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    .line 3911
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    if-eqz v0, :cond_25

    .line 3912
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0, p0}, Lcom/android/phone/PreviewEffectUI;->setInVTCallScreenInstance(Lcom/android/phone/InVTCallScreen;)V

    .line 3914
    :cond_25
    const-string v0, "In vtduringcall_main : After Inflating screen"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3915
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_26

    .line 3916
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initActionBar()V

    .line 3917
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBar:Landroid/app/ActionBar;

    if-eqz v0, :cond_26

    .line 3918
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mActionBar:Landroid/app/ActionBar;

    invoke-virtual {v0}, Landroid/app/ActionBar;->show()V

    .line 3920
    :cond_26
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->surfaceview_initialize()V

    .line 3921
    const-string v0, "After SurfaceView_Initialization."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3922
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->button_initialize()V

    .line 3923
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_27

    const-string v0, "feature_multisim"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_30

    .line 3925
    :cond_27
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setupDTMFDialer(I)V

    .line 3929
    :goto_c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->startDialerSession()V

    .line 3930
    const-string v0, "After Button_Initialization."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3931
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->startVTCall()V

    .line 3932
    const-string v0, "After StartVTCall "

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3933
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->invalidateOptionsMenu()V

    goto/16 :goto_2

    .line 3877
    :cond_28
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v1, :cond_29

    .line 3878
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->storeFocusedButtonIndex()V

    .line 3881
    :cond_29
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    if-eqz v1, :cond_2a

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    invoke-virtual {v1}, Landroid/widget/ImageView;->getVisibility()I

    move-result v1

    if-eqz v1, :cond_2a

    .line 3882
    const-string v1, "remove unused handle"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3883
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    invoke-virtual {v1, v6}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 3885
    :cond_2a
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    if-eqz v1, :cond_2b

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    invoke-virtual {v1}, Landroid/widget/ImageView;->getVisibility()I

    move-result v1

    if-eqz v1, :cond_2b

    .line 3886
    const-string v1, "remove unused handle"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3887
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    invoke-virtual {v1, v6}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 3889
    :cond_2b
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->incomingContactImage:Landroid/widget/ImageView;

    if-eqz v1, :cond_2c

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->incomingContactImage:Landroid/widget/ImageView;

    invoke-virtual {v1}, Landroid/widget/ImageView;->getVisibility()I

    move-result v1

    if-eqz v1, :cond_2c

    .line 3890
    const-string v1, "remove unused handle"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3891
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->incomingContactImage:Landroid/widget/ImageView;

    invoke-virtual {v1, v6}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 3894
    :cond_2c
    const-string v1, "support_kk_vt_tablet_multiwindow"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2f

    .line 3895
    if-nez v0, :cond_2d

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsKeyLockScreen:Z

    if-eqz v0, :cond_2e

    .line 3899
    :cond_2d
    const v0, 0x7f0400fe

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    .line 3900
    invoke-direct {p0, p0}, Lcom/android/phone/InVTCallScreen;->setKeyguardDefaultWallpaper(Landroid/content/Context;)Z

    .line 3901
    iput-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mIsKeyLockScreen:Z

    goto/16 :goto_b

    .line 3903
    :cond_2e
    const v0, 0x7f0400fd

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    goto/16 :goto_b

    .line 3906
    :cond_2f
    const v0, 0x7f0400fd

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    goto/16 :goto_b

    .line 3927
    :cond_30
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setupDTMFDialer()V

    goto/16 :goto_c

    :cond_31
    move v4, v5

    .line 3943
    goto/16 :goto_3

    :cond_32
    move v0, v4

    goto/16 :goto_a

    :cond_33
    move v0, v4

    move v1, v4

    goto/16 :goto_6
.end method

.method private initvtstack()V
    .locals 7

    .prologue
    const/4 v4, 0x0

    const/4 v3, 0x1

    .line 2498
    const-string v5, "Init VT Stack get called "

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2499
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-nez v5, :cond_0

    .line 2500
    invoke-static {}, Lsiso/vt/VTManager;->getInstance()Lsiso/vt/VTManager;

    move-result-object v5

    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    .line 2502
    :cond_0
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->myListener:Lsiso/vt/VTManager$VTStackStateListener;

    invoke-virtual {v5, v6}, Lsiso/vt/VTManager;->setStackStateListener(Lsiso/vt/VTManager$VTStackStateListener;)V

    .line 2503
    const-string v5, "Init VT Stack State Listener Registered"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2505
    const/4 v2, 0x0

    .line 2506
    .local v2, hasActiveRingingCall:Z
    const/4 v1, 0x0

    .line 2509
    .local v1, hasActiveFgCall:Z
    const-string v5, "feature_chn_duos"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_4

    .line 2510
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v5}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v5

    if-nez v5, :cond_2

    move v2, v3

    .line 2511
    :goto_0
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v5}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v5

    if-nez v5, :cond_3

    move v1, v3

    .line 2512
    :goto_1
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v5}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    .line 2519
    .local v0, foregroundCallState:Lcom/android/internal/telephony/Call$State;
    :goto_2
    if-eqz v2, :cond_5

    .line 2520
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 2538
    :cond_1
    :goto_3
    return-void

    .end local v0           #foregroundCallState:Lcom/android/internal/telephony/Call$State;
    :cond_2
    move v2, v4

    .line 2510
    goto :goto_0

    :cond_3
    move v1, v4

    .line 2511
    goto :goto_1

    .line 2514
    :cond_4
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v2

    .line 2515
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z

    move-result v1

    .line 2516
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->getActiveFgCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    .restart local v0       #foregroundCallState:Lcom/android/internal/telephony/Call$State;
    goto :goto_2

    .line 2521
    :cond_5
    sget-object v5, Lcom/android/internal/telephony/Call$State;->DIALING:Lcom/android/internal/telephony/Call$State;

    if-eq v0, v5, :cond_6

    sget-object v5, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-eq v0, v5, :cond_6

    sget-object v5, Lcom/android/internal/telephony/Call$State;->IDLE:Lcom/android/internal/telephony/Call$State;

    if-eq v0, v5, :cond_6

    sget-object v5, Lcom/android/internal/telephony/Call$State;->DISCONNECTED:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v5, :cond_7

    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mIsShowEndCallScreenStarted:Z

    if-nez v5, :cond_7

    .line 2525
    :cond_6
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "initvtstack foregroundCallState"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v4, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 2526
    const/4 v4, 0x2

    iput v4, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 2527
    iget-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v4, :cond_1

    .line 2528
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingAnimation:[I

    invoke-static {v4}, Lcom/android/phone/FrameAnimationForVT;->preCaching([I)V

    .line 2529
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    if-eqz v4, :cond_1

    .line 2530
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v4, v3}, Lcom/android/phone/PhoneGlobals;->setIsVTcallStarted(Z)V

    goto :goto_3

    .line 2533
    :cond_7
    sget-object v3, Lcom/android/internal/telephony/Call$State;->ACTIVE:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v3, :cond_8

    .line 2534
    const/4 v3, 0x3

    iput v3, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    goto :goto_3

    .line 2536
    :cond_8
    iput v4, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    goto :goto_3
.end method

.method private internalRespondViaSms()V
    .locals 3

    .prologue
    .line 8766
    const-string v1, "internalRespondViaSms()..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8767
    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v1, :cond_0

    invoke-static {}, Lcom/android/phone/PhoneUtils;->dumpCallManager()V

    .line 8769
    :cond_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

    if-nez v1, :cond_1

    .line 8770
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "got internalRespondViaSms(), but mRespondViaSmsManager was never initialized"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8777
    :cond_1
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 8778
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    .line 8783
    .local v0, ringingCall:Lcom/android/internal/telephony/Call;
    :goto_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

    invoke-virtual {v1, v0}, Lcom/android/phone/RespondViaSmsManager;->showRespondViaSmsPopup(Lcom/android/internal/telephony/Call;)V

    .line 8788
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->internalSilenceRinger()V

    .line 8789
    return-void

    .line 8780
    .end local v0           #ringingCall:Lcom/android/internal/telephony/Call;
    :cond_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v1}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .restart local v0       #ringingCall:Lcom/android/internal/telephony/Call;
    goto :goto_0
.end method

.method private internalSilenceRinger()V
    .locals 3

    .prologue
    .line 8744
    const-string v1, "internalSilenceRinger()..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8746
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 8747
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v1

    if-nez v1, :cond_1

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .line 8755
    .local v0, notifier:Lcom/android/phone/CallNotifier;
    :goto_0
    invoke-virtual {v0}, Lcom/android/phone/CallNotifier;->isRinging()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 8757
    invoke-virtual {v0}, Lcom/android/phone/CallNotifier;->silenceRinger()V

    .line 8759
    :cond_0
    return-void

    .line 8747
    .end local v0           #notifier:Lcom/android/phone/CallNotifier;
    :cond_1
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier2:Lcom/android/phone/CallNotifier;

    goto :goto_0

    .line 8748
    :cond_2
    const-string v1, "sec_product_feature_common_dsds_support"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 8749
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v2}, Lcom/android/phone/PhoneUtilsDsds;->getSubscription(Lcom/android/internal/telephony/Phone;)I

    move-result v2

    aget-object v0, v1, v2

    .restart local v0       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_0

    .line 8750
    .end local v0           #notifier:Lcom/android/phone/CallNotifier;
    :cond_3
    const-string v1, "feature_multisim"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    .line 8751
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getSimSlot()I

    move-result v2

    aget-object v0, v1, v2

    .restart local v0       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_0

    .line 8753
    .end local v0           #notifier:Lcom/android/phone/CallNotifier;
    :cond_4
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .restart local v0       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_0
.end method

.method private is2GNetwork()Z
    .locals 4

    .prologue
    const/4 v1, 0x1

    .line 5319
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getServiceState()Landroid/telephony/ServiceState;

    move-result-object v2

    invoke-virtual {v2}, Landroid/telephony/ServiceState;->getRilVoiceRadioTechnology()I

    move-result v0

    .line 5320
    .local v0, currnetRadioTech:I
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Currently connected network Tech. type is = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5322
    if-eq v0, v1, :cond_0

    const/4 v2, 0x2

    if-eq v0, v2, :cond_0

    const/16 v2, 0x10

    if-eq v0, v2, :cond_0

    const/4 v2, 0x4

    if-eq v0, v2, :cond_0

    const/4 v2, 0x5

    if-eq v0, v2, :cond_0

    const/4 v2, 0x6

    if-eq v0, v2, :cond_0

    if-nez v0, :cond_1

    .line 5331
    :cond_0
    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method private final isAirplaneModeOn()Z
    .locals 4

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 14407
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "airplane_mode_on"

    invoke-static {v2, v3, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-ne v2, v0, :cond_0

    :goto_0
    return v0

    :cond_0
    move v0, v1

    goto :goto_0
.end method

.method private isGsmNetwork()Z
    .locals 4

    .prologue
    const/4 v1, 0x1

    .line 5337
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getServiceState()Landroid/telephony/ServiceState;

    move-result-object v2

    invoke-virtual {v2}, Landroid/telephony/ServiceState;->getRilVoiceRadioTechnology()I

    move-result v0

    .line 5338
    .local v0, currnetRadioTech:I
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Currently connected netwokr Tech. type is = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5340
    if-eq v0, v1, :cond_0

    const/4 v2, 0x2

    if-eq v0, v2, :cond_0

    const/16 v2, 0x10

    if-ne v0, v2, :cond_1

    .line 5345
    :cond_0
    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method private log(Ljava/lang/String;)V
    .locals 1
    .parameter "msg"

    .prologue
    .line 12922
    const-string v0, "InVTCallScreen"

    invoke-static {v0, p1}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12923
    return-void
.end method

.method private log(Ljava/lang/String;Z)V
    .locals 1
    .parameter "msg"
    .parameter "always"

    .prologue
    .line 12926
    const-string v0, "InVTCallScreen"

    invoke-static {v0, p1, p2}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;Z)I

    .line 12927
    return-void
.end method

.method private okToDialDTMFTones()Z
    .locals 7

    .prologue
    const/4 v3, 0x1

    const/4 v4, 0x0

    .line 8966
    const-string v5, "feature_chn_duos"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 8967
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v5}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v5

    if-nez v5, :cond_1

    move v2, v3

    .line 8968
    .local v2, hasRingingCall:Z
    :goto_0
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v5}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .line 8983
    .local v1, fgCallState:Lcom/android/internal/telephony/Call$State;
    :goto_1
    sget-object v5, Lcom/android/internal/telephony/Call$State;->ACTIVE:Lcom/android/internal/telephony/Call$State;

    if-eq v1, v5, :cond_0

    sget-object v5, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-ne v1, v5, :cond_3

    :cond_0
    if-nez v2, :cond_3

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v5, v5, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v5, v5, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v6, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->MANAGE_CONFERENCE:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-eq v5, v6, :cond_3

    move v0, v3

    .line 8986
    .local v0, canDial:Z
    :goto_2
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "[okToDialDTMFTones] foreground state: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", ringing state: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", call screen mode: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v4, v4, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v4, v4, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", result: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8990
    return v0

    .end local v0           #canDial:Z
    .end local v1           #fgCallState:Lcom/android/internal/telephony/Call$State;
    .end local v2           #hasRingingCall:Z
    :cond_1
    move v2, v4

    .line 8967
    goto :goto_0

    .line 8970
    :cond_2
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v2

    .line 8971
    .restart local v2       #hasRingingCall:Z
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->getActiveFgCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .restart local v1       #fgCallState:Lcom/android/internal/telephony/Call$State;
    goto :goto_1

    :cond_3
    move v0, v4

    .line 8983
    goto :goto_2
.end method

.method private onDisconnect(Landroid/os/AsyncResult;)V
    .locals 12
    .parameter

    .prologue
    .line 5362
    iget-object v0, p1, Landroid/os/AsyncResult;->result:Ljava/lang/Object;

    check-cast v0, Lcom/android/internal/telephony/Connection;

    .line 5363
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getDisconnectCause()Lcom/android/internal/telephony/Connection$DisconnectCause;

    move-result-object v6

    .line 5364
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onDisconnect: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", cause="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x1

    invoke-direct {p0, v1, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 5365
    const/4 v1, 0x1

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 5366
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->phoneIsInUse()Z

    move-result v1

    if-nez v1, :cond_1

    const/4 v1, 0x1

    .line 5367
    :goto_0
    const/4 v4, 0x0

    .line 5368
    const-string v7, "autoredial_mode"

    .line 5369
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v2

    const/4 v3, 0x2

    if-ne v2, v3, :cond_2

    const/4 v2, 0x1

    .line 5370
    :goto_1
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v3

    const/4 v5, 0x1

    if-ne v3, v5, :cond_3

    const/4 v3, 0x1

    .line 5373
    :goto_2
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    if-eqz v5, :cond_0

    .line 5374
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-static {}, Lcom/android/phone/CallTime;->stopMinuteMinderAlarm()V

    .line 5377
    :cond_0
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v8

    .line 5378
    iget-object v5, v8, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v5, v5, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v9, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v5, v9, :cond_4

    .line 5379
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    .line 5380
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateScreen()V

    .line 6097
    :goto_3
    return-void

    .line 5366
    :cond_1
    const/4 v1, 0x0

    goto :goto_0

    .line 5369
    :cond_2
    const/4 v2, 0x0

    goto :goto_1

    .line 5370
    :cond_3
    const/4 v3, 0x0

    goto :goto_2

    .line 5382
    :cond_4
    iget-object v5, v8, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v5, v5, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v9, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v5, v9, :cond_5

    .line 5383
    const-string v0, "onDisconnect: OTA Call end already handled"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_3

    .line 5398
    :cond_5
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getNetworkType()V

    .line 5400
    const-string v5, "feature_chn_duos"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_6

    .line 5401
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    if-eqz v5, :cond_6

    .line 5402
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v5}, Landroid/app/AlertDialog;->dismiss()V

    .line 5403
    const/4 v5, 0x0

    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    .line 5408
    :cond_6
    const-string v5, "feature_ktt"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_f

    .line 5409
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getCallFailCause()I

    move-result v5

    .line 5410
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "callFailCause = "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-direct {p0, v9}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5412
    const/4 v9, 0x1

    if-ne v5, v9, :cond_7

    .line 5413
    const-string v0, "callFailCause == CallFailCause.UNASSIGNED_NUMBER"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5414
    const v0, 0x7f09054b

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_3

    .line 5416
    :cond_7
    const/16 v9, 0xf0

    if-ne v5, v9, :cond_8

    .line 5417
    const-string v0, "callFailCause == CallFailCause.CALL_BARRED"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5418
    const v0, 0x7f09054c

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_3

    .line 5420
    :cond_8
    const/16 v9, 0x12

    if-ne v5, v9, :cond_9

    .line 5421
    const-string v0, "callFailCause == CallFailCause.NO_USER_RESPONDING"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5422
    const v0, 0x7f09054d

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto :goto_3

    .line 5424
    :cond_9
    const/16 v9, 0x13

    if-ne v5, v9, :cond_a

    .line 5425
    const-string v0, "callFailCause == CallFailCause.USER_ALERTING_NO_ANSWER"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5426
    const v0, 0x7f09054e

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5428
    :cond_a
    const/16 v9, 0x14

    if-ne v5, v9, :cond_b

    .line 5429
    const-string v0, "callFailCause == CallFailCause.KTF_FAIL_CAUSE_20"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5430
    const v0, 0x7f09054f

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5432
    :cond_b
    const/16 v9, 0x26

    if-ne v5, v9, :cond_c

    .line 5433
    const-string v0, "callFailCause == CallFailCause.NETWORK_OUT_OF_ORDER"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5434
    const v0, 0x7f090550

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5436
    :cond_c
    const/16 v9, 0x72

    if-ne v5, v9, :cond_d

    .line 5437
    const-string v0, "callFailCause == CallFailCause.KTF_FAIL_CAUSE_114"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5438
    const v0, 0x7f090555

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5440
    :cond_d
    const/16 v9, 0x73

    if-ne v5, v9, :cond_e

    .line 5441
    const-string v0, "callFailCause == CallFailCause.KTF_FAIL_CAUSE_115"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5442
    const v0, 0x7f090556

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5444
    :cond_e
    const/16 v9, 0x74

    if-ne v5, v9, :cond_f

    .line 5445
    const-string v0, "callFailCause == CallFailCause.KTF_FAIL_CAUSE_116"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5446
    const v0, 0x7f090557

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5452
    :cond_f
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string v9, "usecall_fail_option"

    const/4 v10, 0x1

    invoke-static {v5, v9, v10}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v5

    .line 5455
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v9

    const-string v10, "usecall_fail_option_cmcc"

    const/4 v11, 0x1

    invoke-static {v9, v10, v11}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v9

    .line 5457
    const-string v10, "vt_cmcc_operator_fallback"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-nez v10, :cond_10

    const-string v10, "kor_cs_vt_network_operator"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_11

    .line 5459
    :cond_10
    const/4 v5, 0x0

    .line 5462
    :cond_11
    if-eqz v3, :cond_12

    .line 5463
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const/4 v10, 0x0

    invoke-static {v4, v7, v10}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v4

    .line 5466
    :cond_12
    const-string v7, "vt_cmcc_operator_fallback"

    invoke-static {v7}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_1b

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMPATIBLE_DEST:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_13

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NO_BEARER:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_13

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->BARRER_NOT_ALLOWED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_13

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NO_RESOURCE:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_13

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->is2GNetwork()Z

    move-result v7

    if-eqz v7, :cond_1b

    .line 5473
    :cond_13
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onDisconnect: mCMCCCallFailOption:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5474
    if-nez v9, :cond_18

    .line 5475
    const v1, 0x7f090407

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5476
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v1, :cond_14

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v1, :cond_14

    .line 5477
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v1, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5479
    :cond_14
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->FallBackCallNumber:Ljava/lang/String;

    .line 5480
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x309

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 5481
    const v0, 0x7f0904bf

    const/4 v1, 0x0

    invoke-static {p0, v0, v1}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v0

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    .line 6085
    :cond_15
    :goto_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCallButtonFrame:Landroid/view/View;

    if-eqz v0, :cond_17

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    if-eqz v0, :cond_17

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCallButtonFrame:Landroid/view/View;

    invoke-virtual {v0}, Landroid/view/View;->getVisibility()I

    move-result v0

    if-nez v0, :cond_16

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    invoke-virtual {v0}, Landroid/view/View;->getVisibility()I

    move-result v0

    if-eqz v0, :cond_17

    .line 6087
    :cond_16
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x8c

    const-wide/16 v2, 0x3e8

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 6092
    :cond_17
    iget-object v0, v8, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallState;->updateStateForDisconnect()V

    .line 6093
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->reset()V

    .line 6095
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isCallConnected:Z

    goto/16 :goto_3

    .line 5482
    :cond_18
    const/4 v0, 0x1

    if-ne v9, v0, :cond_19

    .line 5483
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const v1, 0x7f090407

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const v1, 0x7f0904c0

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5485
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto :goto_4

    .line 5487
    :cond_19
    const v0, 0x7f090407

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5488
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_1a

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_1a

    .line 5489
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5491
    :cond_1a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto :goto_4

    .line 5495
    :cond_1b
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->is2GNetwork()Z

    move-result v7

    if-eqz v7, :cond_1e

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOCAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_1e

    .line 5498
    if-eqz v5, :cond_1c

    if-nez v4, :cond_1c

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_1c

    .line 5499
    const v0, 0x7f090400

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5500
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5502
    :cond_1c
    const v0, 0x7f090401

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5503
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_1d

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_1d

    .line 5504
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5506
    :cond_1d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5510
    :cond_1e
    iget-boolean v7, p0, Lcom/android/phone/InVTCallScreen;->isCallConnected:Z

    if-eqz v7, :cond_1f

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NORMAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_1f

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOCAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_1f

    .line 5514
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5516
    :cond_1f
    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->CALL_BARRED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_22

    .line 5518
    if-eqz v5, :cond_20

    if-nez v4, :cond_20

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_20

    .line 5519
    const v0, 0x7f090402

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5520
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5522
    :cond_20
    const v0, 0x7f090403

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5523
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_21

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_21

    .line 5524
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5527
    :cond_21
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5531
    :cond_22
    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->BUSY:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_25

    .line 5535
    if-eqz v5, :cond_23

    if-nez v4, :cond_23

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_23

    .line 5536
    const v0, 0x7f090404

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5537
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5540
    :cond_23
    const v0, 0x7f090405

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5541
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_24

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_24

    .line 5542
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5544
    :cond_24
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5548
    :cond_25
    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->CONGESTION:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_35

    .line 5550
    if-eqz v5, :cond_26

    if-nez v4, :cond_26

    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v1, :cond_26

    .line 5551
    const v0, 0x7f090406

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5552
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5554
    :cond_26
    const-string v1, "kor_cs_vt_network_operator"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_33

    .line 5556
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getCallFailCause()I

    move-result v2

    .line 5557
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v3, "videocall_settings"

    const-string v0, "feature_lgt"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_2b

    const/4 v0, 0x0

    :goto_5
    invoke-static {v1, v3, v0}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-nez v0, :cond_2c

    const/4 v0, 0x0

    move v1, v0

    .line 5559
    :goto_6
    const/4 v0, 0x0

    .line 5560
    const/16 v3, 0x39

    if-eq v2, v3, :cond_27

    const/16 v3, 0x3a

    if-ne v2, v3, :cond_28

    .line 5561
    :cond_27
    const/4 v0, 0x1

    .line 5564
    :cond_28
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "callFailCause = "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5565
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "isAutoDivertVoiceCall: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5566
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "isBearerNotAvail = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5568
    if-eqz v0, :cond_15

    .line 5569
    if-eqz v1, :cond_32

    .line 5571
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 5572
    if-nez v0, :cond_29

    .line 5573
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 5576
    :cond_29
    if-eqz v0, :cond_2a

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    if-nez v1, :cond_2d

    .line 5577
    :cond_2a
    const-string v0, "Dialog not created due to getAddress is null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5579
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_3

    .line 5557
    :cond_2b
    const/4 v0, 0x1

    goto :goto_5

    :cond_2c
    const/4 v0, 0x1

    move v1, v0

    goto :goto_6

    .line 5584
    :cond_2d
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    .line 5586
    if-nez v0, :cond_2e

    .line 5587
    const-string v0, "Dialog not created due to number is null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5588
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_3

    .line 5592
    :cond_2e
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_2f

    .line 5594
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->restorecallprefix(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 5597
    :cond_2f
    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v1

    if-eqz v1, :cond_30

    .line 5598
    const/4 v1, 0x0

    const/4 v2, 0x1

    invoke-static {p0, v1, v2}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 5601
    :cond_30
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->delayedCleanupAfterDisconnect()V

    .line 5603
    const-string v1, "kor_cs_vt"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_31

    .line 5604
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->resetAudioState()V

    .line 5607
    :cond_31
    const v1, 0x7f09052e

    const/4 v2, 0x0

    invoke-static {p0, v1, v2}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v1

    invoke-virtual {v1}, Landroid/widget/Toast;->show()V

    .line 5608
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.CALL_PRIVILEGED"

    const-string v3, "tel"

    const/4 v4, 0x0

    invoke-static {v3, v0, v4}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v0

    invoke-direct {v1, v2, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 5609
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    goto/16 :goto_4

    .line 5611
    :cond_32
    const v0, 0x7f09052d

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5612
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5616
    :cond_33
    const v0, 0x7f090407

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5617
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_34

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_34

    .line 5618
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5620
    :cond_34
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5625
    :cond_35
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->IsTelefonicaOperator()Z

    move-result v7

    const/4 v9, 0x1

    if-ne v7, v9, :cond_39

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->BEARER_CAPABILITY_NOT_AUTHORIZED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_36

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMPATIBLE_DEST:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_39

    .line 5629
    :cond_36
    if-eqz v5, :cond_37

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_37

    .line 5630
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const v1, 0x7f090408

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const v1, 0x7f090409

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5632
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5635
    :cond_37
    const v0, 0x7f090408

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5636
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_38

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_38

    .line 5637
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5639
    :cond_38
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5643
    :cond_39
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->IsTelefonicaOperator()Z

    move-result v7

    const/4 v9, 0x1

    if-ne v7, v9, :cond_3d

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->ERROR_UNSPECIFIED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_3a

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->REQUESTED_FACILITY_NOT_IMPLEMENTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_3d

    .line 5647
    :cond_3a
    if-eqz v5, :cond_3b

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_3b

    .line 5648
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const v1, 0x7f09040a

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const v1, 0x7f090409

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5650
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5653
    :cond_3b
    const v0, 0x7f09040a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5654
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_3c

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_3c

    .line 5655
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5657
    :cond_3c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5661
    :cond_3d
    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->ERROR_UNSPECIFIED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_40

    .line 5663
    if-eqz v5, :cond_3e

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_3e

    .line 5664
    const v0, 0x7f090406

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5665
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5667
    :cond_3e
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_3f

    .line 5668
    const v0, 0x7f090407

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5669
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_3f

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_3f

    .line 5670
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5673
    :cond_3f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5676
    :cond_40
    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NO_ANSWER:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_41

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NO_USER_RESP:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_44

    .line 5678
    :cond_41
    if-eqz v5, :cond_42

    if-nez v4, :cond_42

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_42

    .line 5679
    const v0, 0x7f09040b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5680
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5683
    :cond_42
    const v0, 0x7f09040c

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5684
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_43

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_43

    .line 5685
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5687
    :cond_43
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5690
    :cond_44
    iget-boolean v7, p0, Lcom/android/phone/InVTCallScreen;->isCallConnected:Z

    if-nez v7, :cond_47

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NORMAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_47

    .line 5692
    if-eqz v5, :cond_45

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_45

    .line 5693
    const v0, 0x7f090406

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5694
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5696
    :cond_45
    const v0, 0x7f090407

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5697
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_46

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_46

    .line 5698
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5700
    :cond_46
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5703
    :cond_47
    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOST_SIGNAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_48

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->LIMIT_EXCEEDED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_48

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->CDMA_REORDER:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_48

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->ERROR_UNSPECIFIED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_4b

    .line 5707
    :cond_48
    const-string v0, "onDisconnect: Call failed Voice call dialog shown"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5708
    if-eqz v5, :cond_49

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_49

    .line 5709
    const v0, 0x7f090406

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5710
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5712
    :cond_49
    const v0, 0x7f090407

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5713
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_4a

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_4a

    .line 5714
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5716
    :cond_4a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5719
    :cond_4b
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->IsVAUOperator()Z

    move-result v7

    const/4 v9, 0x1

    if-ne v7, v9, :cond_4e

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->UAVAILABLE_CHANNEL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_4e

    .line 5722
    const-string v0, "onDisconnect: VAU DisconnectCause - UAVAILABLE_CHANNEL."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5723
    if-eqz v5, :cond_4c

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_4c

    .line 5724
    const v0, 0x7f090406

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5725
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5727
    :cond_4c
    const v0, 0x7f090407

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5728
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_4d

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_4d

    .line 5729
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5731
    :cond_4d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5734
    :cond_4e
    const-string v7, "vt_cmcc_operator_fallback"

    invoke-static {v7}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_50

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->UNOBTAINABLE_NUMBER:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_50

    .line 5736
    const v0, 0x7f0904c7

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5737
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_4f

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_4f

    .line 5738
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5740
    :cond_4f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5742
    :cond_50
    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->INVALID_NUM_FORMAT:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_51

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMPATIBLE_DEST:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_51

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->UNASSIGNED_NUM:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_51

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->DESTINATION_OUT_OF:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_51

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NO_BEARER:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_51

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->NO_SUBSCRIBED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v7, :cond_51

    sget-object v7, Lcom/android/internal/telephony/Connection$DisconnectCause;->CALL_REJECT:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v7, :cond_54

    .line 5749
    :cond_51
    if-eqz v5, :cond_52

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_52

    .line 5750
    const v0, 0x7f090406

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5751
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_4

    .line 5753
    :cond_52
    const v0, 0x7f090407

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 5754
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    if-eqz v0, :cond_53

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_53

    .line 5755
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5757
    :cond_53
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x6c

    const-wide/16 v2, 0x1194

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4

    .line 5761
    :cond_54
    const-string v5, "onDisconnect: do normal operation."

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5762
    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->CALL_BARRED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v5, :cond_55

    .line 5763
    const v0, 0x7f09001a

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5765
    :cond_55
    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->FDN_BLOCKED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v5, :cond_56

    .line 5766
    const v0, 0x7f090019

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5768
    :cond_56
    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->CS_RESTRICTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v5, :cond_57

    .line 5769
    const v0, 0x7f09001b

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5771
    :cond_57
    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->CS_RESTRICTED_EMERGENCY:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v5, :cond_58

    .line 5772
    const v0, 0x7f09001c

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5774
    :cond_58
    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->CS_RESTRICTED_NORMAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v5, :cond_59

    .line 5775
    const v0, 0x7f09001d

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5777
    :cond_59
    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->UNOBTAINABLE_NUMBER:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v5, :cond_5a

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->IsTelefonicaOperator()Z

    move-result v5

    const/4 v7, 0x1

    if-ne v5, v7, :cond_5a

    .line 5780
    const v0, 0x7f09001f

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    goto/16 :goto_3

    .line 5784
    :cond_5a
    if-eqz v2, :cond_5b

    .line 5785
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    invoke-virtual {v2}, Lcom/android/phone/CallNotifier;->getPreviousCdmaCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v2

    .line 5786
    sget-object v5, Lcom/android/internal/telephony/Call$State;->ACTIVE:Lcom/android/internal/telephony/Call$State;

    if-ne v2, v5, :cond_65

    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_MISSED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v5, :cond_65

    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->NORMAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v5, :cond_65

    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOCAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v5, :cond_65

    sget-object v5, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_REJECTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v5, :cond_65

    .line 5791
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showCallLostDialog()V

    .line 5821
    :cond_5b
    :goto_7
    if-eqz v3, :cond_5c

    .line 5822
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6a

    .line 5823
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v2

    if-nez v2, :cond_69

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .line 5824
    :goto_8
    invoke-virtual {v2}, Lcom/android/phone/CallNotifier;->getPreviousGsmCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v2

    .line 5833
    :goto_9
    sget-object v3, Lcom/android/internal/telephony/Call$State;->ACTIVE:Lcom/android/internal/telephony/Call$State;

    if-ne v2, v3, :cond_6d

    sget-object v3, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_MISSED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v3, :cond_6d

    sget-object v3, Lcom/android/internal/telephony/Connection$DisconnectCause;->NORMAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v3, :cond_6d

    sget-object v3, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOCAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v3, :cond_6d

    sget-object v3, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_REJECTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v3, :cond_6d

    sget-object v3, Lcom/android/internal/telephony/Connection$DisconnectCause;->BUSY:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v3, :cond_6d

    sget-object v3, Lcom/android/internal/telephony/Connection$DisconnectCause;->CONGESTION:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v3, :cond_6d

    .line 5840
    const v2, 0x7f090021

    const/4 v3, 0x0

    invoke-static {p0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v2

    invoke-virtual {v2}, Landroid/widget/Toast;->show()V

    .line 5886
    :cond_5c
    :goto_a
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .line 5887
    if-eqz v0, :cond_5e

    .line 5896
    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getConnections()Ljava/util/List;

    move-result-object v0

    .line 5897
    if-eqz v0, :cond_5e

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    const/4 v3, 0x1

    if-le v2, v3, :cond_5e

    .line 5898
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_5d
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_5e

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/Connection;

    .line 5899
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    sget-object v3, Lcom/android/internal/telephony/Call$State;->ACTIVE:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v3, :cond_5d

    .line 5909
    const-string v0, "- Still-active conf call; clearing DISCONNECTED..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5918
    :cond_5e
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5f

    .line 5929
    :cond_5f
    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_MISSED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v0, :cond_60

    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_REJECTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v0, :cond_60

    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->OUT_OF_SERVICE:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v0, :cond_60

    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->NET_OUT_OF:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v0, :cond_60

    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->SERVICE_UNAVAILABLE:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v0, :cond_73

    :cond_60
    if-eqz v1, :cond_73

    const/4 v0, 0x1

    .line 5934
    :goto_b
    const-string v2, "lawmo_lock"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_61

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/phone/PhoneGlobals;->getLawmoLockState()Z

    move-result v2

    if-eqz v2, :cond_61

    .line 5935
    const/4 v0, 0x1

    .line 5938
    :cond_61
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_62

    .line 5939
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v2, v3, :cond_62

    .line 5940
    const-string v0, "- onDisconnect: other phone is not IDLE..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5941
    const/4 v0, 0x1

    .line 5945
    :cond_62
    if-eqz v0, :cond_74

    .line 5946
    const-string v0, "- onDisconnect: bailOutImmediately..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5951
    invoke-virtual {v8}, Lcom/android/phone/PhoneGlobals;->pokeUserActivity()V

    .line 5952
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->delayedCleanupAfterDisconnect()V

    .line 5956
    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->OUT_OF_SERVICE:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v0, :cond_63

    .line 5959
    :cond_63
    const-string v0, "vt_cmcc_operator_fallback"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_64

    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_REJECTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v0, :cond_64

    .line 5961
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "AcceptByVoiceCallNumber : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->AcceptByVoiceCallNumber:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5962
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->AcceptByVoiceCallNumber:Ljava/lang/String;

    if-eqz v0, :cond_64

    .line 5963
    new-instance v0, Landroid/content/Intent;

    const-class v1, Lcom/android/phone/AutomaticAcceptAlertDialog;

    invoke-direct {v0, p0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V

    .line 5964
    const-string v1, "AcceptByVoiceCallNumber"

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->AcceptByVoiceCallNumber:Ljava/lang/String;

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 5965
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 5966
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->AcceptByVoiceCallNumber:Ljava/lang/String;

    .line 6080
    :cond_64
    :goto_c
    const-string v0, "vt_multimedia_ringback_tone_timer"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 6081
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0xaa

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    goto/16 :goto_4

    .line 5792
    :cond_65
    sget-object v5, Lcom/android/internal/telephony/Call$State;->DIALING:Lcom/android/internal/telephony/Call$State;

    if-eq v2, v5, :cond_66

    sget-object v5, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-ne v2, v5, :cond_5b

    :cond_66
    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_MISSED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_5b

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->NORMAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_5b

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOCAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_5b

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_REJECTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_5b

    .line 5798
    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    if-eqz v2, :cond_67

    .line 5802
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showCallLostDialog()V

    .line 5803
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    goto/16 :goto_7

    .line 5805
    :cond_67
    if-nez v4, :cond_68

    .line 5809
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showCallLostDialog()V

    .line 5810
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    goto/16 :goto_7

    .line 5816
    :cond_68
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    goto/16 :goto_7

    .line 5823
    :cond_69
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->notifier2:Lcom/android/phone/CallNotifier;

    goto/16 :goto_8

    .line 5825
    :cond_6a
    const-string v2, "sec_product_feature_common_dsds_support"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6b

    .line 5826
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v3}, Lcom/android/phone/PhoneUtilsDsds;->getSubscription(Lcom/android/internal/telephony/Phone;)I

    move-result v3

    aget-object v2, v2, v3

    invoke-virtual {v2}, Lcom/android/phone/CallNotifier;->getPreviousGsmCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v2

    goto/16 :goto_9

    .line 5827
    :cond_6b
    const-string v2, "feature_multisim"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6c

    .line 5828
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getSimSlot()I

    move-result v3

    aget-object v2, v2, v3

    invoke-virtual {v2}, Lcom/android/phone/CallNotifier;->getPreviousGsmCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v2

    goto/16 :goto_9

    .line 5830
    :cond_6c
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    invoke-virtual {v2}, Lcom/android/phone/CallNotifier;->getPreviousGsmCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v2

    goto/16 :goto_9

    .line 5841
    :cond_6d
    sget-object v3, Lcom/android/internal/telephony/Call$State;->DIALING:Lcom/android/internal/telephony/Call$State;

    if-eq v2, v3, :cond_6e

    sget-object v3, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-ne v2, v3, :cond_71

    :cond_6e
    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_MISSED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_71

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->NORMAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_71

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOCAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_71

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->INCOMING_REJECTED:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_71

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->BUSY:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_71

    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->CONGESTION:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-eq v6, v2, :cond_71

    .line 5849
    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    if-eqz v2, :cond_6f

    .line 5853
    const v2, 0x7f090021

    const/4 v3, 0x0

    invoke-static {p0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v2

    invoke-virtual {v2}, Landroid/widget/Toast;->show()V

    .line 5854
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    goto/16 :goto_a

    .line 5856
    :cond_6f
    if-nez v4, :cond_70

    .line 5860
    const v2, 0x7f090021

    const/4 v3, 0x0

    invoke-static {p0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v2

    invoke-virtual {v2}, Landroid/widget/Toast;->show()V

    .line 5861
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    goto/16 :goto_a

    .line 5867
    :cond_70
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    goto/16 :goto_a

    .line 5870
    :cond_71
    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->BUSY:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v2, :cond_72

    .line 5871
    const v2, 0x7f09000c

    const/4 v3, 0x0

    invoke-static {p0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v2

    invoke-virtual {v2}, Landroid/widget/Toast;->show()V

    goto/16 :goto_a

    .line 5872
    :cond_72
    sget-object v2, Lcom/android/internal/telephony/Connection$DisconnectCause;->CONGESTION:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v2, :cond_5c

    .line 5873
    const v2, 0x7f09000d

    const/4 v3, 0x0

    invoke-static {p0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v2

    invoke-virtual {v2}, Landroid/widget/Toast;->show()V

    goto/16 :goto_a

    .line 5929
    :cond_73
    const/4 v0, 0x0

    goto/16 :goto_b

    .line 5970
    :cond_74
    const-string v0, "- onDisconnect: delayed bailout..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5978
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateScreen()V

    .line 5983
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7c

    .line 5984
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    sget-object v2, Lcom/android/internal/telephony/Call$State;->DISCONNECTED:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v2, :cond_7a

    const/4 v0, 0x1

    .line 5985
    :goto_d
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v2}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v2

    sget-object v3, Lcom/android/internal/telephony/Call$State;->DISCONNECTED:Lcom/android/internal/telephony/Call$State;

    if-ne v2, v3, :cond_7b

    const/4 v2, 0x1

    .line 5990
    :goto_e
    if-eqz v1, :cond_76

    if-nez v0, :cond_75

    if-eqz v2, :cond_76

    .line 5991
    :cond_75
    const-string v0, "- onDisconnect: switching to \'Call ended\' state..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5992
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->CALL_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    .line 5998
    :cond_76
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7e

    .line 5999
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v0

    if-nez v0, :cond_7d

    const/4 v0, 0x1

    .line 6003
    :goto_f
    if-nez v0, :cond_79

    .line 6004
    const-string v0, "- onDisconnect: cleaning up after FG call disconnect..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6008
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_77

    .line 6009
    const-string v0, "- DISMISSING mWaitPromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6010
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 6012
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    .line 6014
    :cond_77
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWildPromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_78

    .line 6015
    const-string v0, "- DISMISSING mWildPromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6016
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWildPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 6018
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWildPromptDialog:Landroid/app/AlertDialog;

    .line 6020
    :cond_78
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_79

    .line 6021
    const-string v0, "- DISMISSING mPausePromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6022
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 6024
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPausePromptDialog:Landroid/app/AlertDialog;

    .line 6047
    :cond_79
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v0

    const/4 v2, 0x2

    if-ne v0, v2, :cond_80

    .line 6048
    if-nez v1, :cond_80

    .line 6055
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7f

    .line 6056
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->clearDisconnected()V

    .line 6063
    :goto_10
    const-string v0, "onDisconnect: Call Collision case - staying on InVTCallScreen."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 5984
    :cond_7a
    const/4 v0, 0x0

    goto/16 :goto_d

    .line 5985
    :cond_7b
    const/4 v2, 0x0

    goto :goto_e

    .line 5987
    :cond_7c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->hasDisconnectedFgCall()Z

    move-result v0

    .line 5988
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->hasDisconnectedBgCall()Z

    move-result v2

    goto/16 :goto_e

    .line 5999
    :cond_7d
    const/4 v0, 0x0

    goto :goto_f

    .line 6001
    :cond_7e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z

    move-result v0

    goto :goto_f

    .line 6058
    :cond_7f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->clearDisconnected()V

    goto :goto_10

    .line 6073
    :cond_80
    sget-object v0, Lcom/android/internal/telephony/Connection$DisconnectCause;->LOCAL:Lcom/android/internal/telephony/Connection$DisconnectCause;

    if-ne v6, v0, :cond_81

    const/16 v0, 0xdac

    .line 6075
    :goto_11
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x6c

    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeMessages(I)V

    .line 6076
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x6c

    int-to-long v3, v0

    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_c

    .line 6073
    :cond_81
    const/16 v0, 0xdac

    goto :goto_11
.end method

.method private onDisplaySize_Big()V
    .locals 3

    .prologue
    .line 14474
    invoke-static {}, Lcom/android/phone/InVTCallScreen;->getDisplayMode()Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    move-result-object v0

    .line 14475
    .local v0, displayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onDisplaySize_Big displayMode = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14476
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_LOCAL:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v0, v1, :cond_1

    .line 14478
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceView_BigRemote()V

    .line 14479
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->switchDisplayMode_ImageView()V

    .line 14486
    :cond_0
    :goto_0
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_REMOTE:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    invoke-static {v1}, Lcom/android/phone/InVTCallScreen;->setDisplayMode(Lcom/android/phone/InVTCallScreen$VideoDisplayMode;)V

    .line 14487
    return-void

    .line 14481
    :cond_1
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_REMOTE_ONLY:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v0, v1, :cond_0

    .line 14483
    const/4 v1, 0x0

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_BlockImage(Z)V

    goto :goto_0
.end method

.method private onDisplaySize_BigOnly()V
    .locals 4

    .prologue
    const/4 v3, 0x1

    .line 14513
    invoke-static {}, Lcom/android/phone/InVTCallScreen;->getDisplayMode()Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    move-result-object v0

    .line 14515
    .local v0, displayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onDisplaySize_BigOnly displayMode = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14516
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_LOCAL:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v0, v1, :cond_1

    .line 14518
    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_BlockImage(Z)V

    .line 14520
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceView_BigRemote()V

    .line 14521
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->switchDisplayMode_ImageView()V

    .line 14528
    :cond_0
    :goto_0
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_REMOTE_ONLY:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    invoke-static {v1}, Lcom/android/phone/InVTCallScreen;->setDisplayMode(Lcom/android/phone/InVTCallScreen$VideoDisplayMode;)V

    .line 14529
    return-void

    .line 14523
    :cond_1
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_REMOTE:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v0, v1, :cond_0

    .line 14525
    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_BlockImage(Z)V

    goto :goto_0
.end method

.method private onDisplaySize_BlockImage(Z)V
    .locals 2
    .parameter "bShow"

    .prologue
    .line 14543
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBlockImageView:Landroid/widget/ImageView;

    if-eqz p1, :cond_0

    const/4 v0, 0x0

    :goto_0
    invoke-virtual {v1, v0}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 14545
    return-void

    .line 14543
    :cond_0
    const/4 v0, 0x4

    goto :goto_0
.end method

.method private onDisplaySize_Old()V
    .locals 4

    .prologue
    .line 14433
    invoke-static {}, Lcom/android/phone/InVTCallScreen;->getOldDisplayMode()Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    move-result-object v1

    .line 14434
    .local v1, oldDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    invoke-static {}, Lcom/android/phone/InVTCallScreen;->getDisplayMode()Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    move-result-object v0

    .line 14435
    .local v0, displayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "oldDisplayMode = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14436
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "displayMode = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14437
    sget-object v2, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_REMOTE:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v1, v2, :cond_0

    .line 14439
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_Big()V

    .line 14453
    :goto_0
    return-void

    .line 14441
    :cond_0
    sget-object v2, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_LOCAL:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v1, v2, :cond_1

    .line 14443
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_Small()V

    goto :goto_0

    .line 14445
    :cond_1
    sget-object v2, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_REMOTE_ONLY:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v1, v2, :cond_2

    .line 14447
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_BigOnly()V

    goto :goto_0

    .line 14451
    :cond_2
    const-string v2, "not support old id"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method private onDisplaySize_Small()V
    .locals 3

    .prologue
    .line 14491
    invoke-static {}, Lcom/android/phone/InVTCallScreen;->getDisplayMode()Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    move-result-object v0

    .line 14493
    .local v0, displayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onDisplaySize_Small displayMode = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14494
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_REMOTE:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v0, v1, :cond_1

    .line 14496
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceView_BigLocal()V

    .line 14497
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->switchDisplayMode_ImageView()V

    .line 14508
    :cond_0
    :goto_0
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_BIG_LOCAL:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    invoke-static {v1}, Lcom/android/phone/InVTCallScreen;->setDisplayMode(Lcom/android/phone/InVTCallScreen$VideoDisplayMode;)V

    .line 14509
    return-void

    .line 14500
    :cond_1
    sget-object v1, Lcom/android/phone/InVTCallScreen$VideoDisplayMode;->DISPLAY_REMOTE_ONLY:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    if-ne v0, v1, :cond_0

    .line 14503
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceView_BigLocal()V

    .line 14504
    const/4 v1, 0x0

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->onDisplaySize_BlockImage(Z)V

    .line 14505
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->switchDisplayMode_ImageView()V

    goto :goto_0
.end method

.method private onMMICancel()V
    .locals 2

    .prologue
    .line 6137
    const-string v0, "onMMICancel()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6140
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->cancelMmiCode(Lcom/android/internal/telephony/Phone;)Z

    .line 6151
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_0

    .line 6152
    const-string v0, "onMMICancel: Phone state is IDLE, so finishing InVTCallScreen..."

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6153
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->endInVTCallScreenSession()V

    .line 6156
    :cond_0
    return-void
.end method

.method private onMMIComplete(Lcom/android/internal/telephony/MmiCode;)V
    .locals 5
    .parameter "mmiCode"

    .prologue
    const/4 v4, 0x0

    const/4 v3, 0x1

    .line 6176
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v0

    .line 6177
    .local v0, phoneType:I
    const/4 v1, 0x2

    if-ne v0, v1, :cond_1

    .line 6178
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-static {v1, v2, p1, v4, v4}, Lcom/android/phone/PhoneUtils;->displayMMIComplete(Lcom/android/internal/telephony/Phone;Landroid/content/Context;Lcom/android/internal/telephony/MmiCode;Landroid/os/Message;Landroid/app/AlertDialog;)V

    .line 6197
    :cond_0
    :goto_0
    return-void

    .line 6179
    :cond_1
    if-ne v0, v3, :cond_0

    .line 6180
    invoke-interface {p1}, Lcom/android/internal/telephony/MmiCode;->getState()Lcom/android/internal/telephony/MmiCode$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/MmiCode$State;->PENDING:Lcom/android/internal/telephony/MmiCode$State;

    if-eq v1, v2, :cond_0

    .line 6181
    const-string v1, "Got MMI_COMPLETE, finishing InVTCallScreen..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6182
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissAllDialogs()V

    .line 6183
    const-string v1, "vt_cmcc_operator_fallback"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 6185
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v1}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v1, v2, :cond_2

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->hasVideoCallConnection(Lcom/android/internal/telephony/CallManager;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 6186
    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v1, :cond_0

    const-string v1, "Got MMI_COMPLETE, but Call exist..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 6191
    :cond_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_0

    .line 6192
    const-string v1, "onMMIComplete: Phone state is IDLE, so finishing InVTCallScreen..."

    invoke-direct {p0, v1, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6193
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->endInVTCallScreenSession()V

    goto :goto_0
.end method

.method private onMMIInitiate(Landroid/os/AsyncResult;)V
    .locals 4
    .parameter "r"

    .prologue
    .line 6103
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onMMIInitiate()...  AsyncResult r = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6110
    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-nez v2, :cond_0

    .line 6111
    const-string v2, "Activity not in foreground! Bailing out..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6127
    :goto_0
    return-void

    .line 6119
    :cond_0
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissAllDialogs()V

    .line 6121
    iget-object v1, p1, Landroid/os/AsyncResult;->result:Ljava/lang/Object;

    check-cast v1, Lcom/android/internal/telephony/MmiCode;

    .line 6122
    .local v1, mmiCode:Lcom/android/internal/telephony/MmiCode;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  - MmiCode: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6124
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v3, 0x35

    invoke-static {v2, v3}, Landroid/os/Message;->obtain(Landroid/os/Handler;I)Landroid/os/Message;

    move-result-object v0

    .line 6125
    .local v0, message:Landroid/os/Message;
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    invoke-static {p0, v1, v0, v2}, Lcom/android/phone/PhoneUtils;->displayMMIInitiate(Landroid/content/Context;Lcom/android/internal/telephony/MmiCode;Landroid/os/Message;Landroid/app/Dialog;)Landroid/app/Dialog;

    move-result-object v2

    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    goto :goto_0
.end method

.method private onMuteClick()V
    .locals 3

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 7862
    const-string v2, "onMuteClick()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7864
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 7865
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v2}, Lcom/android/phone/PhoneUtils;->getMute(Lcom/android/internal/telephony/Phone;)Z

    move-result v2

    if-nez v2, :cond_1

    .line 7866
    .local v0, newMuteState:Z
    :goto_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v1, v0}, Lcom/android/phone/PhoneUtils;->setMute(Lcom/android/internal/telephony/Phone;Z)V

    .line 7872
    :goto_1
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v1, :cond_0

    .line 7873
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v1, v0}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 7875
    :cond_0
    return-void

    .end local v0           #newMuteState:Z
    :cond_1
    move v0, v1

    .line 7865
    goto :goto_0

    .line 7868
    :cond_2
    invoke-static {}, Lcom/android/phone/PhoneUtils;->getMute()Z

    move-result v2

    if-nez v2, :cond_3

    .line 7869
    .restart local v0       #newMuteState:Z
    :goto_2
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->setMute(Z)V

    goto :goto_1

    .end local v0           #newMuteState:Z
    :cond_3
    move v0, v1

    .line 7868
    goto :goto_2
.end method

.method private onPhoneStateChanged(Landroid/os/AsyncResult;)V
    .locals 12
    .parameter "r"

    .prologue
    const-wide/16 v10, 0x15e

    const/16 v9, 0x83

    const/16 v8, 0x8

    const/4 v7, 0x1

    .line 5176
    const-string v5, "onPhoneStateChanged()..."

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5180
    const-string v5, "feature_chn_duos"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 5181
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v5}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v4

    .line 5182
    .local v4, state:Lcom/android/internal/telephony/PhoneConstants$State;
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 5183
    .local v2, fgCall:Lcom/android/internal/telephony/Call;
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    .line 5190
    .local v3, ringingCall:Lcom/android/internal/telephony/Call;
    :goto_0
    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v4, v5, :cond_2

    invoke-static {v2}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v5

    if-nez v5, :cond_2

    .line 5251
    :cond_0
    :goto_1
    return-void

    .line 5185
    .end local v2           #fgCall:Lcom/android/internal/telephony/Call;
    .end local v3           #ringingCall:Lcom/android/internal/telephony/Call;
    .end local v4           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    :cond_1
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v4

    .line 5186
    .restart local v4       #state:Lcom/android/internal/telephony/PhoneConstants$State;
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v2

    .line 5187
    .restart local v2       #fgCall:Lcom/android/internal/telephony/Call;
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v5}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v3

    .restart local v3       #ringingCall:Lcom/android/internal/telephony/Call;
    goto :goto_0

    .line 5195
    :cond_2
    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v4, v5, :cond_3

    invoke-static {v3}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 5199
    :cond_3
    const-string v5, "barge_in"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 5200
    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v4, v5, :cond_4

    .line 5201
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCallBargeIn:Lcom/android/phone/CallBargeIn;

    const/4 v6, 0x2

    invoke-virtual {v5, v6}, Lcom/android/phone/CallBargeIn;->stopBargeIn(I)V

    .line 5204
    :cond_4
    const-string v5, "enhanced_driving_mode"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 5205
    if-eqz v2, :cond_5

    invoke-virtual {v2}, Lcom/android/internal/telephony/Call;->isDialingOrAlerting()Z

    move-result v5

    if-nez v5, :cond_5

    .line 5215
    :cond_5
    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v5, :cond_6

    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v4, v5, :cond_6

    .line 5216
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v5

    invoke-virtual {v5, v7}, Lcom/android/phone/PhoneGlobals;->updateVTDuringCallWakeState(Z)V

    .line 5220
    :cond_6
    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v4, v5, :cond_7

    .line 5221
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->updateKeyguardPolicy(Z)V

    .line 5223
    :cond_7
    const-string v5, "kor_cs_vt_network_operator"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_8

    .line 5225
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v5}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .line 5226
    .local v0, call:Lcom/android/internal/telephony/Call;
    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .line 5228
    .local v1, callstate:Lcom/android/internal/telephony/Call$State;
    sget-object v5, Lcom/android/internal/telephony/Call$State;->INCOMING:Lcom/android/internal/telephony/Call$State;

    if-eq v1, v5, :cond_8

    sget-object v5, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    if-eqz v5, :cond_8

    .line 5229
    const-string v5, "updateScreen()...mCANPToggleTimer cancel"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5230
    sget-object v5, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    invoke-virtual {v5}, Landroid/os/CountDownTimer;->cancel()V

    .line 5231
    const/4 v5, 0x0

    sput-object v5, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    .line 5238
    .end local v0           #call:Lcom/android/internal/telephony/Call;
    .end local v1           #callstate:Lcom/android/internal/telephony/Call$State;
    :cond_8
    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v5, :cond_9

    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v4, v5, :cond_9

    if-eqz v2, :cond_9

    invoke-virtual {v2}, Lcom/android/internal/telephony/Call;->isVideoCall()Z

    move-result v5

    if-eqz v5, :cond_9

    iget v5, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v5, v7, :cond_9

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-eqz v5, :cond_9

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v5}, Lcom/android/phone/IncomingCallWidget;->getVisibility()I

    move-result v5

    if-nez v5, :cond_9

    .line 5240
    const-string v5, "hide_IncomingCallWidget"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5241
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v5, v8}, Lcom/android/phone/IncomingCallWidget;->setVisibility(I)V

    .line 5242
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v5, v9, v10, v11}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_1

    .line 5243
    :cond_9
    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v5, :cond_a

    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v4, v5, :cond_a

    if-eqz v2, :cond_a

    invoke-virtual {v2}, Lcom/android/internal/telephony/Call;->isVideoCall()Z

    move-result v5

    if-eqz v5, :cond_a

    iget v5, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v5, v7, :cond_a

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    if-eqz v5, :cond_a

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    invoke-virtual {v5}, Lcom/android/phone/IncomingCallEasyImageWidget;->getVisibility()I

    move-result v5

    if-nez v5, :cond_a

    .line 5245
    const-string v5, "hide_IncomingcallEasyImageWidget"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5246
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    invoke-virtual {v5, v8}, Lcom/android/phone/IncomingCallEasyImageWidget;->setVisibility(I)V

    .line 5247
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v5, v9, v10, v11}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_1

    .line 5249
    :cond_a
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateScreen()V

    goto/16 :goto_1
.end method

.method private onShowHideDialpad()V
    .locals 1

    .prologue
    .line 7934
    const-string v0, "onShowHideDialpad()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7935
    return-void
.end method

.method private performBatteryLowProcess()V
    .locals 5

    .prologue
    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 1647
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsBatteryLow:Z

    if-eqz v0, :cond_1

    .line 1648
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->phoneIsInUse()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1649
    const-string v0, "Low battery and phone is in use"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1650
    sput-boolean v3, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    .line 1651
    sput-boolean v3, Lcom/android/phone/InVTCallScreen;->mHomePressed:Z

    .line 1652
    const v0, 0x7f0903e9

    .line 1653
    iget v1, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v2, 0x2

    if-ne v1, v2, :cond_0

    .line 1654
    const v0, 0x7f090528

    .line 1656
    :cond_0
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {p0, v0, v4}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    .line 1658
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    .line 1660
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_2

    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    if-eqz v0, :cond_2

    .line 1661
    const-string v0, "Low battery and VT Already started, so calling stopVT"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1662
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->isMO_Disconnect:Z

    .line 1663
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopVTCall()V

    .line 1691
    :cond_1
    :goto_0
    return-void

    .line 1666
    :cond_2
    const-string v0, "Low battery and VT not started so calling internal hangup "

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1668
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 1669
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    .line 1670
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .line 1675
    :goto_1
    if-eqz v1, :cond_4

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v2

    if-nez v2, :cond_4

    .line 1677
    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1678
    sput-boolean v4, Lcom/android/phone/InVTCallScreen;->disconnectDueToLowBattery:Z

    .line 1679
    const-string v0, "Low battery and incomming call rejected so calling internal hangup "

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1680
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalHangupRingingCall()V

    goto :goto_0

    .line 1672
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    .line 1673
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    goto :goto_1

    .line 1682
    :cond_4
    if-eqz v0, :cond_1

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1683
    const-string v0, "Low battery and during or MO call rejected  so calling internal hangup "

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1684
    sput-boolean v3, Lcom/android/phone/InVTCallScreen;->disconnectDueToLowBattery:Z

    .line 1685
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalPhoneHangup()V

    goto :goto_0
.end method

.method private phoneIsInUse()Z
    .locals 4

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 3964
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 3965
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v2, v3, :cond_1

    .line 3967
    :cond_0
    :goto_0
    return v0

    :cond_1
    move v0, v1

    .line 3965
    goto :goto_0

    .line 3967
    :cond_2
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v2, v3, :cond_0

    move v0, v1

    goto :goto_0
.end method

.method private placeCall(Landroid/content/Intent;)Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    .locals 11
    .parameter

    .prologue
    const/4 v3, -0x1

    const/4 v2, 0x0

    .line 6605
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "placeCall()...  intent = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6612
    const-string v0, "ril.skt.network_regist"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    .line 6615
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_20

    .line 6617
    invoke-static {v7}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_20

    .line 6620
    const-string v0, "CS"

    invoke-virtual {v7, v0}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result v0

    .line 6621
    const-string v1, ";PS"

    invoke-virtual {v7, v1}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result v1

    .line 6623
    if-eq v0, v3, :cond_20

    if-eq v1, v3, :cond_20

    .line 6625
    add-int/lit8 v0, v0, 0x2

    invoke-virtual {v7, v0, v1}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    .line 6626
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    move v1, v0

    .line 6635
    :goto_0
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 6636
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getServiceState()Landroid/telephony/ServiceState;

    move-result-object v0

    invoke-virtual {v0}, Landroid/telephony/ServiceState;->getState()I

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->checkIfOkToInitiateOutgoingCall(I)Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v0

    .line 6641
    :goto_1
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->getInitialNumber(Landroid/content/Intent;)Ljava/lang/String;

    move-result-object v5

    .line 6642
    const-string v3, "kor_cs_vt_network_operator"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 6643
    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->minitialnumber:Ljava/lang/String;

    .line 6645
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v3

    .line 6646
    if-eqz v3, :cond_1

    invoke-virtual {v3}, Landroid/net/Uri;->getScheme()Ljava/lang/String;

    .line 6649
    :cond_1
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getServiceState()Landroid/telephony/ServiceState;

    move-result-object v3

    invoke-virtual {v3}, Landroid/telephony/ServiceState;->getState()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->checkIfOkToInitiateOutgoingCall(I)Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    :try_end_0
    .catch Lcom/android/phone/PhoneUtils$VoiceMailNumberMissingException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v6

    .line 6663
    if-nez v5, :cond_5

    .line 6664
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "placeCall: couldn\'t get a phone number from Intent "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6665
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->NO_PHONE_NUMBER_SUPPLIED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    .line 6926
    :cond_2
    :goto_2
    return-object v0

    .line 6638
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getServiceState()I

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->checkIfOkToInitiateOutgoingCall(I)Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v0

    goto :goto_1

    .line 6650
    :catch_0
    move-exception v1

    .line 6655
    sget-object v1, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v0, v1, :cond_4

    .line 6656
    const-string v1, "Voicemail number not reachable in current SIM card state."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_2

    .line 6659
    :cond_4
    const-string v0, "VoiceMailNumberMissingException from getInitialNumber()"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6660
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->VOICEMAIL_NUMBER_MISSING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto :goto_2

    .line 6668
    :cond_5
    invoke-static {v5}, Landroid/telephony/PhoneNumberUtils;->isEmergencyNumber(Ljava/lang/String;)Z

    move-result v3

    .line 6669
    const-string v0, "android.intent.action.CALL_EMERGENCY"

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 6671
    const-string v4, "feature_multisim"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1f

    .line 6672
    invoke-static {v5}, Landroid/telephony/MultiSimPhoneNumberUtils;->isEmergencyNumber(Ljava/lang/String;)Z

    move-result v3

    .line 6673
    const-string v0, "android.intent.action.CALL_EMERGENCY"

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    move v4, v3

    move v3, v0

    .line 6676
    :goto_3
    const-string v0, "kor_cs_vt"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 6679
    const-string v0, "phone"

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/telephony/TelephonyManager;

    .line 6680
    invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;

    move-result-object v8

    .line 6681
    const-string v0, "gsm.sim.operator.numeric"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 6682
    const-string v0, "ril.simtype"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 6685
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v10

    if-eqz v10, :cond_7

    move v0, v2

    .line 6690
    :goto_4
    if-eqz v4, :cond_8

    const-string v10, "357858010034783"

    invoke-virtual {v8, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_6

    const/16 v8, 0xc

    if-ne v0, v8, :cond_8

    const-string v0, "45001"

    invoke-virtual {v9, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_8

    .line 6692
    :cond_6
    const-string v0, "InVTCallScreen"

    const-string v1, "placeCall: [Factory Test in default IMEI]  block the call "

    invoke-static {v0, v1}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6693
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->RESTRICT_EMERGENCY_OUTGOING_IN_FACTORY_TEST:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6688
    :cond_7
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    goto :goto_4

    .line 6698
    :cond_8
    const-string v0, "ril.currentsystem"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 6701
    const-string v8, "feature_kor_open"

    invoke-static {v8}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v8

    if-nez v8, :cond_9

    .line 6702
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v8

    if-nez v8, :cond_a

    .line 6703
    const-string v8, "2G"

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 6704
    const-string v0, "InVTCallScreen"

    const-string v1, "placeCall: [starting network_regist_videocall]  block the call "

    invoke-static {v0, v1}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6705
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->RESTRICT_OUTGOING_VIDEOCALL_IN_2G_GSM_AREA:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6709
    :cond_9
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->isGsmNetwork()Z

    move-result v0

    if-eqz v0, :cond_a

    .line 6710
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->RESTRICT_OUTGOING_VIDEOCALL_IN_2G_GSM_AREA:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6716
    :cond_a
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_c

    .line 6718
    invoke-static {}, Lcom/android/phone/PhoneUtilsExt;->isSKTRADEnabled()Ljava/lang/Boolean;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-eqz v0, :cond_c

    if-eqz v4, :cond_b

    invoke-static {v5}, Lcom/android/phone/PhoneUtilsExt;->isEmergencyNumberToChange(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_c

    .line 6719
    :cond_b
    invoke-static {}, Lcom/android/phone/PhoneUtilsExt;->isSKTRADDialingToKoreaEnabled()Ljava/lang/Boolean;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-eqz v0, :cond_d

    .line 6720
    const-string v0, "feature_ktt"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 6722
    invoke-static {v5}, Lcom/android/phone/PhoneUtilsExt;->changeVoiceMailBoxNumberForRAD(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 6724
    :goto_5
    invoke-static {v0}, Lcom/android/phone/PhoneUtilsExt;->changeDialingNumberForSKTRAD(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 6732
    :cond_c
    :goto_6
    const-string v0, "emergency_vtcall"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 6733
    if-eqz v4, :cond_e

    if-nez v3, :cond_e

    .line 6734
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Non-CALL_EMERGENCY Intent "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " attempted to call emergency number "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6736
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->CALL_FAILED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6726
    :cond_d
    invoke-static {v2}, Lcom/android/phone/PhoneUtilsExt;->setDialingNumberRevert(Z)V

    goto :goto_6

    .line 6737
    :cond_e
    if-nez v4, :cond_f

    if-eqz v3, :cond_f

    .line 6738
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Received CALL_EMERGENCY Intent "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " with non-emergency number "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " -- failing call."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6740
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->CALL_FAILED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6751
    :cond_f
    const-string v0, "feature_ktt"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 6752
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v6, v0, :cond_10

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->IMSI_UNKNOWN:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v6, v0, :cond_10

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_MS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v6, v0, :cond_10

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_ME:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v6, v0, :cond_10

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REG_FAIL:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v6, v0, :cond_10

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REGSTERING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v6, v0, :cond_10

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->STATE_OUT_OF_SERVICE:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-ne v6, v0, :cond_1d

    :cond_10
    move-object v0, v6

    .line 6766
    :goto_7
    sget-object v3, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v0, v3, :cond_13

    .line 6772
    const-string v2, "emergency_vtcall"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_12

    if-eqz v4, :cond_12

    sget-object v2, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->POWER_OFF:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-ne v0, v2, :cond_12

    .line 6773
    const-string v0, "placeCall: finishing InVTCallScreen..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6774
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->endInVTCallScreenSession()V

    .line 6775
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6761
    :cond_11
    if-eqz v4, :cond_1d

    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-ne v6, v0, :cond_1d

    .line 6762
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    .line 6763
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Emergency number detected, changing state to: "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_7

    .line 6777
    :cond_12
    const-string v2, "feature_skt"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 6779
    if-nez v4, :cond_2

    invoke-static {v7}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_2

    .line 6781
    const/4 v2, 0x2

    if-ne v1, v2, :cond_2

    .line 6782
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->NOT_REGISTERED_NUMBER:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6792
    :cond_13
    const-string v0, "Check if AutoCSP Service is available"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6793
    const-string v0, "feature_ltn_auto_csp"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_14

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->autoCSP:Lcom/android/phone/IAutoCSP;

    if-nez v0, :cond_14

    .line 6794
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getAutoCSP()Lcom/android/phone/IAutoCSP;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->autoCSP:Lcom/android/phone/IAutoCSP;

    .line 6798
    :cond_14
    const-string v0, "feature_ltn_auto_csp"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_16

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->autoCSP:Lcom/android/phone/IAutoCSP;

    if-eqz v0, :cond_16

    .line 6800
    :try_start_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->autoCSP:Lcom/android/phone/IAutoCSP;

    invoke-interface {v0}, Lcom/android/phone/IAutoCSP;->isAutoCSPEnabled()Z

    move-result v0

    if-eqz v0, :cond_16

    .line 6802
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->autoCSP:Lcom/android/phone/IAutoCSP;

    invoke-interface {v0, v5}, Lcom/android/phone/IAutoCSP;->getAutoCSPNumber(Ljava/lang/String;)Ljava/lang/String;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v0

    .line 6805
    :try_start_2
    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_15

    .line 6806
    const v3, 0x7f09069b

    const/4 v5, 0x0

    invoke-static {p0, v3, v5}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v3

    invoke-virtual {v3}, Landroid/widget/Toast;->show()V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2

    :cond_15
    move-object v5, v0

    .line 6820
    :cond_16
    :goto_8
    if-nez v4, :cond_17

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->is2GNetwork()Z

    move-result v0

    if-eqz v0, :cond_17

    .line 6821
    const-string v0, "The current connected network may not be able to support video call..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6822
    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->FallBackCallNumber:Ljava/lang/String;

    .line 6823
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->OUT_OF_3G_NETWORK:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6809
    :catch_1
    move-exception v0

    .line 6810
    :goto_9
    invoke-virtual {v0}, Landroid/os/RemoteException;->printStackTrace()V

    goto :goto_8

    .line 6825
    :cond_17
    const-string v0, "The current connected network may be able to support video call..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6827
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    .line 6828
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->mCM:Lcom/android/internal/telephony/CallManager;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    .line 6831
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_18

    if-nez v4, :cond_18

    invoke-static {v7}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_18

    .line 6834
    const-string v0, "feature_ktt"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_19

    .line 6835
    packed-switch v1, :pswitch_data_0

    .line 6880
    :cond_18
    :goto_a
    :pswitch_0
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mNeedShowCallLostDialog:Z

    .line 6887
    invoke-virtual {p1}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v0

    .line 6892
    const-string v1, "feature_chn_duos_gsm_gsm"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 6893
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->isDialingOrAlerting()Z

    move-result v1

    if-eqz v1, :cond_1a

    .line 6894
    const-string v0, "placeCall: otherphone is dialing now"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6895
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->CALL_FAILED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6837
    :pswitch_1
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->IMSI_UNKNOWN:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6840
    :pswitch_2
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_MS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6843
    :pswitch_3
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->ILLEGAL_ME:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6849
    :pswitch_4
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REG_FAIL:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6854
    :pswitch_5
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->LOCATION_REGSTERING:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6861
    :cond_19
    sparse-switch v1, :sswitch_data_0

    goto :goto_a

    .line 6863
    :sswitch_0
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->NOT_REGISTERED_NUMBER:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6871
    :sswitch_1
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->EMERGENCY_ONLY:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6896
    :cond_1a
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_1c

    .line 6897
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->isMultiCall(Lcom/android/internal/telephony/Phone;)Z

    move-result v1

    if-eqz v1, :cond_1b

    .line 6898
    const-string v0, "placeCall: otherphone is busy now"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6899
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->CALL_FAILED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6901
    :cond_1b
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->holdCall(Lcom/android/internal/telephony/Phone;)Z

    .line 6905
    :cond_1c
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v1, v5, v0}, Lcom/android/phone/PhoneUtils;->dialVideoCall(Lcom/android/internal/telephony/Phone;Ljava/lang/String;Landroid/net/Uri;)I

    move-result v0

    .line 6909
    packed-switch v0, :pswitch_data_1

    .line 6924
    const-string v1, "InVTCallScreen"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "placeCall: unknown callStatus "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " from PhoneUtils.placeCall() for number \'"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, "\'."

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6926
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6911
    :pswitch_6
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "placeCall: PhoneUtils.placeCall() succeeded for regular call \'"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "\'."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6913
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6915
    :pswitch_7
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "placeCall: specified number was an MMI code: \'"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "\'."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6916
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->DIALED_MMI:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6918
    :pswitch_8
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "placeCall: PhoneUtils.placeCall() FAILED for number \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\'."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6922
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->CALL_FAILED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto/16 :goto_2

    .line 6809
    :catch_2
    move-exception v3

    move-object v5, v0

    move-object v0, v3

    goto/16 :goto_9

    :cond_1d
    move-object v0, v6

    goto/16 :goto_7

    :cond_1e
    move-object v0, v5

    goto/16 :goto_5

    :cond_1f
    move v4, v3

    move v3, v0

    goto/16 :goto_3

    :cond_20
    move v1, v2

    goto/16 :goto_0

    .line 6835
    nop

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_1
        :pswitch_2
        :pswitch_0
        :pswitch_0
        :pswitch_3
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_4
        :pswitch_4
        :pswitch_4
        :pswitch_0
        :pswitch_4
        :pswitch_5
        :pswitch_5
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_5
    .end packed-switch

    .line 6861
    :sswitch_data_0
    .sparse-switch
        0x2 -> :sswitch_0
        0x3 -> :sswitch_1
        0x6 -> :sswitch_1
        0xb -> :sswitch_1
        0xc -> :sswitch_1
        0x11 -> :sswitch_1
        0x16 -> :sswitch_1
    .end sparse-switch

    .line 6909
    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_6
        :pswitch_7
        :pswitch_8
    .end packed-switch
.end method

.method private prepareCaptureAnimation()V
    .locals 7

    .prologue
    const v6, 0x7f02077c

    const v5, 0x7f02077b

    const v4, 0x7f02077a

    const/16 v3, 0x7b

    const/16 v2, 0x5a

    .line 12962
    const-string v0, "prepareCaptureAnimation() :: Inside prepare image animation"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12963
    new-instance v0, Landroid/graphics/drawable/AnimationDrawable;

    invoke-direct {v0}, Landroid/graphics/drawable/AnimationDrawable;-><init>()V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    .line 12964
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, v6}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1, v2}, Landroid/graphics/drawable/AnimationDrawable;->addFrame(Landroid/graphics/drawable/Drawable;I)V

    .line 12966
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, v5}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1, v2}, Landroid/graphics/drawable/AnimationDrawable;->addFrame(Landroid/graphics/drawable/Drawable;I)V

    .line 12968
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, v4}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1, v3}, Landroid/graphics/drawable/AnimationDrawable;->addFrame(Landroid/graphics/drawable/Drawable;I)V

    .line 12970
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, v4}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1, v3}, Landroid/graphics/drawable/AnimationDrawable;->addFrame(Landroid/graphics/drawable/Drawable;I)V

    .line 12972
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, v5}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1, v2}, Landroid/graphics/drawable/AnimationDrawable;->addFrame(Landroid/graphics/drawable/Drawable;I)V

    .line 12974
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, v6}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1, v2}, Landroid/graphics/drawable/AnimationDrawable;->addFrame(Landroid/graphics/drawable/Drawable;I)V

    .line 12976
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/graphics/drawable/AnimationDrawable;->setOneShot(Z)V

    .line 12977
    return-void
.end method

.method private registerBatteryListener()V
    .locals 2

    .prologue
    .line 1824
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 1825
    .local v0, intentFilterBattery:Landroid/content/IntentFilter;
    const-string v1, "android.intent.action.BATTERY_LOW"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1826
    const-string v1, "android.intent.action.BATTERY_CHANGED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1827
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mLowBatteryReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v1, v0}, Lcom/android/phone/InVTCallScreen;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 1828
    return-void
.end method

.method private registerDevicePolicyManagerReceiver()V
    .locals 2

    .prologue
    .line 1831
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 1832
    .local v0, intentFilterSecurity:Landroid/content/IntentFilter;
    const-string v1, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1833
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDeviceManagerPolicyReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v1, v0}, Lcom/android/phone/InVTCallScreen;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 1834
    return-void
.end method

.method private registerForPhoneStates()V
    .locals 7

    .prologue
    const/16 v6, 0x66

    const/16 v5, 0x65

    const/16 v4, 0x34

    const/16 v2, 0x33

    const/4 v3, 0x0

    .line 3310
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mRegisteredForPhoneStates:Z

    if-nez v0, :cond_0

    .line 3311
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3312
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1, v5, v3}, Lcom/android/internal/telephony/Phone;->registerForPreciseCallStateChanged(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3313
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1, v6, v3}, Lcom/android/internal/telephony/Phone;->registerForDisconnect(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3314
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1, v2, v3}, Lcom/android/internal/telephony/Phone;->registerForMmiInitiate(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3320
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1, v4, v3}, Lcom/android/internal/telephony/Phone;->registerForMmiComplete(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3321
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x73

    invoke-interface {v0, v1, v2, v3}, Lcom/android/internal/telephony/Phone;->registerForCallWaiting(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3322
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x68

    invoke-interface {v0, v1, v2, v3}, Lcom/android/internal/telephony/Phone;->setOnPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3323
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x6e

    invoke-interface {v0, v1, v2, v3}, Lcom/android/internal/telephony/Phone;->registerForSuppServiceFailed(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3324
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x75

    invoke-interface {v0, v1, v2, v3}, Lcom/android/internal/telephony/Phone;->registerForCdmaOtaStatusChange(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3340
    :goto_0
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mRegisteredForPhoneStates:Z

    .line 3342
    :cond_0
    return-void

    .line 3326
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1, v5, v3}, Lcom/android/internal/telephony/CallManager;->registerForPreciseCallStateChanged(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3327
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1, v6, v3}, Lcom/android/internal/telephony/CallManager;->registerForDisconnect(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3328
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/internal/telephony/CallManager;->registerForMmiInitiate(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3334
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1, v4, v3}, Lcom/android/internal/telephony/CallManager;->registerForMmiComplete(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3335
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x73

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/internal/telephony/CallManager;->registerForCallWaiting(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3336
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x68

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/internal/telephony/CallManager;->registerForPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3337
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x6e

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/internal/telephony/CallManager;->registerForSuppServiceFailed(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3338
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x75

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/internal/telephony/CallManager;->registerForCdmaOtaStatusChange(Landroid/os/Handler;ILjava/lang/Object;)V

    goto :goto_0
.end method

.method private registerPowerOffAnimationStartListener()V
    .locals 2

    .prologue
    .line 1845
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 1846
    .local v0, intentFilterShutdown:Landroid/content/IntentFilter;
    const-string v1, "android.intent.action.ACTION_SHUTDOWN"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1847
    const-string v1, "POWER_OFF_ANIMATION_START"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1848
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPowerOffAnimationReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v1, v0}, Lcom/android/phone/InVTCallScreen;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 1849
    return-void
.end method

.method private registerSDCardListener()V
    .locals 3

    .prologue
    .line 1837
    new-instance v0, Landroid/content/IntentFilter;

    const-string v1, "android.intent.action.MEDIA_EJECT"

    invoke-direct {v0, v1}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    .line 1838
    .local v0, sdCardIntentFilter:Landroid/content/IntentFilter;
    const-string v1, "file"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 1839
    const-string v1, "*"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/IntentFilter;->addDataAuthority(Ljava/lang/String;Ljava/lang/String;)V

    .line 1840
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSDCardReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v1, v0}, Lcom/android/phone/InVTCallScreen;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 1841
    return-void
.end method

.method private removesurfaceview()V
    .locals 2

    .prologue
    const/4 v1, 0x0

    .line 13435
    const-string v0, "In removesurfaceview"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13437
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 13438
    const-string v0, "In  not null condition"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13439
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setVisibility(I)V

    .line 13440
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setVisibility(I)V

    .line 13441
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setClickable(Z)V

    .line 13442
    const-string v0, "Out not null condition"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13444
    :cond_0
    const-string v0, "Out removesurfaceview"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13445
    return-void
.end method

.method private requestAudioFocus()Z
    .locals 7

    .prologue
    .line 15364
    const/4 v0, 0x0

    .line 15365
    .local v0, focusResult:I
    const/4 v1, 0x0

    .line 15367
    .local v1, result:Z
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    if-eqz v3, :cond_0

    .line 15368
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mAudioFocusListener:Landroid/media/AudioManager$OnAudioFocusChangeListener;

    const/4 v5, 0x3

    const/4 v6, 0x2

    invoke-virtual {v3, v4, v5, v6}, Landroid/media/AudioManager;->requestAudioFocus(Landroid/media/AudioManager$OnAudioFocusChangeListener;II)I

    move-result v0

    .line 15369
    const/4 v3, 0x1

    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->setIsRequestAudioFocus(Z)V

    .line 15375
    if-nez v0, :cond_1

    .line 15376
    const-string v3, "requestAudioFocus is failed"

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    :goto_0
    move v2, v1

    .line 15382
    .end local v1           #result:Z
    .local v2, result:I
    :goto_1
    return v2

    .line 15371
    .end local v2           #result:I
    .restart local v1       #result:Z
    :cond_0
    const-string v3, "mAudioManager is null"

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    move v2, v1

    .line 15372
    .restart local v2       #result:I
    goto :goto_1

    .line 15378
    .end local v2           #result:I
    :cond_1
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "requestAudioFocus is "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15379
    const/4 v1, 0x1

    goto :goto_0
.end method

.method private requestLowFPS(Z)V
    .locals 3
    .parameter "enable"

    .prologue
    .line 15353
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Request low FPS : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15354
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 15355
    .local v0, boostIntent:Landroid/content/Intent;
    const-string v1, "com.sec.android.intent.action.SSRM_REQUEST"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 15356
    const-string v1, "SSRM_STATUS_NAME"

    const-string v2, "Phone_vtCall"

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 15357
    const-string v1, "SSRM_STATUS_VALUE"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 15358
    const-string v1, "PackageName"

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 15359
    const-string v1, "PID"

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 15360
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->sendBroadcast(Landroid/content/Intent;)V

    .line 15361
    return-void
.end method

.method private resetAudioState()V
    .locals 4

    .prologue
    .line 1815
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getContext()Landroid/content/Context;

    move-result-object v1

    const/4 v2, 0x0

    const/4 v3, 0x1

    invoke-static {v1, v2, v3}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 1817
    invoke-static {}, Lcom/android/phone/PhoneUtils;->setAudioMode()V

    .line 1818
    new-instance v0, Landroid/content/Intent;

    const-string v1, "com.android.phone.COMPLETE_AUDIO_RESET_AFTER_CALL_END"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1819
    .local v0, intent:Landroid/content/Intent;
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getContext()Landroid/content/Context;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    .line 1820
    const-string v1, "complete to send com.android.phone.COMPLETE_AUDIO_RESET_AFTER_CALL_END"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1821
    return-void
.end method

.method private restoreFocusedButtonIndex()V
    .locals 2

    .prologue
    .line 14948
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

    sget-object v1, Lcom/android/phone/InVTCallScreen$FocusedButton;->SWITCH_CAMERA:Lcom/android/phone/InVTCallScreen$FocusedButton;

    if-ne v0, v1, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 14949
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0}, Landroid/widget/Button;->requestFocus()Z

    .line 14954
    :cond_0
    :goto_0
    return-void

    .line 14950
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

    sget-object v1, Lcom/android/phone/InVTCallScreen$FocusedButton;->HIDE:Lcom/android/phone/InVTCallScreen$FocusedButton;

    if-ne v0, v1, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_2

    .line 14951
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0}, Landroid/widget/ToggleButton;->requestFocus()Z

    goto :goto_0

    .line 14952
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

    sget-object v1, Lcom/android/phone/InVTCallScreen$FocusedButton;->END_CALL:Lcom/android/phone/InVTCallScreen$FocusedButton;

    if-ne v0, v1, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 14953
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    invoke-virtual {v0}, Landroid/widget/Button;->requestFocus()Z

    goto :goto_0
.end method

.method private restorecallprefix(Ljava/lang/String;)Ljava/lang/String;
    .locals 5
    .parameter "inputstring"

    .prologue
    const/16 v4, 0x23

    const/4 v3, 0x0

    .line 14656
    const/4 v0, 0x0

    .line 14658
    .local v0, output:Ljava/lang/String;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "minitialnumber = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->minitialnumber:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", inputstring = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14660
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->minitialnumber:Ljava/lang/String;

    if-eqz v1, :cond_0

    if-nez p1, :cond_1

    .line 14661
    :cond_0
    move-object v0, p1

    .line 14670
    :goto_0
    return-object v0

    .line 14663
    :cond_1
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->minitialnumber:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->charAt(I)C

    move-result v1

    if-ne v1, v4, :cond_2

    invoke-virtual {p1, v3}, Ljava/lang/String;->charAt(I)C

    move-result v1

    if-eq v1, v4, :cond_2

    .line 14664
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->minitialnumber:Ljava/lang/String;

    goto :goto_0

    .line 14666
    :cond_2
    move-object v0, p1

    goto :goto_0
.end method

.method private setCurrentOrientationState()V
    .locals 2

    .prologue
    .line 14195
    const-string v1, "window"

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/view/WindowManager;

    invoke-interface {v1}, Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;

    move-result-object v0

    .line 14196
    .local v0, display:Landroid/view/Display;
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v1, :cond_0

    sget-boolean v1, Lcom/android/phone/PhoneGlobals;->mIsDockConnected:Z

    if-eqz v1, :cond_1

    .line 14197
    :cond_0
    invoke-virtual {v0}, Landroid/view/Display;->getRotation()I

    move-result v1

    sput v1, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    .line 14201
    :goto_0
    return-void

    .line 14199
    :cond_1
    const/4 v1, 0x0

    sput v1, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    goto :goto_0
.end method

.method public static setDisplayMode(Lcom/android/phone/InVTCallScreen$VideoDisplayMode;)V
    .locals 3
    .parameter "displayMode"

    .prologue
    .line 14412
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "setDisplayMode  =  "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14413
    sput-object p0, Lcom/android/phone/InVTCallScreen;->sDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    .line 14414
    return-void
.end method

.method private setHandGripCondition(Z)V
    .locals 3
    .parameter "activate"

    .prologue
    .line 15445
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "RequestsetHandGripCondition : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15447
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 15448
    .local v0, boostIntent:Landroid/content/Intent;
    const-string v1, "com.sec.android.intent.action.SSRM_REQUEST"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 15449
    const-string v1, "SSRM_STATUS_NAME"

    const-string v2, "Phone_dialer"

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 15450
    const-string v1, "SSRM_STATUS_VALUE"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 15451
    const-string v1, "PackageName"

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 15452
    const-string v1, "PID"

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 15453
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->sendBroadcast(Landroid/content/Intent;)V

    .line 15454
    return-void
.end method

.method private setHideOrShowMeState()V
    .locals 8

    .prologue
    const v7, 0x7f0207ff

    const v6, 0x7f020451

    const v5, 0x7f0a03d5

    const v4, 0x7f020627

    const/4 v3, 0x0

    .line 12460
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-nez v0, :cond_0

    .line 12461
    const v0, 0x7f0a0365

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    .line 12463
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-nez v0, :cond_1

    .line 12537
    :goto_0
    return-void

    .line 12467
    :cond_1
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 12468
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    move-object v1, v0

    .line 12472
    :goto_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v3}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_8

    .line 12473
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v2, 0x7f090432

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setText(I)V

    .line 12474
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_3

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_4

    const-string v0, "no_receiver_in_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 12477
    :cond_3
    sget-object v0, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v0, :cond_6

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    if-ne v2, v0, :cond_6

    .line 12479
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_4

    .line 12480
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v7, v3, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    .line 12491
    :cond_4
    :goto_2
    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    goto :goto_0

    .line 12470
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    move-object v1, v0

    goto :goto_1

    .line 12482
    :cond_6
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 12483
    sget-object v0, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v1, v0, :cond_4

    .line 12484
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v3, v4, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto :goto_2

    .line 12487
    :cond_7
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_4

    .line 12488
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v3, v4, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto :goto_2

    .line 12493
    :cond_8
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_d

    .line 12495
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_9

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_a

    const-string v0, "no_receiver_in_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 12498
    :cond_9
    sget-object v0, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v0, :cond_b

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    if-ne v2, v0, :cond_b

    .line 12500
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 12501
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f0207fe

    invoke-virtual {v0, v1, v3, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    .line 12512
    :cond_a
    :goto_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f0903fa

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    goto/16 :goto_0

    .line 12503
    :cond_b
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_c

    .line 12504
    sget-object v0, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v1, v0, :cond_a

    .line 12505
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v3, v6, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto :goto_3

    .line 12508
    :cond_c
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 12509
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v3, v6, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto :goto_3

    .line 12516
    :cond_d
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_e

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_f

    const-string v0, "no_receiver_in_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 12520
    :cond_e
    sget-object v0, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v0, :cond_10

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    if-ne v2, v0, :cond_10

    .line 12522
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 12523
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v7, v3, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    .line 12534
    :cond_f
    :goto_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x7f090432

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setText(I)V

    goto/16 :goto_0

    .line 12525
    :cond_10
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 12526
    sget-object v0, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v1, v0, :cond_f

    .line 12527
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v3, v4, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto :goto_4

    .line 12530
    :cond_11
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 12531
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v3, v4, v3, v3}, Landroid/widget/Button;->setCompoundDrawablesWithIntrinsicBounds(IIII)V

    goto :goto_4
.end method

.method private setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V
    .locals 3
    .parameter "newMode"

    .prologue
    .line 8854
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "setInVTCallScreenMode: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8855
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-object p1, v1, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    .line 8856
    sget-object v1, Lcom/android/phone/InVTCallScreen$78;->$SwitchMap$com$android$phone$InVTCallState$InVTCallScreenMode:[I

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v2, v2, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-virtual {v2}, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    .line 8919
    :cond_0
    :goto_0
    :pswitch_0
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateInCallTouchUi()V

    .line 8920
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 8921
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSimUI()V

    .line 8923
    :cond_1
    :pswitch_1
    return-void

    .line 8895
    :pswitch_2
    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.android.phone.InCallScreen.UNDEFINED"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->setIntent(Landroid/content/Intent;)V

    .line 8900
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 8901
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    .line 8905
    .local v0, state:Lcom/android/internal/telephony/PhoneConstants$State;
    :goto_1
    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_0

    .line 8907
    const-string v1, "WARNING: Setting mode to UNDEFINED but phone is OFFHOOK, skip cleanOtaScreen."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 8903
    .end local v0           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    :cond_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v1}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    .restart local v0       #state:Lcom/android/internal/telephony/PhoneConstants$State;
    goto :goto_1

    .line 8856
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_2
        :pswitch_1
    .end packed-switch
.end method

.method private setKeyguardDefaultWallpaper(Landroid/content/Context;)Z
    .locals 4
    .parameter

    .prologue
    const/4 v0, 0x0

    .line 15905
    if-nez p1, :cond_1

    .line 15933
    :cond_0
    :goto_0
    return v0

    .line 15908
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    .line 15911
    :try_start_0
    const-string v2, "com.android.keyguard"

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->getResourcesForApplication(Ljava/lang/String;)Landroid/content/res/Resources;
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 15917
    if-eqz v1, :cond_0

    .line 15922
    :try_start_1
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "keyguard_default_wallpaper_res_id"

    invoke-static {v2, v3}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;)I
    :try_end_1
    .catch Landroid/provider/Settings$SettingNotFoundException; {:try_start_1 .. :try_end_1} :catch_1

    move-result v2

    .line 15928
    const/4 v3, -0x1

    if-eq v2, v3, :cond_0

    .line 15931
    const v0, 0x7f0a026e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    .line 15932
    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/view/View;->setBackground(Landroid/graphics/drawable/Drawable;)V

    .line 15933
    const/4 v0, 0x1

    goto :goto_0

    .line 15912
    :catch_0
    move-exception v1

    .line 15913
    invoke-virtual {v1}, Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V

    goto :goto_0

    .line 15923
    :catch_1
    move-exception v1

    .line 15924
    invoke-virtual {v1}, Landroid/provider/Settings$SettingNotFoundException;->printStackTrace()V

    goto :goto_0
.end method

.method private setLastCaptureFileID(J)V
    .locals 5
    .parameter "counter"

    .prologue
    .line 14561
    const-string v2, "VTCaptureFile"

    const/4 v3, 0x0

    invoke-virtual {p0, v2, v3}, Lcom/android/phone/InVTCallScreen;->getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;

    move-result-object v1

    .line 14562
    .local v1, setVTCaptureID:Landroid/content/SharedPreferences;
    invoke-interface {v1}, Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;

    move-result-object v0

    .line 14563
    .local v0, editID:Landroid/content/SharedPreferences$Editor;
    const-string v2, "captureID"

    const-wide/16 v3, 0x1

    add-long/2addr v3, p1

    invoke-interface {v0, v2, v3, v4}, Landroid/content/SharedPreferences$Editor;->putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor;

    .line 14564
    invoke-interface {v0}, Landroid/content/SharedPreferences$Editor;->commit()Z

    .line 14565
    return-void
.end method

.method private setLeftOneHandModeArrow()V
    .locals 3

    .prologue
    .line 15403
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsShowEndCallScreenStarted:Z

    if-eqz v0, :cond_3

    .line 15404
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_0

    .line 15405
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15407
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_1

    .line 15408
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15415
    :cond_1
    :goto_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_DIRECTION:Ljava/lang/String;

    const/4 v2, 0x0

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 15416
    :cond_2
    return-void

    .line 15410
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    if-eqz v0, :cond_2

    .line 15411
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;->setLeftOneHandModeArrow()V

    goto :goto_0
.end method

.method private setMultiwindowTrayDisable(Z)V
    .locals 4
    .parameter

    .prologue
    const/4 v2, 0x1

    .line 1717
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "setMultiwindowTrayDisable() isDisable:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 1718
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "not_support_vt_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1719
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-nez v0, :cond_2

    .line 1720
    const-string v0, "mMultiWindow is null"

    invoke-direct {p0, v0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 1732
    :cond_1
    :goto_0
    return-void

    .line 1723
    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v0

    .line 1724
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v1

    invoke-virtual {v1}, Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;

    move-result-object v1

    .line 1725
    if-eqz p1, :cond_3

    .line 1726
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v3, 0x10

    or-int/2addr v2, v3

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 1730
    :goto_1
    invoke-virtual {v0, v1}, Landroid/view/Window;->setAttributes(Landroid/view/WindowManager$LayoutParams;)V

    goto :goto_0

    .line 1728
    :cond_3
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const v3, -0x100001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    goto :goto_1
.end method

.method private setMultiwindowTrayDisableAndonTop(Z)V
    .locals 4
    .parameter

    .prologue
    const/4 v2, 0x1

    .line 1735
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "setMultiwindowTrayDisableAndonTop() isDisable:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 1736
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "not_support_vt_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1737
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-nez v0, :cond_2

    .line 1738
    const-string v0, "mMultiWindow is null"

    invoke-direct {p0, v0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 1752
    :cond_1
    :goto_0
    return-void

    .line 1741
    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v0

    .line 1742
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v1

    invoke-virtual {v1}, Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;

    move-result-object v1

    .line 1743
    if-eqz p1, :cond_3

    .line 1744
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v3, 0x10

    or-int/2addr v2, v3

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 1750
    :goto_1
    invoke-virtual {v0, v1}, Landroid/view/Window;->setAttributes(Landroid/view/WindowManager$LayoutParams;)V

    goto :goto_0

    .line 1747
    :cond_3
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const v3, -0x100001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    goto :goto_1
.end method

.method public static setOldDisplayMode(Lcom/android/phone/InVTCallScreen$VideoDisplayMode;)V
    .locals 0
    .parameter "displayMode"

    .prologue
    .line 14424
    sput-object p0, Lcom/android/phone/InVTCallScreen;->sOldDisplayMode:Lcom/android/phone/InVTCallScreen$VideoDisplayMode;

    .line 14425
    return-void
.end method

.method private setRightOneHandModeArrow()V
    .locals 3

    .prologue
    .line 15386
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsShowEndCallScreenStarted:Z

    if-eqz v0, :cond_3

    .line 15387
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_0

    .line 15388
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15390
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_1

    .line 15391
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15398
    :cond_1
    :goto_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_DIRECTION:Ljava/lang/String;

    const/4 v2, 0x1

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 15399
    :cond_2
    return-void

    .line 15393
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    if-eqz v0, :cond_2

    .line 15394
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;->setRightOneHandModeArrow()V

    goto :goto_0
.end method

.method private setVolume(I)V
    .locals 4
    .parameter "progress"

    .prologue
    .line 15510
    const/16 v1, 0xb

    .line 15511
    .local v1, stream:I
    const/4 v0, 0x6

    .line 15513
    .local v0, maxVolume:I
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/phone/PhoneGlobals;->isBluetoothHeadsetAudioOn()Z

    move-result v2

    if-eqz v2, :cond_3

    const/4 v1, 0x6

    .line 15516
    :goto_0
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    if-eqz v2, :cond_0

    .line 15517
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    invoke-virtual {v2, v1}, Landroid/media/AudioManager;->getStreamMaxVolume(I)I

    move-result v0

    .line 15520
    :cond_0
    const/4 v2, 0x1

    if-ge p1, v2, :cond_4

    .line 15521
    const-string v2, "InVTCallScreen"

    const-string v3, "Set force progress level 1 for vt call volume"

    invoke-static {v2, v3}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 15522
    const/4 p1, 0x0

    .line 15528
    :cond_1
    :goto_1
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    if-eqz v2, :cond_2

    .line 15529
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    const/4 v3, 0x0

    invoke-virtual {v2, v1, p1, v3}, Landroid/media/AudioManager;->setStreamVolume(III)V

    .line 15531
    :cond_2
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showVolumePanel()V

    .line 15532
    return-void

    .line 15513
    :cond_3
    const/16 v1, 0xb

    goto :goto_0

    .line 15523
    :cond_4
    if-le p1, v0, :cond_1

    .line 15524
    const-string v2, "InVTCallScreen"

    const-string v3, "Set force progress level max for vt call volume"

    invoke-static {v2, v3}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 15525
    move p1, v0

    goto :goto_1
.end method

.method private setupDTMFDialer()V
    .locals 1

    .prologue
    .line 2252
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setupDTMFDialer(I)V

    .line 2253
    return-void
.end method

.method private setupDTMFDialer(I)V
    .locals 8
    .parameter

    .prologue
    const v7, 0x7f0a028d

    const v6, 0x7f0a028c

    const/4 v5, 0x1

    const/4 v4, 0x0

    .line 2258
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    if-eqz v0, :cond_0

    .line 2259
    const-string v0, "mDialerView != null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2260
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;->reset()V

    .line 2261
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    .line 2263
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_1

    .line 2264
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->clearInCallScreenReference()V

    .line 2265
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    .line 2268
    :cond_1
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_2

    .line 2269
    const v0, 0x7f0a028e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    .line 2307
    :goto_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "- Full touch device!  Found dialerView: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2310
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    if-nez v0, :cond_c

    .line 2311
    const-string v0, "InVTCallScreen"

    const-string v1, "onCreate: couldn\'t find dialerView"

    new-instance v2, Ljava/lang/IllegalStateException;

    invoke-direct {v2}, Ljava/lang/IllegalStateException;-><init>()V

    invoke-static {v0, v1, v2}, Lcom/android/phone/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2316
    :goto_1
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 2317
    new-instance v0, Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-direct {v0, p0, v1, v4, p1}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;-><init>(Lcom/android/phone/InVTCallScreen;Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;Landroid/widget/SlidingDrawer;I)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    .line 2321
    :goto_2
    return-void

    .line 2271
    :cond_2
    const/4 v0, 0x0

    .line 2273
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v1}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v1

    if-eqz v1, :cond_3

    .line 2274
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/KeyguardManager;->isKeyguardLocked()Z

    move-result v0

    .line 2275
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v1}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v1

    invoke-virtual {v1}, Landroid/app/KeyguardManager;->isKeyguardSecure()Z

    move-result v1

    .line 2276
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "app.getKeyguardManager().isKeyguardLocked()="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 2277
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "app.getKeyguardManager().isKeyguardSecure()="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 2280
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v1

    iget v1, v1, Landroid/content/res/Configuration;->orientation:I

    const/4 v2, 0x2

    if-ne v1, v2, :cond_7

    .line 2281
    const-string v1, "support_kk_vt_tablet_multiwindow"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 2282
    if-nez v0, :cond_4

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsKeyLockScreen:Z

    if-eqz v0, :cond_5

    .line 2283
    :cond_4
    const v0, 0x7f0a0295

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    goto/16 :goto_0

    .line 2285
    :cond_5
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    goto/16 :goto_0

    .line 2288
    :cond_6
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    goto/16 :goto_0

    .line 2291
    :cond_7
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v1, :cond_8

    .line 2292
    const v0, 0x7f0a028f

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    goto/16 :goto_0

    .line 2294
    :cond_8
    const-string v1, "support_kk_vt_tablet_multiwindow"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_b

    .line 2295
    if-nez v0, :cond_9

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsKeyLockScreen:Z

    if-eqz v0, :cond_a

    .line 2296
    :cond_9
    const v0, 0x7f0a0294

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    goto/16 :goto_0

    .line 2298
    :cond_a
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    goto/16 :goto_0

    .line 2301
    :cond_b
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    goto/16 :goto_0

    .line 2313
    :cond_c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;->setVisibility(I)V

    goto/16 :goto_1

    .line 2319
    :cond_d
    new-instance v0, Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-direct {v0, p0, v1, v4}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;-><init>(Lcom/android/phone/InVTCallScreen;Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;Landroid/widget/SlidingDrawer;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    goto/16 :goto_2
.end method

.method private setupSimTab()V
    .locals 3

    .prologue
    .line 2232
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getActionBar()Landroid/app/ActionBar;

    move-result-object v0

    .line 2233
    if-nez v0, :cond_0

    .line 2248
    :goto_0
    return-void

    .line 2235
    :cond_0
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsSimTabUIUpdate:Z

    .line 2236
    invoke-virtual {v0}, Landroid/app/ActionBar;->newTab()Landroid/app/ActionBar$Tab;

    move-result-object v1

    .line 2237
    const-string v2, "SIM1"

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setText(Ljava/lang/CharSequence;)Landroid/app/ActionBar$Tab;

    .line 2238
    const v2, 0x7f020637

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setIcon(I)Landroid/app/ActionBar$Tab;

    .line 2239
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mTabListener:Landroid/app/ActionBar$TabListener;

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setTabListener(Landroid/app/ActionBar$TabListener;)Landroid/app/ActionBar$Tab;

    .line 2240
    invoke-virtual {v0, v1}, Landroid/app/ActionBar;->addTab(Landroid/app/ActionBar$Tab;)V

    .line 2241
    invoke-virtual {v0}, Landroid/app/ActionBar;->newTab()Landroid/app/ActionBar$Tab;

    move-result-object v1

    .line 2242
    const-string v2, "SIM2"

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setText(Ljava/lang/CharSequence;)Landroid/app/ActionBar$Tab;

    .line 2243
    const v2, 0x7f02063e

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setIcon(I)Landroid/app/ActionBar$Tab;

    .line 2244
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mTabListener:Landroid/app/ActionBar$TabListener;

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setTabListener(Landroid/app/ActionBar$TabListener;)Landroid/app/ActionBar$Tab;

    .line 2245
    invoke-virtual {v0, v1}, Landroid/app/ActionBar;->addTab(Landroid/app/ActionBar$Tab;)V

    .line 2246
    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Landroid/app/ActionBar;->setNavigationMode(I)V

    .line 2247
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsSimTabUIUpdate:Z

    goto :goto_0
.end method

.method private showCallLostDialog()V
    .locals 2

    .prologue
    .line 8416
    const-string v0, "showCallLostDialog()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8419
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-nez v0, :cond_0

    .line 8420
    const-string v0, "showCallLostDialog: not the foreground Activity! Bailing out..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8433
    :goto_0
    return-void

    .line 8425
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallLostDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_1

    .line 8426
    const-string v0, "showCallLostDialog: There is a mCallLostDialog already."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 8430
    :cond_1
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    const v1, 0x7f090021

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setMessage(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x1010355

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setIconAttribute(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallLostDialog:Landroid/app/AlertDialog;

    .line 8432
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallLostDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    goto :goto_0
.end method

.method private showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V
    .locals 1
    .parameter "view"
    .parameter "smallView"
    .parameter "resource"

    .prologue
    .line 14848
    invoke-virtual {p1}, Landroid/widget/ImageView;->getContext()Landroid/content/Context;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0, p3}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v0

    invoke-direct {p0, p1, p2, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/graphics/drawable/Drawable;)V

    .line 14849
    return-void
.end method

.method private showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/graphics/Bitmap;)V
    .locals 2
    .parameter "view"
    .parameter "smallView"
    .parameter "bitmap"

    .prologue
    .line 14853
    new-instance v0, Landroid/graphics/drawable/BitmapDrawable;

    invoke-virtual {p1}, Landroid/widget/ImageView;->getContext()Landroid/content/Context;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-direct {v0, v1, p3}, Landroid/graphics/drawable/BitmapDrawable;-><init>(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)V

    invoke-direct {p0, p1, p2, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/graphics/drawable/Drawable;)V

    .line 14854
    return-void
.end method

.method private showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/graphics/drawable/Drawable;)V
    .locals 2
    .parameter
    .parameter
    .parameter

    .prologue
    .line 14859
    if-eqz p1, :cond_0

    if-nez p3, :cond_1

    .line 14861
    :cond_0
    const-string v0, "InVTCallScreen"

    const-string v1, "showContactImage() view and/or drawable is null"

    invoke-static {v0, v1}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14877
    :goto_0
    return-void

    .line 14865
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x7f0e0064

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimension(I)F

    move-result v0

    float-to-int v1, v0

    .line 14868
    if-eqz p2, :cond_2

    move-object v0, p3

    check-cast v0, Landroid/graphics/drawable/BitmapDrawable;

    invoke-virtual {v0}, Landroid/graphics/drawable/BitmapDrawable;->getBitmap()Landroid/graphics/Bitmap;

    move-result-object v0

    invoke-virtual {v0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v0

    if-gt v0, v1, :cond_2

    .line 14869
    const-string v0, "InVTCallScreen"

    const-string v1, "showContactImage() needs small image"

    invoke-static {v0, v1}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14870
    const v0, 0x7f0202ed

    invoke-virtual {p1, v0}, Landroid/widget/ImageView;->setImageResource(I)V

    .line 14871
    invoke-virtual {p2, p3}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 14872
    const/4 v0, 0x0

    invoke-virtual {p2, v0}, Landroid/widget/ImageView;->setVisibility(I)V

    goto :goto_0

    .line 14875
    :cond_2
    invoke-virtual {p1, p3}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    goto :goto_0
.end method

.method private showEndCallScreen(Z)V
    .locals 11
    .parameter

    .prologue
    const/4 v5, 0x4

    const-wide v9, 0x3fe999999999999aL

    const/4 v4, 0x1

    const/16 v6, 0x8

    const/4 v3, 0x0

    .line 4653
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "showEndCallScreen, Start up Error : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4657
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    if-eqz v0, :cond_30

    .line 4658
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/KeyguardManager;->isKeyguardLocked()Z

    move-result v0

    .line 4659
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v1}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v1

    invoke-virtual {v1}, Landroid/app/KeyguardManager;->isKeyguardSecure()Z

    move-result v1

    .line 4660
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "app.getKeyguardManager().isKeyguardLocked()="

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 4661
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "app.getKeyguardManager().isKeyguardSecure()="

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 4664
    :goto_0
    const-string v1, "clear_cover"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 4665
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    if-eqz v1, :cond_0

    .line 4666
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {v1}, Lcom/android/phone/CallCardCoveredDialog;->dismissDialog()V

    .line 4669
    :cond_0
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mIsShowEndCallScreenStarted:Z

    .line 4670
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->closeOptionsMenu()V

    .line 4671
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissContextDailogBox()V

    .line 4673
    const-string v1, "support_multi_window"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1a

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v1, :cond_1a

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v1}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v1

    if-eqz v1, :cond_1a

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v1

    if-nez v1, :cond_1a

    .line 4674
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTMultiWindowLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_6

    .line 4675
    const v0, 0x7f0a0368

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 4676
    const v1, 0x7f0a0381

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v1

    check-cast v1, Landroid/widget/LinearLayout;

    .line 4677
    if-eqz v0, :cond_6

    if-eqz v1, :cond_6

    .line 4678
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    if-eqz v2, :cond_1

    .line 4679
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v2, v5}, Landroid/widget/ImageButton;->setVisibility(I)V

    .line 4680
    :cond_1
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v2, :cond_2

    .line 4681
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    invoke-virtual {v2, v6}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 4683
    :cond_2
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-nez v2, :cond_4

    .line 4684
    const v2, 0x7f0a01f4

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v2

    check-cast v2, Landroid/view/ViewStub;

    .line 4685
    if-eqz v2, :cond_3

    .line 4686
    invoke-virtual {v2}, Landroid/view/ViewStub;->inflate()Landroid/view/View;

    .line 4687
    :cond_3
    const v2, 0x7f0a0272

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v2

    check-cast v2, Lcom/android/phone/SocialStatus;

    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    .line 4689
    :cond_4
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v2, :cond_5

    .line 4690
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    invoke-virtual {v2, v6}, Lcom/android/phone/SocialStatus;->setVisibility(I)V

    .line 4692
    :cond_5
    invoke-virtual {v0, v6}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 4693
    invoke-virtual {v1, v3}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 4716
    :cond_6
    :goto_1
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_7

    .line 4717
    const v0, 0x7f0a0367

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    .line 4718
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x7f0b003f

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getColor(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setBackgroundColor(I)V

    .line 4721
    :cond_7
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_8

    .line 4722
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->invalidateOptionsMenu()V

    .line 4725
    :cond_8
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 4726
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 4730
    :goto_2
    if-eqz v0, :cond_1f

    .line 4731
    invoke-static {p0, v0}, Lcom/android/phone/PhoneUtils;->getCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;)Lcom/android/internal/telephony/CallerInfo;

    move-result-object v0

    .line 4733
    new-instance v1, Ljava/lang/StringBuffer;

    const-string v2, "content://com.android.contacts/contacts/"

    invoke-direct {v1, v2}, Ljava/lang/StringBuffer;-><init>(Ljava/lang/String;)V

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mContactBufferId:Ljava/lang/StringBuffer;

    .line 4734
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mContactBufferId:Ljava/lang/StringBuffer;

    if-eqz v1, :cond_9

    if-eqz v0, :cond_9

    .line 4735
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mContactBufferId:Ljava/lang/StringBuffer;

    iget-wide v7, v0, Lcom/android/internal/telephony/CallerInfo;->person_id:J

    invoke-static {v7, v8}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 4742
    :cond_9
    :goto_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    if-nez v0, :cond_a

    .line 4743
    new-instance v0, Lcom/android/phone/SmallerHitTargetTouchListener;

    invoke-direct {v0}, Lcom/android/phone/SmallerHitTargetTouchListener;-><init>()V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    .line 4745
    :cond_a
    const v0, 0x7f0a0371

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    .line 4746
    const v0, 0x7f0a03b8

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    .line 4748
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_20

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_20

    .line 4749
    const v0, 0x7f0a03c2

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    .line 4752
    :goto_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_b

    .line 4753
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 4754
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4757
    :cond_b
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_21

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_21

    .line 4758
    const v0, 0x7f0a03c1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    .line 4762
    :goto_5
    const-string v0, "change_order_of_endcall_buttons"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 4763
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_22

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_22

    .line 4764
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_c

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setVisibility(I)V

    .line 4766
    :cond_c
    const v0, 0x7f0a03c4

    :try_start_0
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    .line 4767
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-nez v0, :cond_d

    .line 4768
    const-string v0, "mVideoCallButton is null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4769
    const v0, 0x7f0a03c1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;
    :try_end_0
    .catch Landroid/view/InflateException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4788
    :cond_d
    :goto_6
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_e

    .line 4789
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 4792
    :cond_e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_f

    .line 4793
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 4794
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4797
    :cond_f
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_24

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_24

    .line 4798
    const v0, 0x7f0a03c5

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    .line 4801
    :goto_7
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    if-eqz v0, :cond_10

    .line 4802
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 4803
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4806
    :cond_10
    const-string v0, "ip_call"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 4807
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_11

    .line 4808
    const v0, 0x7f0a03bc

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    .line 4809
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    if-eqz v0, :cond_11

    .line 4810
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    const v1, 0x7f0200a1

    invoke-virtual {v0, v1}, Landroid/view/View;->setBackgroundResource(I)V

    .line 4814
    :cond_11
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_25

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_25

    .line 4815
    const v0, 0x7f0a03c3

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    .line 4816
    const v0, 0x7f0a03c0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    .line 4817
    if-eqz v0, :cond_12

    .line 4818
    const v1, 0x7f020296

    invoke-virtual {v0, v1}, Landroid/view/View;->setBackgroundResource(I)V

    .line 4822
    :cond_12
    :goto_8
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_13

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_13

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_13

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    if-eqz v0, :cond_13

    .line 4823
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSmallerHitTargetTouchListener:Landroid/view/View$OnTouchListener;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 4824
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4825
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 4827
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    invoke-virtual {v1}, Landroid/widget/Button;->getTextSize()F

    move-result v1

    float-to-double v1, v1

    mul-double/2addr v1, v9

    double-to-float v1, v1

    invoke-virtual {v0, v3, v1}, Landroid/widget/Button;->setTextSize(IF)V

    .line 4828
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    invoke-virtual {v1}, Landroid/widget/Button;->getTextSize()F

    move-result v1

    float-to-double v1, v1

    mul-double/2addr v1, v9

    double-to-float v1, v1

    invoke-virtual {v0, v3, v1}, Landroid/widget/Button;->setTextSize(IF)V

    .line 4829
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    invoke-virtual {v1}, Landroid/widget/Button;->getTextSize()F

    move-result v1

    float-to-double v1, v1

    mul-double/2addr v1, v9

    double-to-float v1, v1

    invoke-virtual {v0, v3, v1}, Landroid/widget/Button;->setTextSize(IF)V

    .line 4830
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    invoke-virtual {v1}, Landroid/widget/Button;->getTextSize()F

    move-result v1

    float-to-double v1, v1

    mul-double/2addr v1, v9

    double-to-float v1, v1

    invoke-virtual {v0, v3, v1}, Landroid/widget/Button;->setTextSize(IF)V

    .line 4841
    :cond_13
    const v0, 0x7f0a0183

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCreateButton:Landroid/widget/Button;

    .line 4842
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCreateButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4843
    const v0, 0x7f0a0184

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpdateButton:Landroid/widget/Button;

    .line 4844
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpdateButton:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4846
    const v0, 0x7f0a0182

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSaveButtonFrame:Landroid/view/View;

    .line 4847
    const v0, 0x7f0a0185

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mViewContact:Landroid/widget/Button;

    .line 4848
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mViewContact:Landroid/widget/Button;

    invoke-virtual {v0, p0}, Landroid/widget/Button;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4849
    const v0, 0x7f0a03bb

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCallButtonFrame:Landroid/view/View;

    .line 4851
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_26

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_26

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_26

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_26

    .line 4852
    const v0, 0x7f0a03d0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    .line 4853
    const v0, 0x7f0a03d1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    .line 4854
    const v0, 0x7f0a03d2

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    .line 4865
    :goto_9
    const-string v0, "vt_display_start_call_time"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_14

    .line 4866
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isAllOLC:Z

    if-eqz v0, :cond_14

    .line 4867
    const v0, 0x7f0a03ba

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallStartTime:Landroid/widget/TextView;

    .line 4868
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallStartTime:Landroid/widget/TextView;

    if-eqz v0, :cond_14

    .line 4869
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallStartTime:Landroid/widget/TextView;

    invoke-virtual {v0, v3}, Landroid/widget/TextView;->setVisibility(I)V

    .line 4874
    :cond_14
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_28

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_28

    .line 4875
    const v0, 0x7f0a03be

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    .line 4880
    :goto_a
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_18

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_18

    .line 4881
    const v0, 0x7f0a0292

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mLeftArrow:Landroid/widget/ImageView;

    .line 4882
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mLeftArrow:Landroid/widget/ImageView;

    if-eqz v0, :cond_15

    .line 4883
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mLeftArrow:Landroid/widget/ImageView;

    invoke-virtual {v0, p0}, Landroid/widget/ImageView;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4884
    :cond_15
    const v0, 0x7f0a0293

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRightArrow:Landroid/widget/ImageView;

    .line 4885
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRightArrow:Landroid/widget/ImageView;

    if-eqz v0, :cond_16

    .line 4886
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRightArrow:Landroid/widget/ImageView;

    invoke-virtual {v0, p0}, Landroid/widget/ImageView;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 4888
    :cond_16
    const v0, 0x7f0a03bf

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    .line 4889
    const v0, 0x7f0a03c6

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    .line 4892
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_DIRECTION:Ljava/lang/String;

    invoke-static {v0, v1, v4}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-ne v0, v4, :cond_29

    move v0, v4

    .line 4893
    :goto_b
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->getHandAdaptEnable()Z

    move-result v1

    .line 4894
    const-string v2, "ssuport_hand_adapt_operation"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2c

    if-eqz v1, :cond_2c

    .line 4895
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    if-eqz v1, :cond_17

    .line 4896
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_2a

    move v1, v5

    :goto_c
    invoke-virtual {v2, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 4898
    :cond_17
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    if-eqz v1, :cond_18

    .line 4899
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_2b

    :goto_d
    invoke-virtual {v1, v6}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 4909
    :cond_18
    :goto_e
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_19

    .line 4910
    const v0, 0x7f0a02d1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    .line 4911
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    if-eqz v0, :cond_19

    .line 4912
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getContext()Landroid/content/Context;

    move-result-object v2

    iget v4, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-static {v2, v4}, Lcom/android/phone/PhoneUtilsDsds;->getSimIconMini(Landroid/content/Context;I)I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getDrawable(I)Landroid/graphics/drawable/Drawable;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 4913
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    invoke-virtual {v0, v3}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 4917
    :cond_19
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->updateEndcallButtonState(Z)V

    .line 4918
    return-void

    .line 4698
    :cond_1a
    const-string v1, "support_kk_vt_tablet_multiwindow"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1d

    .line 4699
    if-nez v0, :cond_1b

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsKeyLockScreen:Z

    if-eqz v0, :cond_1c

    .line 4704
    :cond_1b
    const v0, 0x7f040101

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    .line 4705
    invoke-direct {p0, p0}, Lcom/android/phone/InVTCallScreen;->setKeyguardDefaultWallpaper(Landroid/content/Context;)Z

    .line 4706
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsKeyLockScreen:Z

    goto/16 :goto_1

    .line 4708
    :cond_1c
    const v0, 0x7f0400ff

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    goto/16 :goto_1

    .line 4711
    :cond_1d
    const v0, 0x7f0400ff

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setContentView(I)V

    goto/16 :goto_1

    .line 4728
    :cond_1e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    goto/16 :goto_2

    .line 4739
    :cond_1f
    const-string v0, "showEndCallScreen: connEnd is null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 4751
    :cond_20
    const v0, 0x7f0a0187

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    goto/16 :goto_4

    .line 4760
    :cond_21
    const v0, 0x7f0a0189

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    goto/16 :goto_5

    .line 4771
    :catch_0
    move-exception v0

    .line 4772
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Inflate exception - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4773
    const v0, 0x7f0a03c1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    goto/16 :goto_6

    .line 4776
    :cond_22
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_23

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setVisibility(I)V

    .line 4778
    :cond_23
    const v0, 0x7f0a018a

    :try_start_1
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    .line 4779
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-nez v0, :cond_d

    .line 4780
    const-string v0, "mVideoCallButton is null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4781
    const v0, 0x7f0a0189

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;
    :try_end_1
    .catch Landroid/view/InflateException; {:try_start_1 .. :try_end_1} :catch_1

    goto/16 :goto_6

    .line 4783
    :catch_1
    move-exception v0

    .line 4784
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Inflate exception - "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4785
    const v0, 0x7f0a0189

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    goto/16 :goto_6

    .line 4800
    :cond_24
    const v0, 0x7f0a018b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    goto/16 :goto_7

    .line 4820
    :cond_25
    const v0, 0x7f0a0188

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    goto/16 :goto_8

    .line 4856
    :cond_26
    const v0, 0x7f0a0369

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    .line 4857
    const v0, 0x7f0a036a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    .line 4858
    const-string v0, "phone_kk_tablet_gui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_27

    .line 4859
    const v0, 0x7f0a03c7

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    goto/16 :goto_9

    .line 4861
    :cond_27
    const v0, 0x7f0a036b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    goto/16 :goto_9

    .line 4877
    :cond_28
    const v0, 0x7f0a03bc

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->endCallBottomButtonFrame:Landroid/view/View;

    goto/16 :goto_a

    :cond_29
    move v0, v3

    .line 4892
    goto/16 :goto_b

    :cond_2a
    move v1, v6

    .line 4896
    goto/16 :goto_c

    :cond_2b
    move v6, v5

    .line 4899
    goto/16 :goto_d

    .line 4902
    :cond_2c
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    if-eqz v1, :cond_2d

    .line 4903
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_2e

    move v1, v3

    :goto_f
    invoke-virtual {v2, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 4904
    :cond_2d
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    if-eqz v1, :cond_18

    .line 4905
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_2f

    :goto_10
    invoke-virtual {v1, v6}, Landroid/widget/LinearLayout;->setVisibility(I)V

    goto/16 :goto_e

    :cond_2e
    move v1, v6

    .line 4903
    goto :goto_f

    :cond_2f
    move v6, v3

    .line 4905
    goto :goto_10

    :cond_30
    move v0, v3

    goto/16 :goto_0
.end method

.method private showGenericErrorDialog(IZ)V
    .locals 8
    .parameter
    .parameter

    .prologue
    const/4 v3, 0x0

    const v7, 0x7f090022

    const/4 v6, 0x2

    .line 8264
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v0

    .line 8265
    const-string v1, "limited_service_state"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 8266
    invoke-static {p1}, Lcom/android/phone/PhoneUtilsExt;->changeRtsMessage(I)Ljava/lang/CharSequence;

    move-result-object v0

    .line 8269
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "showGenericErrorDialog(\'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\')..."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8273
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    if-eqz v1, :cond_1

    .line 8274
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v1, v3}, Landroid/app/AlertDialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 8275
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v1}, Landroid/app/AlertDialog;->dismiss()V

    .line 8276
    iput-object v3, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    .line 8279
    :cond_1
    const v1, 0x7f09019f

    if-ne p1, v1, :cond_2

    .line 8285
    new-instance v1, Lcom/android/phone/InVTCallScreen$17;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$17;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8305
    new-instance v2, Lcom/android/phone/InVTCallScreen$18;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$18;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8311
    new-instance v3, Lcom/android/phone/InVTCallScreen$19;

    invoke-direct {v3, p0}, Lcom/android/phone/InVTCallScreen$19;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8317
    new-instance v4, Lcom/android/phone/InVTCallScreen$20;

    invoke-direct {v4, p0}, Lcom/android/phone/InVTCallScreen$20;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8324
    new-instance v5, Landroid/app/AlertDialog$Builder;

    invoke-direct {v5, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v5, v0}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0, v7, v1}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f090025

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0, v3}, Landroid/app/AlertDialog$Builder;->setOnCancelListener(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    .line 8328
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, v6}, Landroid/view/Window;->addFlags(I)V

    .line 8329
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0, v4}, Landroid/app/AlertDialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 8330
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    const v1, 0x7f09040d

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog;->setTitle(I)V

    .line 8331
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    .line 8383
    :goto_0
    return-void

    .line 8340
    :cond_2
    if-eqz p2, :cond_3

    .line 8341
    new-instance v2, Lcom/android/phone/InVTCallScreen$21;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$21;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8346
    new-instance v1, Lcom/android/phone/InVTCallScreen$22;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$22;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8364
    :goto_1
    new-instance v3, Lcom/android/phone/InVTCallScreen$25;

    invoke-direct {v3, p0}, Lcom/android/phone/InVTCallScreen$25;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8373
    new-instance v4, Landroid/app/AlertDialog$Builder;

    invoke-direct {v4, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v4, v0}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0, v7, v2}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setOnCancelListener(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    .line 8376
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0, v3}, Landroid/app/AlertDialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 8380
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, v6}, Landroid/view/Window;->addFlags(I)V

    .line 8382
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    goto :goto_0

    .line 8352
    :cond_3
    new-instance v2, Lcom/android/phone/InVTCallScreen$23;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$23;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8357
    new-instance v1, Lcom/android/phone/InVTCallScreen$24;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$24;-><init>(Lcom/android/phone/InVTCallScreen;)V

    goto :goto_1
.end method

.method private showHideFarEndViewAnim()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 9801
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "showHideFarEndViewAnim : mWasRemoteFrameReceive ="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->mWasRemoteFrameReceive:Z

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9802
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->mWasRemoteFrameReceive:Z

    if-nez v0, :cond_0

    .line 9804
    const v0, 0x7f0a0227

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mConnectFarEndImageView:Landroid/widget/ImageView;

    .line 9805
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mConnectFarEndImageView:Landroid/widget/ImageView;

    const v1, 0x7f05000e

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setBackgroundResource(I)V

    .line 9806
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mConnectFarEndImageView:Landroid/widget/ImageView;

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 9808
    const v0, 0x7f0a0228

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->prepareVideoText:Landroid/widget/TextView;

    .line 9809
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->prepareVideoText:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9811
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mConnectFarEndImageView:Landroid/widget/ImageView;

    invoke-virtual {v0}, Landroid/widget/ImageView;->getBackground()Landroid/graphics/drawable/Drawable;

    move-result-object v0

    check-cast v0, Landroid/graphics/drawable/AnimationDrawable;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->frameAnimation:Landroid/graphics/drawable/AnimationDrawable;

    .line 9812
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->frameAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v0}, Landroid/graphics/drawable/AnimationDrawable;->start()V

    .line 9814
    :cond_0
    return-void
.end method

.method private showImage(Ljava/lang/String;)V
    .locals 2
    .parameter "filePath"

    .prologue
    .line 13721
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "inside showImage condition and file path is "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13722
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 13723
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, p1}, Lsiso/vt/VTManager;->sendStillImage(Ljava/lang/String;)V

    .line 13726
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 13728
    :cond_0
    return-void
.end method

.method private showIncomingCallWidget(Lcom/android/internal/telephony/Call;)V
    .locals 3
    .parameter "ringingCall"

    .prologue
    const/4 v2, 0x0

    .line 13940
    const-string v1, "showIncomingCallWidget()..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13942
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-eqz v1, :cond_0

    .line 13943
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v1}, Lcom/android/phone/IncomingCallWidget;->getAnimation()Landroid/view/animation/Animation;

    move-result-object v0

    .line 13944
    .local v0, anim:Landroid/view/animation/Animation;
    if-eqz v0, :cond_0

    .line 13945
    invoke-virtual {v0}, Landroid/view/animation/Animation;->reset()V

    .line 13946
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v1}, Lcom/android/phone/IncomingCallWidget;->clearAnimation()V

    .line 13955
    .end local v0           #anim:Landroid/view/animation/Animation;
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v1

    if-eqz v1, :cond_2

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    if-eqz v1, :cond_2

    .line 13956
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    invoke-virtual {v1, v2}, Lcom/android/phone/IncomingCallEasyImageWidget;->setVisibility(I)V

    .line 13957
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingcallEasyImageWidget:Lcom/android/phone/IncomingCallEasyImageWidget;

    invoke-virtual {v1}, Lcom/android/phone/IncomingCallEasyImageWidget;->reset()V

    .line 13959
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-eqz v1, :cond_1

    .line 13960
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    const/16 v2, 0x8

    invoke-virtual {v1, v2}, Lcom/android/phone/IncomingCallWidget;->setVisibility(I)V

    .line 13968
    :cond_1
    :goto_0
    return-void

    .line 13963
    :cond_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-eqz v1, :cond_1

    .line 13964
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v1, v2}, Lcom/android/phone/IncomingCallWidget;->setVisibility(I)V

    .line 13965
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v1}, Lcom/android/phone/IncomingCallWidget;->reset()V

    goto :goto_0
.end method

.method private showRadioOnDialog()V
    .locals 4

    .prologue
    .line 8386
    new-instance v0, Landroid/app/ProgressDialog;

    invoke-direct {v0, p0}, Landroid/app/ProgressDialog;-><init>(Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    .line 8388
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    const v1, 0x7f09040e

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getText(I)Ljava/lang/CharSequence;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/app/ProgressDialog;->setMessage(Ljava/lang/CharSequence;)V

    .line 8389
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/app/ProgressDialog;->setIndeterminate(Z)V

    .line 8390
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/app/ProgressDialog;->setCanceledOnTouchOutside(Z)V

    .line 8392
    new-instance v0, Lcom/android/phone/InVTCallScreen$26;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$26;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8399
    new-instance v1, Lcom/android/phone/InVTCallScreen$27;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$27;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 8405
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    invoke-virtual {v2, v0}, Landroid/app/ProgressDialog;->setOnCancelListener(Landroid/content/DialogInterface$OnCancelListener;)V

    .line 8406
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    invoke-virtual {v0, v1}, Landroid/app/ProgressDialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 8408
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x96

    const/4 v3, 0x0

    invoke-interface {v0, v1, v2, v3}, Lcom/android/internal/telephony/Phone;->registerForServiceStateChanged(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 8410
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x97

    const-wide/16 v2, 0x2710

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 8411
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    invoke-virtual {v0}, Landroid/app/ProgressDialog;->show()V

    .line 8412
    return-void
.end method

.method private showVideo(Ljava/lang/String;)V
    .locals 2
    .parameter "filePath"

    .prologue
    .line 13705
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "inside show video condition and file path is "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13706
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 13707
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, p1}, Lsiso/vt/VTManager;->sendVideo(Ljava/lang/String;)V

    .line 13710
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 13712
    :cond_0
    return-void
.end method

.method private showVolumePanel()V
    .locals 7

    .prologue
    const/16 v6, 0x98

    .line 15556
    const/16 v2, 0xb

    .line 15558
    .local v2, stream:I
    const/4 v3, 0x1

    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsShownVolumeBar:Z

    .line 15560
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/phone/PhoneGlobals;->isBluetoothHeadsetAudioOn()Z

    move-result v3

    if-eqz v3, :cond_4

    const/4 v2, 0x6

    .line 15563
    :goto_0
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    if-eqz v3, :cond_0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    if-eqz v3, :cond_0

    .line 15564
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    invoke-virtual {v3, v2}, Landroid/media/AudioManager;->getStreamVolume(I)I

    move-result v0

    .line 15565
    .local v0, changedVolume:I
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    invoke-virtual {v3, v2}, Landroid/media/AudioManager;->getStreamMaxVolume(I)I

    move-result v1

    .line 15567
    .local v1, maxVolume:I
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    add-int/lit8 v4, v1, 0x1

    invoke-virtual {v3, v4}, Lcom/sec/android/touchwiz/widget/TwSeekBar;->setMax(I)V

    .line 15568
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    add-int/lit8 v4, v0, 0x1

    invoke-virtual {v3, v4}, Lcom/sec/android/touchwiz/widget/TwSeekBar;->setProgress(I)V

    .line 15569
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mVolumeSeekBar:Lcom/sec/android/touchwiz/widget/TwSeekBar;

    invoke-virtual {v3}, Lcom/sec/android/touchwiz/widget/TwSeekBar;->invalidate()V

    .line 15572
    .end local v0           #changedVolume:I
    .end local v1           #maxVolume:I
    :cond_0
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v3, :cond_1

    .line 15573
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15576
    :cond_1
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    if-eqz v3, :cond_2

    .line 15577
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    invoke-virtual {v3}, Landroid/media/AudioManager;->dismissVolumePanel()V

    .line 15580
    :cond_2
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    if-eqz v3, :cond_3

    .line 15581
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v3, v6}, Landroid/os/Handler;->removeMessages(I)V

    .line 15582
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const-wide/16 v4, 0xbb8

    invoke-virtual {v3, v6, v4, v5}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 15584
    :cond_3
    return-void

    .line 15560
    :cond_4
    const/16 v2, 0xb

    goto :goto_0
.end method

.method private showWaitPromptDialog(Lcom/android/internal/telephony/Connection;Ljava/lang/String;)V
    .locals 3
    .parameter
    .parameter

    .prologue
    .line 6218
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 6219
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 6220
    const v2, 0x7f09002c

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 6221
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6223
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_0

    .line 6224
    const-string v0, "- DISMISSING mWaitPromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6225
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 6226
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    .line 6229
    :cond_0
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09002e

    new-instance v2, Lcom/android/phone/InVTCallScreen$14;

    invoke-direct {v2, p0, p1}, Lcom/android/phone/InVTCallScreen$14;-><init>(Lcom/android/phone/InVTCallScreen;Lcom/android/internal/telephony/Connection;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    new-instance v1, Lcom/android/phone/InVTCallScreen$13;

    invoke-direct {v1, p0, p1}, Lcom/android/phone/InVTCallScreen$13;-><init>(Lcom/android/phone/InVTCallScreen;Lcom/android/internal/telephony/Connection;)V

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setOnCancelListener(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    .line 6243
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/view/Window;->addFlags(I)V

    .line 6244
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    .line 6245
    return-void
.end method

.method private showWaitPromptDialogCDMA(Lcom/android/internal/telephony/Connection;Ljava/lang/String;)V
    .locals 3
    .parameter
    .parameter

    .prologue
    .line 6253
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 6254
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 6255
    const v2, 0x7f09002c

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 6256
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6258
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_0

    .line 6259
    const-string v0, "- DISMISSING mWaitPromptDialog."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6260
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 6261
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    .line 6264
    :cond_0
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09002f

    new-instance v2, Lcom/android/phone/InVTCallScreen$16;

    invoke-direct {v2, p0, p1}, Lcom/android/phone/InVTCallScreen$16;-><init>(Lcom/android/phone/InVTCallScreen;Lcom/android/internal/telephony/Connection;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f090030

    new-instance v2, Lcom/android/phone/InVTCallScreen$15;

    invoke-direct {v2, p0, p1}, Lcom/android/phone/InVTCallScreen$15;-><init>(Lcom/android/phone/InVTCallScreen;Lcom/android/internal/telephony/Connection;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    .line 6279
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/view/Window;->addFlags(I)V

    .line 6280
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWaitPromptDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    .line 6281
    return-void
.end method

.method private startToast(Ljava/lang/String;)V
    .locals 6
    .parameter "msg"

    .prologue
    .line 7826
    if-eqz p1, :cond_0

    .line 7827
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    .line 7828
    .local v0, context:Landroid/content/Context;
    const/4 v1, 0x0

    .line 7829
    .local v1, duration:I
    invoke-static {v0, p1, v1}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;

    move-result-object v2

    .line 7830
    .local v2, toast:Landroid/widget/Toast;
    const/16 v3, 0x10

    const/4 v4, 0x0

    const/16 v5, 0x64

    invoke-virtual {v2, v3, v4, v5}, Landroid/widget/Toast;->setGravity(III)V

    .line 7831
    invoke-virtual {v2}, Landroid/widget/Toast;->show()V

    .line 7836
    .end local v0           #context:Landroid/content/Context;
    .end local v1           #duration:I
    .end local v2           #toast:Landroid/widget/Toast;
    :goto_0
    return-void

    .line 7833
    :cond_0
    const-string v3, "InVTCallScreen"

    const-string v4, "startToast : msg is null"

    invoke-static {v3, v4}, Lcom/android/phone/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method private startVTCall()V
    .locals 7

    .prologue
    const/4 v6, 0x1

    .line 12851
    const-string v4, "Before-StartVTCall"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12852
    iget v4, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v5, 0x3

    if-ne v4, v5, :cond_2

    .line 12853
    sget-boolean v4, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    if-nez v4, :cond_2

    .line 12855
    const-string v4, "StartVTCall is called "

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12856
    sput-boolean v6, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    .line 12857
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v4, :cond_2

    .line 12858
    const-string v4, "kor_cs_vt_network_operator"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 12860
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string v5, "videocall_mode"

    invoke-static {v4, v5, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    .line 12861
    .local v1, modeControl:I
    const/4 v0, 0x3

    .line 12863
    .local v0, initVideoCapabliity:I
    const-string v4, "feature_ktt"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 12865
    const/4 v0, 0x0

    .line 12868
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string v5, "videocall_capability"

    invoke-static {v4, v5, v0}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    .line 12869
    .local v3, videoCapability:I
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v4, v3, v1}, Lsiso/vt/VTManager;->setSKTInfo(II)V

    .line 12872
    .end local v0           #initVideoCapabliity:I
    .end local v1           #modeControl:I
    .end local v3           #videoCapability:I
    :cond_1
    const-string v4, "feature_multisim"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 12873
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallType:Z

    iget v6, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-virtual {v4, v5, v6}, Lsiso/vt/VTManager;->StartVTCall(ZI)V

    .line 12893
    :cond_2
    :goto_0
    return-void

    .line 12874
    :cond_3
    const-string v4, "feature_chn_dual_mode_with_one_ril"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_4

    const-string v4, "sec_product_feature_common_dsds_support"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_6

    .line 12876
    :cond_4
    const-string v4, "persist.radio.boot.modem"

    invoke-static {v4, v6}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v2

    .line 12877
    .local v2, modemId:I
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "modemId :"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12878
    if-ne v2, v6, :cond_5

    .line 12880
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallType:Z

    invoke-virtual {v4, v5, v6}, Lsiso/vt/VTManager;->StartVTCall(ZI)V

    goto :goto_0

    .line 12883
    :cond_5
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallType:Z

    const/4 v6, 0x2

    invoke-virtual {v4, v5, v6}, Lsiso/vt/VTManager;->StartVTCall(ZI)V

    goto :goto_0

    .line 12886
    .end local v2           #modemId:I
    :cond_6
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallType:Z

    invoke-virtual {v4, v5}, Lsiso/vt/VTManager;->StartVTCall(Z)V

    goto :goto_0
.end method

.method private stopRecordingAudio()V
    .locals 2

    .prologue
    const/16 v1, 0x7e

    .line 13427
    const-string v0, "In stopRecordingAudio"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13428
    sget-object v0, Lcom/android/phone/InVTCallScreen;->mPhoneVTVoiceRecorder:Lcom/android/phone/PhoneVTVoiceRecorder;

    invoke-virtual {v0}, Lcom/android/phone/PhoneVTVoiceRecorder;->stopRecord()V

    .line 13429
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStopRecordingUI()V

    .line 13430
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 13431
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 13432
    return-void
.end method

.method private stopVTCall()V
    .locals 3

    .prologue
    const/4 v2, 0x1

    .line 12896
    const-string v0, "Before-StopVTCall"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12897
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_2

    .line 12898
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->disableControls()V

    .line 12899
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 12900
    const-string v0, "vt_audio_mixed_recording"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    const-string v0, "vt_audio_mixed_recording_via_stack"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_3

    .line 12901
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopRecordingAudio()V

    .line 12906
    :cond_0
    :goto_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 12907
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->stopRecordingNearEndView(Z)V

    .line 12909
    :cond_1
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->removesurfaceview()V

    .line 12910
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    if-eqz v0, :cond_2

    .line 12911
    const-string v0, "StopVTCall is called"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12912
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isVTCallAlreadyStop:Z

    .line 12913
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_2

    .line 12914
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->StopVTCall()V

    .line 12917
    :cond_2
    return-void

    .line 12903
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->stopRecordingFarEndView()V

    goto :goto_0
.end method

.method private storeFocusedButtonIndex()V
    .locals 1

    .prologue
    .line 14939
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0}, Landroid/widget/Button;->isFocused()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 14940
    sget-object v0, Lcom/android/phone/InVTCallScreen$FocusedButton;->SWITCH_CAMERA:Lcom/android/phone/InVTCallScreen$FocusedButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

    .line 14945
    :cond_0
    :goto_0
    return-void

    .line 14941
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0}, Landroid/widget/Button;->isFocused()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 14942
    sget-object v0, Lcom/android/phone/InVTCallScreen$FocusedButton;->HIDE:Lcom/android/phone/InVTCallScreen$FocusedButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

    goto :goto_0

    .line 14943
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCall:Landroid/widget/Button;

    invoke-virtual {v0}, Landroid/widget/Button;->isFocused()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 14944
    sget-object v0, Lcom/android/phone/InVTCallScreen$FocusedButton;->END_CALL:Lcom/android/phone/InVTCallScreen$FocusedButton;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->focusedButton:Lcom/android/phone/InVTCallScreen$FocusedButton;

    goto :goto_0
.end method

.method private surfaceview_initialize()V
    .locals 7

    .prologue
    const v6, 0x7f0a0390

    const/4 v5, 0x1

    const v4, 0x7f0a037c

    const v3, 0x3f800054

    const v2, 0x7f0a037a

    .line 10882
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_6

    .line 10883
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_0

    sget-boolean v0, Lcom/android/phone/PhoneUtils;->mInCallButtonViewDrivingModeByExtra:Z

    if-eqz v0, :cond_5

    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v5, :cond_5

    .line 10884
    const v0, 0x7f0a039e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    .line 10885
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    if-nez v0, :cond_1

    .line 10886
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    .line 10888
    :cond_1
    const v0, 0x7f0a03a3

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->whiteViewCameraAnimationNearEnd:Landroid/widget/ImageView;

    .line 10889
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->whiteViewCameraAnimationNearEnd:Landroid/widget/ImageView;

    if-nez v0, :cond_2

    .line 10890
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->whiteViewCameraAnimationNearEnd:Landroid/widget/ImageView;

    .line 10892
    :cond_2
    const v0, 0x7f0a039c

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    .line 10893
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-nez v0, :cond_3

    .line 10894
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    .line 10901
    :cond_3
    :goto_0
    const v0, 0x7f0a0371

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    .line 10902
    const v0, 0x7f0a03b8

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    .line 10904
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v3}, Landroid/view/TextureView;->setScaleX(F)V

    .line 10905
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, p0}, Landroid/view/TextureView;->setSurfaceTextureListener(Landroid/view/TextureView$SurfaceTextureListener;)V

    .line 11241
    :cond_4
    :goto_1
    return-void

    .line 10896
    :cond_5
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    .line 10897
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->whiteViewCameraAnimationNearEnd:Landroid/widget/ImageView;

    .line 10898
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    goto :goto_0

    .line 10906
    :cond_6
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v5, :cond_8

    .line 10907
    const v0, 0x7f0a03d3

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->incomingContactImage:Landroid/widget/ImageView;

    .line 10909
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    .line 10910
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_7

    .line 10911
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v3}, Landroid/view/TextureView;->setScaleX(F)V

    .line 10912
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, p0}, Landroid/view/TextureView;->setSurfaceTextureListener(Landroid/view/TextureView$SurfaceTextureListener;)V

    .line 10914
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    new-instance v1, Lcom/android/phone/InVTCallScreen$33;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$33;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10924
    :cond_7
    const v0, 0x7f0a0367

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/FrameLayout;

    .line 10925
    if-eqz v0, :cond_4

    .line 10926
    new-instance v1, Lcom/android/phone/InVTCallScreen$34;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$34;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/widget/FrameLayout;->setOnLongClickListener(Landroid/view/View$OnLongClickListener;)V

    goto :goto_1

    .line 10947
    :cond_8
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_4

    .line 10948
    const v0, 0x7f0a0373

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    .line 10949
    const v0, 0x7f0a038b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->whiteViewCameraAnimationFarEnd:Landroid/widget/ImageView;

    .line 10950
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_9

    .line 10953
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v3}, Landroid/view/TextureView;->setScaleX(F)V

    .line 10954
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    new-instance v1, Lcom/android/phone/InVTCallScreen$35;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$35;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 10964
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, p0}, Landroid/view/TextureView;->setSurfaceTextureListener(Landroid/view/TextureView$SurfaceTextureListener;)V

    .line 10965
    const v0, 0x7f0a0375

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    .line 10967
    :cond_9
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    .line 10971
    const v0, 0x7f0a0367

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 10972
    new-instance v1, Lcom/android/phone/InVTCallScreen$36;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$36;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    .line 11121
    new-instance v1, Lcom/android/phone/InVTCallScreen$37;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$37;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setOnLongClickListener(Landroid/view/View$OnLongClickListener;)V

    .line 11210
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_b

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v5, :cond_b

    .line 11211
    const v0, 0x7f0a039c

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    .line 11212
    const v0, 0x7f0a039e

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    .line 11213
    const v0, 0x7f0a03a3

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->whiteViewCameraAnimationNearEnd:Landroid/widget/ImageView;

    .line 11215
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-nez v0, :cond_a

    .line 11216
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    .line 11224
    :cond_a
    :goto_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_4

    .line 11225
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v3}, Landroid/view/TextureView;->setScaleX(F)V

    .line 11226
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, p0}, Landroid/view/TextureView;->setSurfaceTextureListener(Landroid/view/TextureView$SurfaceTextureListener;)V

    .line 11229
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    new-instance v1, Lcom/android/phone/InVTCallScreen$38;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$38;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setOnTouchListener(Landroid/view/View$OnTouchListener;)V

    goto/16 :goto_1

    .line 11218
    :cond_b
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/view/TextureView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    .line 11219
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    .line 11220
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->whiteViewCameraAnimationNearEnd:Landroid/widget/ImageView;

    goto :goto_2
.end method

.method private swipeButtonView()V
    .locals 7

    .prologue
    const v6, 0x7f0a0396

    const v5, 0x7f0a0395

    const/16 v4, 0xc

    const/4 v3, 0x1

    .line 13574
    const-string v2, "support_kk_vt_tablet_multiwindow"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 13575
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mFarEndArea:Landroid/widget/RelativeLayout;

    if-eqz v2, :cond_0

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mNearEndArea:Landroid/widget/RelativeLayout;

    if-eqz v2, :cond_0

    .line 13576
    new-instance v1, Landroid/widget/RelativeLayout$LayoutParams;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mNearEndArea:Landroid/widget/RelativeLayout;

    invoke-virtual {v2}, Landroid/widget/RelativeLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/widget/RelativeLayout$LayoutParams;-><init>(Landroid/view/ViewGroup$LayoutParams;)V

    .line 13577
    .local v1, paramsNearEndView:Landroid/widget/RelativeLayout$LayoutParams;
    new-instance v0, Landroid/widget/RelativeLayout$LayoutParams;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mFarEndArea:Landroid/widget/RelativeLayout;

    invoke-virtual {v2}, Landroid/widget/RelativeLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;

    move-result-object v2

    invoke-direct {v0, v2}, Landroid/widget/RelativeLayout$LayoutParams;-><init>(Landroid/view/ViewGroup$LayoutParams;)V

    .line 13578
    .local v0, paramsFarEndView:Landroid/widget/RelativeLayout$LayoutParams;
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 13579
    invoke-virtual {v1, v3}, Landroid/widget/RelativeLayout$LayoutParams;->removeRule(I)V

    .line 13580
    invoke-virtual {v0, v3, v5}, Landroid/widget/RelativeLayout$LayoutParams;->addRule(II)V

    .line 13585
    :goto_0
    invoke-virtual {v0, v4, v6}, Landroid/widget/RelativeLayout$LayoutParams;->addRule(II)V

    .line 13586
    invoke-virtual {v1, v4, v5}, Landroid/widget/RelativeLayout$LayoutParams;->addRule(II)V

    .line 13587
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mNearEndArea:Landroid/widget/RelativeLayout;

    invoke-virtual {v2, v1}, Landroid/widget/RelativeLayout;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 13588
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mFarEndArea:Landroid/widget/RelativeLayout;

    invoke-virtual {v2, v0}, Landroid/widget/RelativeLayout;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 13591
    .end local v0           #paramsFarEndView:Landroid/widget/RelativeLayout$LayoutParams;
    .end local v1           #paramsNearEndView:Landroid/widget/RelativeLayout$LayoutParams;
    :cond_0
    return-void

    .line 13582
    .restart local v0       #paramsFarEndView:Landroid/widget/RelativeLayout$LayoutParams;
    .restart local v1       #paramsNearEndView:Landroid/widget/RelativeLayout$LayoutParams;
    :cond_1
    invoke-virtual {v0, v3}, Landroid/widget/RelativeLayout$LayoutParams;->removeRule(I)V

    .line 13583
    invoke-virtual {v1, v3, v6}, Landroid/widget/RelativeLayout$LayoutParams;->addRule(II)V

    goto :goto_0
.end method

.method private swipeSurfaceView()V
    .locals 3

    .prologue
    .line 13561
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurhldr:Landroid/graphics/SurfaceTexture;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    if-nez v0, :cond_1

    .line 13562
    :cond_0
    const-string v0, "far_endsurhldr or near_endsurhldr is null..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13570
    :goto_0
    return-void

    .line 13566
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurhldr:Landroid/graphics/SurfaceTexture;

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->onSurfaceTextureDestroyed(Landroid/graphics/SurfaceTexture;)Z

    .line 13567
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->onSurfaceTextureDestroyed(Landroid/graphics/SurfaceTexture;)Z

    .line 13568
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurhldr:Landroid/graphics/SurfaceTexture;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v1}, Landroid/view/TextureView;->getWidth()I

    move-result v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v2}, Landroid/view/TextureView;->getHeight()I

    move-result v2

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/phone/InVTCallScreen;->onSurfaceTextureAvailable(Landroid/graphics/SurfaceTexture;II)V

    .line 13569
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v1}, Landroid/view/TextureView;->getWidth()I

    move-result v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v2}, Landroid/view/TextureView;->getHeight()I

    move-result v2

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/phone/InVTCallScreen;->onSurfaceTextureAvailable(Landroid/graphics/SurfaceTexture;II)V

    goto :goto_0
.end method

.method private swipeSurfaceViewAnimated()V
    .locals 10

    .prologue
    const/4 v9, 0x4

    const/4 v6, 0x0

    const/high16 v5, 0x3f80

    const-wide/16 v7, 0x3e8

    .line 13594
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    if-eqz v3, :cond_2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    if-eqz v3, :cond_2

    .line 13595
    const/16 v0, 0x3e8

    .line 13596
    .local v0, SWIPE_ANI_TIME:I
    const/16 v1, 0x64

    .line 13598
    .local v1, SWITCHING_TIME:I
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    invoke-virtual {v3, v7, v8}, Landroid/view/ViewPropertyAnimator;->setDuration(J)Landroid/view/ViewPropertyAnimator;

    .line 13599
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    invoke-virtual {v3, v7, v8}, Landroid/view/ViewPropertyAnimator;->setDuration(J)Landroid/view/ViewPropertyAnimator;

    .line 13600
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    new-instance v4, Landroid/view/animation/AccelerateInterpolator;

    invoke-direct {v4}, Landroid/view/animation/AccelerateInterpolator;-><init>()V

    invoke-virtual {v3, v4}, Landroid/view/ViewPropertyAnimator;->setInterpolator(Landroid/animation/TimeInterpolator;)Landroid/view/ViewPropertyAnimator;

    .line 13601
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    new-instance v4, Landroid/view/animation/AccelerateInterpolator;

    invoke-direct {v4}, Landroid/view/animation/AccelerateInterpolator;-><init>()V

    invoke-virtual {v3, v4}, Landroid/view/ViewPropertyAnimator;->setInterpolator(Landroid/animation/TimeInterpolator;)Landroid/view/ViewPropertyAnimator;

    .line 13602
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    invoke-virtual {v3, v5}, Landroid/view/ViewPropertyAnimator;->alpha(F)Landroid/view/ViewPropertyAnimator;

    .line 13603
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    invoke-virtual {v3, v5}, Landroid/view/ViewPropertyAnimator;->alpha(F)Landroid/view/ViewPropertyAnimator;

    .line 13604
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationNear:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/ViewPropertyAnimator;->start()V

    .line 13605
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSwipeAnimationFar:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->animate()Landroid/view/ViewPropertyAnimator;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/ViewPropertyAnimator;->start()V

    .line 13607
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v3

    if-nez v3, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v3

    if-nez v3, :cond_1

    .line 13609
    const-string v3, "support_kk_vt_tablet_multiwindow"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 13610
    sput-boolean v6, Lcom/android/phone/InVTCallScreen;->isFinishSwipe:Z

    .line 13611
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mFarEndArea:Landroid/widget/RelativeLayout;

    invoke-virtual {v3, v9}, Landroid/widget/RelativeLayout;->setVisibility(I)V

    .line 13612
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mNearEndArea:Landroid/widget/RelativeLayout;

    invoke-virtual {v3, v9}, Landroid/widget/RelativeLayout;->setVisibility(I)V

    .line 13613
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeButtonView()V

    .line 13615
    :cond_0
    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 13616
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v4, 0xb7

    const-wide/16 v5, 0x7d0

    invoke-virtual {v3, v4, v5, v6}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 13618
    :cond_1
    new-instance v2, Landroid/os/Handler;

    invoke-direct {v2}, Landroid/os/Handler;-><init>()V

    .line 13620
    .local v2, swipeHandler:Landroid/os/Handler;
    new-instance v3, Lcom/android/phone/InVTCallScreen$65;

    invoke-direct {v3, p0}, Lcom/android/phone/InVTCallScreen$65;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v2, v3, v7, v8}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 13628
    new-instance v3, Lcom/android/phone/InVTCallScreen$66;

    invoke-direct {v3, p0}, Lcom/android/phone/InVTCallScreen$66;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v2, v3, v7, v8}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 13636
    new-instance v3, Lcom/android/phone/InVTCallScreen$67;

    invoke-direct {v3, p0}, Lcom/android/phone/InVTCallScreen$67;-><init>(Lcom/android/phone/InVTCallScreen;)V

    const-wide/16 v4, 0x44c

    invoke-virtual {v2, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 13649
    .end local v0           #SWIPE_ANI_TIME:I
    .end local v1           #SWITCHING_TIME:I
    .end local v2           #swipeHandler:Landroid/os/Handler;
    :cond_2
    return-void
.end method

.method private swipeSurfaceView_BigLocal()V
    .locals 1

    .prologue
    .line 14466
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-nez v0, :cond_0

    .line 14467
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setIsSurfaceViewSwipe(Z)V

    .line 14468
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceView()V

    .line 14470
    :cond_0
    return-void
.end method

.method private swipeSurfaceView_BigRemote()V
    .locals 1

    .prologue
    .line 14458
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 14459
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setIsSurfaceViewSwipe(Z)V

    .line 14460
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceView()V

    .line 14462
    :cond_0
    return-void
.end method

.method private switchCamera()V
    .locals 4

    .prologue
    const/4 v3, 0x3

    const/4 v2, 0x1

    .line 12540
    const-string v0, "This is inside CallVtScreen switchCamera method"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12541
    const-string v0, "vt_camera_init_noise_reduction"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 12542
    const-string v0, "Enable camera init noise reduction"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12543
    invoke-static {v2}, Lcom/android/phone/PhoneUtils;->setCameraMute(Z)V

    .line 12546
    :cond_0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFrontCameraEnabled:Z

    if-eqz v0, :cond_2

    .line 12548
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_1

    .line 12549
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, v3, v2}, Lsiso/vt/VTManager;->SetCameraParams(II)I

    .line 12550
    :cond_1
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFrontCameraEnabled:Z

    .line 12556
    :goto_0
    return-void

    .line 12552
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_3

    .line 12553
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x2

    invoke-virtual {v0, v3, v1}, Lsiso/vt/VTManager;->SetCameraParams(II)I

    .line 12554
    :cond_3
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isFrontCameraEnabled:Z

    goto :goto_0
.end method

.method private switchDisplayMode_ImageView()V
    .locals 4

    .prologue
    .line 14533
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    invoke-virtual {v2}, Landroid/widget/ImageView;->getVisibility()I

    move-result v1

    .line 14534
    .local v1, visibility:I
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    invoke-virtual {v2}, Landroid/widget/ImageView;->getDrawable()Landroid/graphics/drawable/Drawable;

    move-result-object v0

    .line 14536
    .local v0, drawable:Landroid/graphics/drawable/Drawable;
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->getVisibility()I

    move-result v3

    invoke-virtual {v2, v3}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 14537
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    invoke-virtual {v3}, Landroid/widget/ImageView;->getDrawable()Landroid/graphics/drawable/Drawable;

    move-result-object v3

    invoke-virtual {v2, v3}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 14538
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    invoke-virtual {v2, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 14539
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->nearEndImage:Landroid/widget/ImageView;

    invoke-virtual {v2, v0}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 14540
    return-void
.end method

.method private syncWithPhoneState()Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    .locals 10

    .prologue
    const/4 v7, 0x0

    const/4 v6, 0x1

    .line 6522
    const/4 v5, 0x0

    .line 6523
    .local v5, updateSuccessful:Z
    const-string v8, "syncWithPhoneState()..."

    invoke-direct {p0, v8}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6524
    sget-boolean v8, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v8, :cond_0

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dumpBluetoothState()V

    .line 6532
    :cond_0
    const-string v8, "feature_chn_duos"

    invoke-static {v8}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_2

    .line 6533
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v8}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v4

    .line 6537
    .local v4, phoneType:I
    :goto_0
    const/4 v8, 0x2

    if-ne v4, v8, :cond_3

    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v8, v8, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v8, v8, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v9, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-eq v8, v9, :cond_1

    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v8, v8, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v8, v8, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v9, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v8, v9, :cond_3

    .line 6541
    :cond_1
    sget-object v6, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    .line 6566
    :goto_1
    return-object v6

    .line 6535
    .end local v4           #phoneType:I
    :cond_2
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v8}, Lcom/android/internal/telephony/CallManager;->getFgPhone()Lcom/android/internal/telephony/Phone;

    move-result-object v8

    invoke-interface {v8}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v4

    .restart local v4       #phoneType:I
    goto :goto_0

    .line 6546
    :cond_3
    if-ne v4, v6, :cond_5

    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v8}, Lcom/android/internal/telephony/Phone;->getPendingMmiCodes()Ljava/util/List;

    move-result-object v8

    invoke-interface {v8}, Ljava/util/List;->isEmpty()Z

    move-result v8

    if-nez v8, :cond_5

    move v3, v6

    .line 6549
    .local v3, hasPendingMmiCodes:Z
    :goto_2
    const-string v8, "feature_chn_duos"

    invoke-static {v8}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_9

    .line 6550
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_6

    move v1, v6

    .line 6551
    .local v1, hasActiveFgCall:Z
    :goto_3
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_7

    move v0, v6

    .line 6552
    .local v0, hasActiveBgCall:Z
    :goto_4
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_8

    move v2, v6

    .line 6558
    .local v2, hasActiveRingingCall:Z
    :goto_5
    if-nez v1, :cond_4

    if-nez v0, :cond_4

    if-nez v2, :cond_4

    if-eqz v3, :cond_a

    .line 6560
    :cond_4
    const-string v6, "syncWithPhoneState: it\'s ok to be here; update the screen..."

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6561
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateScreen()V

    .line 6562
    sget-object v6, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto :goto_1

    .end local v0           #hasActiveBgCall:Z
    .end local v1           #hasActiveFgCall:Z
    .end local v2           #hasActiveRingingCall:Z
    .end local v3           #hasPendingMmiCodes:Z
    :cond_5
    move v3, v7

    .line 6546
    goto :goto_2

    .restart local v3       #hasPendingMmiCodes:Z
    :cond_6
    move v1, v7

    .line 6550
    goto :goto_3

    .restart local v1       #hasActiveFgCall:Z
    :cond_7
    move v0, v7

    .line 6551
    goto :goto_4

    .restart local v0       #hasActiveBgCall:Z
    :cond_8
    move v2, v7

    .line 6552
    goto :goto_5

    .line 6554
    .end local v0           #hasActiveBgCall:Z
    .end local v1           #hasActiveFgCall:Z
    :cond_9
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v6}, Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z

    move-result v1

    .line 6555
    .restart local v1       #hasActiveFgCall:Z
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v6}, Lcom/android/internal/telephony/CallManager;->hasActiveBgCall()Z

    move-result v0

    .line 6556
    .restart local v0       #hasActiveBgCall:Z
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v6}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v2

    .restart local v2       #hasActiveRingingCall:Z
    goto :goto_5

    .line 6565
    :cond_a
    const-string v6, "syncWithPhoneState: phone is idle; we shouldn\'t be here!"

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6566
    sget-object v6, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->PHONE_NOT_IN_USE:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    goto :goto_1
.end method

.method private unregisterForPhoneStates()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 3345
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mRegisteredForPhoneStates:Z

    if-eqz v0, :cond_0

    .line 3346
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3347
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1}, Lcom/android/internal/telephony/Phone;->unregisterForPreciseCallStateChanged(Landroid/os/Handler;)V

    .line 3348
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1}, Lcom/android/internal/telephony/Phone;->unregisterForDisconnect(Landroid/os/Handler;)V

    .line 3349
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1}, Lcom/android/internal/telephony/Phone;->unregisterForMmiInitiate(Landroid/os/Handler;)V

    .line 3350
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1}, Lcom/android/internal/telephony/Phone;->unregisterForMmiComplete(Landroid/os/Handler;)V

    .line 3351
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1}, Lcom/android/internal/telephony/Phone;->unregisterForCallWaiting(Landroid/os/Handler;)V

    .line 3352
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1}, Lcom/android/internal/telephony/Phone;->unregisterForSuppServiceFailed(Landroid/os/Handler;)V

    .line 3353
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    const/16 v1, 0x68

    invoke-interface {v0, v2, v1, v2}, Lcom/android/internal/telephony/Phone;->setOnPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V

    .line 3354
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-interface {v0, v1}, Lcom/android/internal/telephony/Phone;->unregisterForCdmaOtaStatusChange(Landroid/os/Handler;)V

    .line 3365
    :goto_0
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mRegisteredForPhoneStates:Z

    .line 3367
    :cond_0
    return-void

    .line 3356
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForPreciseCallStateChanged(Landroid/os/Handler;)V

    .line 3357
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForDisconnect(Landroid/os/Handler;)V

    .line 3358
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForMmiInitiate(Landroid/os/Handler;)V

    .line 3359
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForMmiComplete(Landroid/os/Handler;)V

    .line 3360
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForCallWaiting(Landroid/os/Handler;)V

    .line 3361
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForSuppServiceFailed(Landroid/os/Handler;)V

    .line 3362
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForPostDialCharacter(Landroid/os/Handler;)V

    .line 3363
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Lcom/android/internal/telephony/CallManager;->unregisterForCdmaOtaStatusChange(Landroid/os/Handler;)V

    goto :goto_0
.end method

.method private updateButtonUI()V
    .locals 2

    .prologue
    .line 14248
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_0

    .line 14249
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 14250
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->getMute(Lcom/android/internal/telephony/Phone;)Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 14256
    :cond_0
    :goto_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSpeakerButton()V

    .line 14258
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_1

    .line 14259
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnectedOrPending()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 14260
    :cond_1
    return-void

    .line 14252
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-static {}, Lcom/android/phone/PhoneUtils;->getMute()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    goto :goto_0
.end method

.method private updateCameraButtons(Z)V
    .locals 2
    .parameter "enable"

    .prologue
    .line 7257
    if-eqz p1, :cond_2

    .line 7258
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 7259
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mTestCloseCheck:Z

    if-eqz v0, :cond_1

    .line 7260
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, p1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 7270
    :cond_0
    :goto_0
    return-void

    .line 7262
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    goto :goto_0

    .line 7266
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 7267
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, p1}, Landroid/widget/Button;->setEnabled(Z)V

    goto :goto_0
.end method

.method private updateDisplayForCaller(Lcom/android/internal/telephony/Connection;)V
    .locals 9
    .parameter

    .prologue
    const/4 v8, 0x4

    const/4 v7, 0x3

    const/4 v6, 0x0

    const v5, 0x7f090007

    const/16 v4, 0x8

    .line 9594
    invoke-static {p0, p1}, Lcom/android/phone/PhoneUtils;->getCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;)Lcom/android/internal/telephony/CallerInfo;

    move-result-object v1

    .line 9595
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getNumberPresentation()I

    move-result v0

    .line 9597
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Presentation "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " Connection Address: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9598
    if-eqz v1, :cond_0

    .line 9599
    const-string v2, "Information Available"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9600
    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    if-eqz v2, :cond_0

    .line 9601
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Caller Name: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9605
    :cond_0
    if-eqz p1, :cond_1

    .line 9606
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, " Connection Address: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9609
    :cond_1
    if-eqz v1, :cond_b

    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    if-eqz v2, :cond_b

    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_b

    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_ALLOWED:I

    if-ne v0, v2, :cond_b

    .line 9610
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9612
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 9613
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 9614
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 9617
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getCnapName()Ljava/lang/String;

    move-result-object v0

    iput-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->cnapName:Ljava/lang/String;

    .line 9620
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getCdnipNumber()Ljava/lang/String;

    move-result-object v0

    iput-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->cdnipNumber:Ljava/lang/String;

    .line 9622
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->cnapName:Ljava/lang/String;

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_8

    .line 9623
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->cnapName:Ljava/lang/String;

    sput-object v0, Lcom/android/phone/PhoneUtilsExt;->mDisplayName:Ljava/lang/String;

    .line 9629
    :cond_2
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    sget-object v2, Lcom/android/phone/PhoneUtilsExt;->mDisplayName:Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9631
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_3

    .line 9633
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-static {v0}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    .line 9635
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->restorecallprefix(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    .line 9639
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9649
    :cond_4
    :goto_1
    const-string v0, "phone_number_locator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 9650
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v6}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9651
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    if-eqz v0, :cond_5

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-eq v0, v7, :cond_5

    .line 9652
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->getPhoneNumberLocator(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9655
    :cond_5
    const-string v0, "Caller Info Avialable"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9730
    :goto_2
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 9732
    invoke-static {}, Lcom/android/phone/PhoneUtilsExt;->isSKTRADEnabled()Ljava/lang/Boolean;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-eqz v0, :cond_6

    if-eqz v1, :cond_6

    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_6

    .line 9733
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-static {v0, v2}, Lcom/android/phone/PhoneUtilsExt;->changeNameForSKTRAD(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 9744
    :cond_6
    if-eqz v1, :cond_1d

    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->cdnipNumber:Ljava/lang/String;

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_1d

    .line 9745
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "cdnipNumber : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v2, v1, Lcom/android/internal/telephony/CallerInfo;->cdnipNumber:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, "call state : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9747
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v2, :cond_1c

    .line 9748
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->cdnipNumber:Ljava/lang/String;

    invoke-static {v0}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->cdnipNumber:Ljava/lang/String;

    .line 9749
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x7f090521

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, v1, Lcom/android/internal/telephony/CallerInfo;->cdnipNumber:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 9750
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    if-eqz v1, :cond_7

    .line 9751
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    invoke-virtual {v1, v0}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9752
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v6}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9767
    :cond_7
    :goto_3
    return-void

    .line 9625
    :cond_8
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    sput-object v0, Lcom/android/phone/PhoneUtilsExt;->mDisplayName:Ljava/lang/String;

    goto/16 :goto_0

    .line 9642
    :cond_9
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 9643
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 9645
    :cond_a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto/16 :goto_1

    .line 9656
    :cond_b
    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_ALLOWED:I

    if-ne v0, v2, :cond_11

    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_11

    .line 9657
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 9659
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    if-eqz v0, :cond_e

    .line 9660
    iget-object v0, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-static {v0}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 9664
    :goto_4
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->restorecallprefix(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 9665
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v2, v0}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9676
    :goto_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9677
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_c

    .line 9678
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v4}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9680
    :cond_c
    const-string v0, "phone_number_locator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 9681
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    if-eqz v0, :cond_d

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-eq v0, v7, :cond_d

    .line 9682
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v4}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9683
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerCity:Landroid/widget/TextView;

    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->getPhoneNumberLocator(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9686
    :cond_d
    const-string v0, "Caller Info PRESENTATION_ALLOWED"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 9662
    :cond_e
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    goto :goto_4

    .line 9668
    :cond_f
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_10

    .line 9669
    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 9673
    :goto_6
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_5

    .line 9671
    :cond_10
    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    goto :goto_6

    .line 9687
    :cond_11
    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_RESTRICTED:I

    if-ne v0, v2, :cond_13

    .line 9688
    const v0, 0x7f090009

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 9689
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9690
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9691
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_12

    .line 9692
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v4}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9694
    :cond_12
    const-string v0, "Caller Info PRESENTATION_RESTRICTED"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 9695
    :cond_13
    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_UNKNOWN:I

    if-ne v0, v2, :cond_15

    .line 9696
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9697
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9698
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_14

    .line 9699
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v4}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9701
    :cond_14
    const-string v0, "Caller Info PRESENTATION_UNKNOWN"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 9702
    :cond_15
    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_PAYPHONE:I

    if-ne v0, v2, :cond_17

    .line 9703
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    const v2, 0x7f09000a

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9704
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9705
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_16

    .line 9706
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v4}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9708
    :cond_16
    const-string v0, "Caller Info PRESENTATION_PAYPHONE"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 9709
    :cond_17
    sget v2, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_ALLOWED:I

    if-ne v0, v2, :cond_1a

    invoke-virtual {p1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_1a

    .line 9710
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->getCallerName(Lcom/android/internal/telephony/CallManager;)Ljava/lang/String;

    move-result-object v0

    .line 9711
    if-nez v0, :cond_19

    .line 9712
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9716
    :goto_7
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9717
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_18

    .line 9718
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v4}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9720
    :cond_18
    const-string v0, "Caller Info PRESENTATION_ALLOWED and getAddress is null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 9714
    :cond_19
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v2, v0}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_7

    .line 9722
    :cond_1a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9723
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v2, ""

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 9724
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1b

    .line 9725
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v4}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9727
    :cond_1b
    const-string v0, "All Failed"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 9755
    :cond_1c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    if-eqz v0, :cond_7

    .line 9756
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v8}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_3

    .line 9760
    :cond_1d
    const-string v0, "cdnipNumber : null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9761
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    if-eqz v0, :cond_7

    .line 9762
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCdnipNumber:Landroid/widget/TextView;

    invoke-virtual {v0, v8}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_3
.end method

.method private updateDualCameraUpdatedTime()V
    .locals 5

    .prologue
    const/4 v4, 0x0

    .line 2415
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v2, v2, Lcom/android/phone/InVTCallState;->mDualCameraEnabledTime:J

    sub-long/2addr v0, v2

    const-wide/16 v2, 0x3e8

    div-long/2addr v0, v2

    .line 2417
    const-wide/16 v2, 0xb4

    cmp-long v2, v0, v2

    if-lez v2, :cond_1

    .line 2418
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->requestDualCamera(Z)V

    .line 2419
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->updateDualCameraLayout(Z)V

    .line 2437
    :cond_0
    :goto_0
    return-void

    .line 2423
    :cond_1
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCircleTimeProgressView:Lcom/android/phone/CircleTimeProgressView;

    if-eqz v2, :cond_2

    .line 2424
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCircleTimeProgressView:Lcom/android/phone/CircleTimeProgressView;

    long-to-int v3, v0

    const/16 v4, 0xb4

    invoke-virtual {v2, v3, v4}, Lcom/android/phone/CircleTimeProgressView;->setProgress(II)V

    .line 2432
    :cond_2
    const-wide/16 v2, 0x78

    cmp-long v0, v0, v2

    if-nez v0, :cond_0

    .line 2433
    const v0, 0x7f0903f1

    const/4 v1, 0x1

    invoke-static {p0, v0, v1}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    .line 2434
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    goto :goto_0
.end method

.method private updateElapsedTimeWidget(J)V
    .locals 8
    .parameter "timeElapsed"

    .prologue
    .line 2353
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v4, :cond_0

    .line 2354
    const-wide/16 v4, 0x0

    cmp-long v4, p1, v4

    if-nez v4, :cond_4

    .line 2355
    const-string v4, "00:00"

    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTime:Ljava/lang/String;

    .line 2356
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    const-string v5, ""

    invoke-virtual {v4, v5}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 2368
    :cond_0
    :goto_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 2372
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateRecordTime()V

    .line 2373
    new-instance v2, Ljava/io/File;

    const-string v4, "/sdcard/"

    invoke-direct {v2, v4}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 2374
    .local v2, path:Ljava/io/File;
    new-instance v3, Landroid/os/StatFs;

    invoke-virtual {v2}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/os/StatFs;-><init>(Ljava/lang/String;)V

    .line 2375
    .local v3, stat:Landroid/os/StatFs;
    invoke-virtual {v3}, Landroid/os/StatFs;->getAvailableBlocks()I

    move-result v4

    int-to-long v4, v4

    invoke-virtual {v3}, Landroid/os/StatFs;->getBlockSize()I

    move-result v6

    int-to-long v6, v6

    mul-long/2addr v4, v6

    const-wide/16 v6, 0x400

    div-long v0, v4, v6

    .line 2376
    .local v0, availableSize:J
    const-wide/16 v4, 0x2328

    cmp-long v4, v0, v4

    if-gez v4, :cond_1

    .line 2377
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mLowMemoryStopRecording:Z

    .line 2379
    const-string v4, "vt_audio_mixed_recording"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_5

    const-string v4, "vt_audio_mixed_recording_via_stack"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_5

    .line 2380
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopRecordingAudio()V

    .line 2387
    .end local v0           #availableSize:J
    .end local v2           #path:Ljava/io/File;
    .end local v3           #stat:Landroid/os/StatFs;
    :cond_1
    :goto_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v4

    if-eqz v4, :cond_2

    .line 2391
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateRecordTime()V

    .line 2392
    new-instance v2, Ljava/io/File;

    const-string v4, "/sdcard/"

    invoke-direct {v2, v4}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 2393
    .restart local v2       #path:Ljava/io/File;
    new-instance v3, Landroid/os/StatFs;

    invoke-virtual {v2}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/os/StatFs;-><init>(Ljava/lang/String;)V

    .line 2394
    .restart local v3       #stat:Landroid/os/StatFs;
    invoke-virtual {v3}, Landroid/os/StatFs;->getAvailableBlocks()I

    move-result v4

    int-to-long v4, v4

    invoke-virtual {v3}, Landroid/os/StatFs;->getBlockSize()I

    move-result v6

    int-to-long v6, v6

    mul-long/2addr v4, v6

    const-wide/16 v6, 0x400

    div-long v0, v4, v6

    .line 2395
    .restart local v0       #availableSize:J
    const-wide/16 v4, 0x2328

    cmp-long v4, v0, v4

    if-gez v4, :cond_2

    .line 2396
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mLowMemoryStopRecording:Z

    .line 2398
    const/4 v4, 0x0

    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->stopRecordingNearEndView(Z)V

    .line 2402
    .end local v0           #availableSize:J
    .end local v2           #path:Ljava/io/File;
    .end local v3           #stat:Landroid/os/StatFs;
    :cond_2
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v4}, Lcom/android/phone/PreviewEffectState;->isDualCameraEnabled()Z

    move-result v4

    if-eqz v4, :cond_3

    iget-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->isDualCameraStarted:Z

    if-eqz v4, :cond_3

    .line 2403
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateDualCameraUpdatedTime()V

    .line 2404
    :cond_3
    return-void

    .line 2358
    :cond_4
    invoke-static {p1, p2}, Lcom/android/phone/util/PhoneDateUtils;->formatElapsedTime(J)Ljava/lang/String;

    move-result-object v4

    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTime:Ljava/lang/String;

    .line 2359
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTime:Ljava/lang/String;

    invoke-virtual {v4, v5}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 2361
    const-string v4, "sec_product_feature_common_dsds_support"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 2362
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    if-eqz v4, :cond_0

    .line 2363
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mSimID:Landroid/widget/ImageView;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Landroid/widget/ImageView;->setVisibility(I)V

    goto/16 :goto_0

    .line 2382
    .restart local v0       #availableSize:J
    .restart local v2       #path:Ljava/io/File;
    .restart local v3       #stat:Landroid/os/StatFs;
    :cond_5
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->stopRecordingFarEndView()V

    goto :goto_1
.end method

.method private updateEndCallButton()V
    .locals 4

    .prologue
    const/4 v3, 0x0

    .line 4622
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 4623
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v2}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .line 4624
    .local v1, fgCallState:Lcom/android/internal/telephony/Call$State;
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 4629
    .local v0, fgCall:Lcom/android/internal/telephony/Call;
    :goto_0
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isConferenceCall(Lcom/android/internal/telephony/Call;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 4630
    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->showEndCallScreen(Z)V

    .line 4639
    :goto_1
    return-void

    .line 4626
    .end local v0           #fgCall:Lcom/android/internal/telephony/Call;
    .end local v1           #fgCallState:Lcom/android/internal/telephony/Call$State;
    :cond_0
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->getActiveFgCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .line 4627
    .restart local v1       #fgCallState:Lcom/android/internal/telephony/Call$State;
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .restart local v0       #fgCall:Lcom/android/internal/telephony/Call;
    goto :goto_0

    .line 4633
    :cond_1
    sget-object v2, Lcom/android/internal/telephony/Call$State;->IDLE:Lcom/android/internal/telephony/Call$State;

    if-ne v1, v2, :cond_2

    .line 4634
    const-string v2, "updateEndCallButton : All calls are IDLE at updateEndCallButton()"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4635
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->delayedCleanupAfterDisconnect()V

    goto :goto_1

    .line 4638
    :cond_2
    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->showEndCallScreen(Z)V

    goto :goto_1
.end method

.method private updateEndcallButtonState(Z)V
    .locals 13
    .parameter

    .prologue
    const v9, 0x7f090007

    const/4 v12, 0x4

    const/16 v8, 0x8

    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 4921
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCreateButton:Landroid/widget/Button;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpdateButton:Landroid/widget/Button;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mEndCallButtonFrame:Landroid/view/View;

    if-eqz v0, :cond_3

    .line 4924
    const-string v0, "Update caller info and buttons"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4927
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 4928
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 4933
    :goto_0
    const/4 v1, 0x0

    .line 4934
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v4}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v4

    const/4 v5, 0x2

    if-ne v4, v5, :cond_5

    .line 4935
    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 4937
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 4938
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 4940
    :cond_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v1, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 4941
    invoke-static {p0, v0}, Lcom/android/phone/PhoneUtils;->getCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;)Lcom/android/internal/telephony/CallerInfo;

    move-object v9, v0

    .line 5047
    :goto_1
    if-eqz p1, :cond_19

    .line 5048
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    const v1, 0x7f0901a4

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5050
    :try_start_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getIntent()Landroid/content/Intent;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->getInitialNumber(Landroid/content/Intent;)Ljava/lang/String;

    move-result-object v0

    .line 5051
    if-nez v0, :cond_18

    .line 5052
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v1, ""

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V
    :try_end_0
    .catch Lcom/android/phone/PhoneUtils$VoiceMailNumberMissingException; {:try_start_0 .. :try_end_0} :catch_0

    .line 5064
    :cond_1
    :goto_2
    if-eqz v9, :cond_2d

    .line 5065
    invoke-virtual {v9}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/telephony/PhoneNumberUtils;->isEmergencyNumber(Ljava/lang/String;)Z

    move-result v10

    .line 5066
    if-nez v10, :cond_1a

    move v7, v2

    .line 5067
    :goto_3
    if-nez v10, :cond_1b

    move v6, v2

    .line 5068
    :goto_4
    if-nez v10, :cond_1c

    move v5, v2

    .line 5069
    :goto_5
    if-nez v10, :cond_1d

    move v1, v2

    .line 5072
    :goto_6
    invoke-virtual {v9}, Lcom/android/internal/telephony/Connection;->getNumberPresentation()I

    move-result v0

    .line 5074
    const-string v4, "20"

    .line 5075
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/phone/PhoneGlobals;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string v11, "lock_pcw_enabled"

    invoke-static {v4, v11}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    .line 5078
    if-eqz v4, :cond_1e

    const-string v11, "20"

    invoke-virtual {v4, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1e

    .line 5079
    const-string v0, "EndCallButtonsView : LOCK_PCW_ENABLED"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    move v0, v3

    move v4, v3

    move v1, v3

    move v5, v3

    move v6, v3

    move v7, v3

    .line 5113
    :goto_7
    sget-boolean v10, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    if-eqz v10, :cond_24

    .line 5114
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    invoke-virtual {v1, v3}, Landroid/widget/Button;->setEnabled(Z)V

    .line 5115
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    invoke-virtual {v1, v3}, Landroid/widget/Button;->setEnabled(Z)V

    .line 5116
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    invoke-virtual {v1, v3}, Landroid/widget/Button;->setEnabled(Z)V

    .line 5117
    const-string v1, "ip_call"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 5118
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    if-eqz v1, :cond_2

    .line 5119
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    invoke-virtual {v1, v3}, Landroid/widget/Button;->setEnabled(Z)V

    .line 5131
    :cond_2
    :goto_8
    const-string v1, "support_kk_vt_tablet_multiwindow"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2a

    .line 5132
    if-nez v4, :cond_29

    .line 5133
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCreateButton:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setVisibility(I)V

    .line 5134
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpdateButton:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setVisibility(I)V

    .line 5135
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mViewContact:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 5150
    :goto_9
    const-string v0, "vt_display_start_call_time"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 5151
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallStartTime:Landroid/widget/TextView;

    if-eqz v0, :cond_3

    .line 5152
    invoke-virtual {v9}, Lcom/android/internal/telephony/Connection;->getConnectTime()J

    move-result-wide v0

    .line 5153
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallStartTime:Landroid/widget/TextView;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getContext()Landroid/content/Context;

    move-result-object v3

    const/16 v4, 0x101

    invoke-static {v3, v0, v1, v4}, Landroid/text/format/DateUtils;->formatDateTime(Landroid/content/Context;JI)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5160
    :cond_3
    :goto_a
    return-void

    .line 4930
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    goto/16 :goto_0

    .line 4942
    :cond_5
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v4}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v4

    if-ne v4, v2, :cond_17

    .line 4943
    if-eqz v0, :cond_2f

    .line 4944
    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 4946
    :goto_b
    invoke-static {p0, v0}, Lcom/android/phone/PhoneUtils;->getCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;)Lcom/android/internal/telephony/CallerInfo;

    move-result-object v1

    .line 4947
    if-eqz v1, :cond_a

    iget-object v4, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    if-eqz v4, :cond_a

    iget-object v4, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-static {v4}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_a

    .line 4948
    const-string v4, "Caller name is not empty"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4949
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v4

    sget-object v5, Landroid/provider/ContactsContract$Contacts;->CONTENT_URI:Landroid/net/Uri;

    iget-wide v6, v1, Lcom/android/internal/telephony/CallerInfo;->person_id:J

    invoke-static {v5, v6, v7}, Landroid/content/ContentUris;->withAppendedId(Landroid/net/Uri;J)Landroid/net/Uri;

    move-result-object v5

    new-instance v6, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;

    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    iget-object v9, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    const/16 v10, 0xa

    invoke-direct {v6, v7, v9, v1, v10}, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;-><init>(Landroid/widget/ImageView;Landroid/widget/ImageView;Lcom/android/internal/telephony/CallerInfo;I)V

    invoke-static {v2, v4, v5, p0, v6}, Lcom/android/phone/ContactsAsyncHelper;->startObtainPhotoAsync(ILandroid/content/Context;Landroid/net/Uri;Lcom/android/phone/ContactsAsyncHelper$OnImageLoadCompleteListener;Ljava/lang/Object;)V

    .line 4953
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v4, v3}, Landroid/widget/TextView;->setVisibility(I)V

    .line 4954
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    iget-object v5, v1, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v5}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 4955
    if-eqz v0, :cond_6

    .line 4956
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_6

    .line 4957
    const-string v4, "kor_cs_vt_ui"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_8

    .line 4959
    iget-object v4, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    if-eqz v4, :cond_7

    .line 4960
    iget-object v1, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-static {v1}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 4964
    :goto_c
    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->restorecallprefix(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 4965
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v4, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    :cond_6
    :goto_d
    move-object v9, v0

    .line 5043
    goto/16 :goto_1

    .line 4962
    :cond_7
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    goto :goto_c

    .line 4968
    :cond_8
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_9

    .line 4969
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 4971
    :cond_9
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v1, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_d

    .line 4976
    :cond_a
    const-string v4, "Caller name is empty"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4977
    if-eqz v0, :cond_16

    .line 4978
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getNumberPresentation()I

    move-result v4

    .line 4979
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Presentation: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4980
    const-string v5, "kor_cs_vt_ui"

    invoke-static {v5}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_10

    .line 4982
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->getPresentationString(I)Ljava/lang/String;

    move-result-object v5

    .line 4983
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "name: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4985
    sget v6, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_ALLOWED:I

    if-ne v4, v6, :cond_c

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v6

    if-nez v6, :cond_c

    .line 4986
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->getCallerName(Lcom/android/internal/telephony/CallManager;)Ljava/lang/String;

    move-result-object v1

    .line 4987
    if-nez v1, :cond_b

    .line 4988
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {p0, v9}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v1, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 4992
    :goto_e
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    const-string v4, ""

    invoke-virtual {v1, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 4993
    const-string v1, "Caller Info PRESENTATION_ALLOWED and getAddress is null"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_d

    .line 4990
    :cond_b
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v4, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_e

    .line 4994
    :cond_c
    sget v6, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_RESTRICTED:I

    if-ne v4, v6, :cond_d

    invoke-static {v5}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_d

    .line 4995
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v1, v3}, Landroid/widget/TextView;->setVisibility(I)V

    .line 4996
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v1, v5}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto/16 :goto_d

    .line 4997
    :cond_d
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_f

    .line 4999
    iget-object v4, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    if-eqz v4, :cond_e

    .line 5000
    iget-object v1, v1, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    invoke-static {v1}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 5004
    :goto_f
    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->restorecallprefix(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 5005
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v4, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5006
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v1, v12}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_d

    .line 5002
    :cond_e
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/telephony/PhoneNumberUtils;->formatNumber(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    goto :goto_f

    .line 5008
    :cond_f
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v1, v12}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_d

    .line 5011
    :cond_10
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_14

    .line 5012
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Connection Address: "

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5014
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_11

    .line 5015
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 5017
    :cond_11
    const-string v1, ""

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-ne v1, v2, :cond_12

    sget v1, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_UNKNOWN:I

    if-ne v1, v4, :cond_12

    .line 5019
    const-string v1, "mDisplayNumber is ..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5020
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {p0, v9}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v1, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 5024
    :goto_10
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v1, :cond_13

    .line 5025
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v1, v8}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_d

    .line 5022
    :cond_12
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v1, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_10

    .line 5028
    :cond_13
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v1, v12}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_d

    .line 5031
    :cond_14
    const-string v1, "getAddress is null"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5032
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->getCallerName(Lcom/android/internal/telephony/CallManager;)Ljava/lang/String;

    move-result-object v1

    .line 5033
    if-eqz v1, :cond_15

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_15

    .line 5034
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-virtual {v4, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto/16 :goto_d

    .line 5035
    :cond_15
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    if-eqz v1, :cond_6

    .line 5036
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-virtual {v1, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto/16 :goto_d

    .line 5040
    :cond_16
    const-string v1, "All cases failed. Connection is null"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_d

    .line 5044
    :cond_17
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unexpected phone type: isContactExist: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5054
    :cond_18
    :try_start_1
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-virtual {v1, v0}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V
    :try_end_1
    .catch Lcom/android/phone/PhoneUtils$VoiceMailNumberMissingException; {:try_start_1 .. :try_end_1} :catch_0

    goto/16 :goto_2

    .line 5056
    :catch_0
    move-exception v0

    .line 5057
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Error::PhoneUtils.VoiceMailNumberMissingException: "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 5060
    :cond_19
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTime:Ljava/lang/String;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_1

    .line 5061
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallEndTime:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto/16 :goto_2

    :cond_1a
    move v7, v3

    .line 5066
    goto/16 :goto_3

    :cond_1b
    move v6, v3

    .line 5067
    goto/16 :goto_4

    :cond_1c
    move v5, v3

    .line 5068
    goto/16 :goto_5

    :cond_1d
    move v1, v3

    .line 5069
    goto/16 :goto_6

    .line 5084
    :cond_1e
    const-string v4, "feature_chn_duos"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1f

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v4}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v4

    sget-object v11, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v4, v11, :cond_1f

    .line 5086
    const-string v0, "EndCallButtonsView : Other phone is not IDLE"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    move v0, v3

    move v4, v3

    move v1, v3

    move v5, v3

    move v6, v3

    move v7, v3

    .line 5090
    goto/16 :goto_7

    .line 5093
    :cond_1f
    invoke-virtual {v9}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_20

    .line 5094
    invoke-virtual {v9}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v4

    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 5096
    :cond_20
    sget v4, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_RESTRICTED:I

    if-eq v0, v4, :cond_23

    sget v4, Lcom/android/internal/telephony/PhoneConstants;->PRESENTATION_UNKNOWN:I

    if-eq v0, v4, :cond_23

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    invoke-static {v0}, Landroid/telephony/PhoneNumberUtils;->isCheckInvalidNumber(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_23

    .line 5099
    invoke-virtual {v9}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v0

    .line 5100
    instance-of v4, v0, Lcom/android/internal/telephony/CallerInfo;

    if-eqz v4, :cond_2e

    .line 5101
    check-cast v0, Lcom/android/internal/telephony/CallerInfo;

    .line 5102
    if-nez v10, :cond_21

    iget-boolean v4, v0, Lcom/android/internal/telephony/CallerInfo;->contactExists:Z

    if-nez v4, :cond_21

    move v4, v2

    .line 5103
    :goto_11
    if-nez v10, :cond_22

    iget-boolean v0, v0, Lcom/android/internal/telephony/CallerInfo;->contactExists:Z

    if-eqz v0, :cond_22

    move v0, v2

    goto/16 :goto_7

    :cond_21
    move v4, v3

    .line 5102
    goto :goto_11

    :cond_22
    move v0, v3

    .line 5103
    goto/16 :goto_7

    :cond_23
    move v0, v3

    move v4, v3

    move v1, v3

    move v5, v3

    move v6, v3

    move v7, v3

    .line 5109
    goto/16 :goto_7

    .line 5122
    :cond_24
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallButton:Landroid/widget/Button;

    if-eqz v7, :cond_25

    move v7, v2

    :goto_12
    invoke-virtual {v10, v7}, Landroid/widget/Button;->setEnabled(Z)V

    .line 5123
    iget-object v7, p0, Lcom/android/phone/InVTCallScreen;->mVideoCallButton:Landroid/widget/Button;

    if-eqz v5, :cond_26

    move v5, v2

    :goto_13
    invoke-virtual {v7, v5}, Landroid/widget/Button;->setEnabled(Z)V

    .line 5124
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mSendMsgButton:Landroid/widget/Button;

    if-eqz v1, :cond_27

    move v1, v2

    :goto_14
    invoke-virtual {v5, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 5125
    const-string v1, "ip_call"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 5126
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    if-eqz v1, :cond_2

    .line 5127
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mIpCallButton:Landroid/widget/Button;

    if-eqz v6, :cond_28

    :goto_15
    invoke-virtual {v1, v2}, Landroid/widget/Button;->setEnabled(Z)V

    goto/16 :goto_8

    :cond_25
    move v7, v3

    .line 5122
    goto :goto_12

    :cond_26
    move v5, v3

    .line 5123
    goto :goto_13

    :cond_27
    move v1, v3

    .line 5124
    goto :goto_14

    :cond_28
    move v2, v3

    .line 5127
    goto :goto_15

    .line 5138
    :cond_29
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCreateButton:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 5139
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mUpdateButton:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 5140
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mViewContact:Landroid/widget/Button;

    invoke-virtual {v0, v8}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_9

    .line 5144
    :cond_2a
    if-nez v4, :cond_2b

    .line 5145
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSaveButtonFrame:Landroid/view/View;

    invoke-virtual {v1, v12}, Landroid/view/View;->setVisibility(I)V

    .line 5147
    :cond_2b
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mViewContact:Landroid/widget/Button;

    if-eqz v0, :cond_2c

    :goto_16
    invoke-virtual {v1, v3}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_9

    :cond_2c
    move v3, v8

    goto :goto_16

    .line 5157
    :cond_2d
    const-string v0, "EndCallButtonsView : connection is NullPointer at updateState"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_a

    :cond_2e
    move v0, v3

    move v4, v3

    goto/16 :goto_7

    :cond_2f
    move-object v0, v1

    goto/16 :goto_b
.end method

.method private updateInCallBackground()V
    .locals 10

    .prologue
    const/16 v9, 0x64

    const/4 v8, 0x3

    const/4 v4, 0x0

    const/4 v2, 0x0

    const/4 v1, 0x1

    .line 9366
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 9367
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v0

    if-nez v0, :cond_8

    move v0, v1

    .line 9368
    :goto_0
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v3}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v3

    if-nez v3, :cond_0

    .line 9369
    :cond_0
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v3}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v3

    if-nez v3, :cond_1

    .line 9375
    :cond_1
    :goto_1
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v5

    .line 9381
    const-string v3, "feature_chn_duos"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_a

    .line 9382
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v3}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v3

    .line 9388
    :goto_2
    iget-boolean v6, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v6, :cond_3

    sget-object v6, Lcom/android/internal/telephony/Call$State;->DIALING:Lcom/android/internal/telephony/Call$State;

    if-eq v3, v6, :cond_3

    sget-object v6, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-eq v3, v6, :cond_3

    .line 9389
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v6, :cond_b

    .line 9390
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v6}, Lcom/android/phone/FrameAnimationForVT;->stop()V

    .line 9395
    :goto_3
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 9396
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    .line 9398
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v6, :cond_2

    .line 9399
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v6}, Lcom/android/phone/FrameAnimationForVT;->stop()V

    .line 9401
    :cond_2
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 9402
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mDialTextAnimationList:[I

    .line 9404
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    if-eqz v6, :cond_3

    .line 9405
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    const/4 v7, 0x4

    invoke-virtual {v6, v7}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9408
    :cond_3
    if-eqz v0, :cond_c

    .line 9410
    const-string v0, "updateInCallBackground :has RingingCall"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9411
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v0, :cond_16

    .line 9412
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v0}, Landroid/bluetooth/BluetoothHeadset;->getConnectedDevices()Ljava/util/List;

    move-result-object v0

    .line 9414
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v3

    if-lez v3, :cond_16

    .line 9415
    invoke-interface {v0, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/bluetooth/BluetoothDevice;

    .line 9418
    :goto_4
    invoke-virtual {v5}, Lcom/android/phone/PhoneGlobals;->isHeadsetPlugged()Z

    move-result v3

    if-nez v3, :cond_6

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v3, :cond_4

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v3, :cond_6

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v3, v0}, Landroid/bluetooth/BluetoothHeadset;->getConnectionState(Landroid/bluetooth/BluetoothDevice;)I

    move-result v0

    const/4 v3, 0x2

    if-eq v0, v3, :cond_6

    :cond_4
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v3, :cond_6

    .line 9422
    :cond_5
    invoke-static {p0, v1, v1}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 9423
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_6

    .line 9424
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 9427
    :cond_6
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 9428
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    if-eqz v0, :cond_7

    .line 9429
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 9550
    :cond_7
    :goto_5
    return-void

    :cond_8
    move v0, v2

    .line 9367
    goto/16 :goto_0

    .line 9371
    :cond_9
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v0

    .line 9372
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v3}, Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z

    .line 9373
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v3}, Lcom/android/internal/telephony/CallManager;->hasActiveBgCall()Z

    goto/16 :goto_1

    .line 9384
    :cond_a
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v3}, Lcom/android/internal/telephony/CallManager;->getActiveFgCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v3

    goto/16 :goto_2

    .line 9393
    :cond_b
    invoke-static {}, Lcom/android/phone/FrameAnimationForVT;->cancelAndClearPreCaching()V

    goto/16 :goto_3

    .line 9432
    :cond_c
    sget-object v0, Lcom/android/phone/InVTCallScreen$78;->$SwitchMap$com$android$internal$telephony$Call$State:[I

    invoke-virtual {v3}, Lcom/android/internal/telephony/Call$State;->ordinal()I

    move-result v3

    aget v0, v0, v3

    packed-switch v0, :pswitch_data_0

    goto :goto_5

    .line 9434
    :pswitch_0
    const-string v0, "updateInCallBackground :ACTIVE"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9436
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->checkForCleanupState()Z

    move-result v0

    if-nez v0, :cond_7

    .line 9437
    const-string v0, "updateInCallBackground :ACTIVE"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9445
    const-string v0, "feature_kor_open"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_d

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v8, :cond_d

    .line 9446
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_d

    .line 9447
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0}, Landroid/widget/LinearLayout;->requestLayout()V

    .line 9448
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0}, Landroid/widget/LinearLayout;->invalidate()V

    goto :goto_5

    .line 9453
    :cond_d
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v1, :cond_e

    .line 9454
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateOwnImageStatus()V

    .line 9457
    :cond_e
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->isCallConnected:Z

    .line 9458
    iput v8, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 9460
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_f

    .line 9461
    const-string v0, "InitVtCallScreen started because Activity is in foreground"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9462
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initInVTCallScreen()V

    .line 9468
    :goto_6
    const-string v0, "vt_multimedia_ringback_tone_timer"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_10

    .line 9469
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mAllOlcOpened:Z

    .line 9470
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mMRBTstart:Z

    .line 9471
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mMRBTend:Z

    goto :goto_5

    .line 9464
    :cond_f
    const-string v0, "InitVtCallScreen not started because Activity is not in foreground"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9465
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->startVTCall()V

    goto :goto_6

    .line 9473
    :cond_10
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    if-eqz v0, :cond_7

    .line 9474
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0, v1}, Lcom/android/phone/CallTime;->setActiveCallMode(Lcom/android/internal/telephony/Call;)V

    .line 9475
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-virtual {v0}, Lcom/android/phone/CallTime;->reset()V

    .line 9476
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-virtual {v0}, Lcom/android/phone/CallTime;->periodicUpdateTimer()Z

    move-result v0

    if-eqz v0, :cond_11

    .line 9477
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-static {}, Lcom/android/phone/CallTime;->startMinuteMinderAlarm()V

    .line 9479
    :cond_11
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_7

    .line 9480
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_5

    .line 9487
    :pswitch_1
    const-string v0, "updateInCallBackground :DISCONNECTING"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9488
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    if-eqz v0, :cond_7

    .line 9489
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0, v1}, Lcom/android/phone/CallTime;->setActiveCallMode(Lcom/android/internal/telephony/Call;)V

    .line 9490
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-virtual {v0}, Lcom/android/phone/CallTime;->reset()V

    .line 9491
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-virtual {v0}, Lcom/android/phone/CallTime;->periodicUpdateTimer()Z

    .line 9492
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    if-eqz v0, :cond_7

    .line 9493
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTimer:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_5

    .line 9498
    :pswitch_2
    const-string v0, "updateInCallBackground :DISCONNECTED"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9499
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    if-eqz v0, :cond_7

    .line 9500
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-virtual {v0}, Lcom/android/phone/CallTime;->cancelTimer()V

    .line 9501
    const-string v0, "updateInCallBackground :Timer Canceled"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9502
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-eqz v0, :cond_7

    .line 9503
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->timerHandler:Landroid/os/Handler;

    invoke-virtual {v0, v9}, Landroid/os/Handler;->removeMessages(I)V

    .line 9504
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->timerHandler:Landroid/os/Handler;

    const-wide/16 v1, 0x1f4

    invoke-virtual {v0, v9, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_5

    .line 9510
    :pswitch_3
    const-string v0, "updateInCallBackground :DIALING"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9511
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mToastExecuteOnceForDevicePolicyManager:Z

    if-nez v0, :cond_13

    .line 9512
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    invoke-virtual {v0, v4}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_12

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v2}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_13

    .line 9513
    :cond_12
    const-string v0, "Camera desabled due DPM\t- INTENT_MSG_SECURITY"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9514
    const-string v0, "camera_security_enter toast pop-up removed in VT app, toast will be raised by EDM famework"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9517
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mToastExecuteOnceForDevicePolicyManager:Z

    .line 9520
    :cond_13
    invoke-virtual {v5}, Lcom/android/phone/PhoneGlobals;->isHeadsetPlugged()Z

    move-result v0

    if-nez v0, :cond_14

    .line 9521
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnectedOrPending()Z

    move-result v0

    if-nez v0, :cond_7

    .line 9522
    const-string v0, "DIALING: bt audio not connected"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9523
    invoke-static {p0, v1, v1}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 9524
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_7

    .line 9525
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    goto/16 :goto_5

    .line 9529
    :cond_14
    const-string v0, "DIALING: Headset is plugged"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_5

    .line 9533
    :pswitch_4
    const-string v0, "updateInCallBackground :ALERTING"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9534
    const v0, 0x7f0a0100

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    .line 9535
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_15

    .line 9536
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 9537
    :cond_15
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_7

    .line 9538
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setEnabled(Z)V

    goto/16 :goto_5

    :cond_16
    move-object v0, v4

    goto/16 :goto_4

    .line 9432
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
    .end packed-switch
.end method

.method private updateInCallTouchUi()V
    .locals 0

    .prologue
    .line 9011
    return-void
.end method

.method private updateMuteButton(Z)V
    .locals 2
    .parameter "enable"

    .prologue
    .line 7273
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "updateMuteButton() enable = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7274
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_0

    .line 7275
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMute:Landroid/widget/ToggleButton;

    invoke-virtual {v0, p1}, Landroid/widget/ToggleButton;->setEnabled(Z)V

    .line 7277
    :cond_0
    return-void
.end method

.method private updateOwnImageStatus()V
    .locals 5

    .prologue
    const/4 v4, 0x0

    const/4 v3, 0x1

    const/4 v2, 0x0

    .line 7226
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 7228
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    invoke-virtual {v0, v4}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v2}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_2

    .line 7229
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    .line 7230
    const-string v0, "UpdateOwnImageStatus : Setup Hide me image, as per settings"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7254
    :cond_1
    :goto_0
    return-void

    .line 7232
    :cond_2
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageEnabled:Z

    .line 7233
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageSelectedFromOption:Z

    .line 7234
    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 7235
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 7236
    const-string v0, "UpdateOwnImageStatus : Setup Show me image, as per settings"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 7239
    :cond_3
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mOwnVideoReceivedCall:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_1

    .line 7240
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "own_video_receivedcall"

    invoke-static {v0, v1, v3}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mOwnVideoReceivedCall:I

    .line 7242
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mOwnVideoReceivedCall:I

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    invoke-virtual {v0, v4}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v2}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_5

    :cond_4
    const-string v0, "vt_cmcc_operator_open_close_camera"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_5

    .line 7244
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    .line 7245
    const-string v0, "UpdateOwnImageStatus : Setup Hide me image, as per settings"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 7247
    :cond_5
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageEnabled:Z

    .line 7248
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageSelectedFromOption:Z

    .line 7249
    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 7250
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 7251
    const-string v0, "UpdateOwnImageStatus : Setup Show me image, as per settings"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method private updateRecordTime()V
    .locals 2

    .prologue
    .line 2407
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 2408
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v0, v0, Lcom/android/phone/InVTCallState;->mRecordTimeFarEnd:J

    invoke-virtual {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->updateRecordTimeUIFarEnd(J)V

    .line 2412
    :cond_0
    :goto_0
    return-void

    .line 2409
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2410
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v0, v0, Lcom/android/phone/InVTCallState;->mRecordTimeNearEnd:J

    invoke-virtual {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->updateRecordTimeUINearEnd(J)V

    goto :goto_0
.end method

.method private updateScreen()V
    .locals 8

    .prologue
    const v7, 0x7f0a039b

    const/4 v6, 0x3

    const/4 v1, 0x0

    const/4 v2, 0x1

    .line 6288
    const-string v0, "updateScreen()..."

    invoke-direct {p0, v0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6295
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-nez v0, :cond_0

    .line 6296
    const-string v0, "- updateScreen: not the foreground Activity! Bailing out..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6299
    :cond_0
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 6300
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSimUI()V

    .line 6302
    :cond_1
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v3

    .line 6304
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v4, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v0, v4, :cond_3

    .line 6305
    const-string v0, "- updateScreen: OTA call state NORMAL..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6509
    :cond_2
    :goto_0
    return-void

    .line 6307
    :cond_3
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v4, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v0, v4, :cond_4

    .line 6308
    const-string v0, "- updateScreen: OTA call ended state ..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6310
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->wakeUpScreen()V

    goto :goto_0

    .line 6312
    :cond_4
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v4, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->MANAGE_CONFERENCE:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v0, v4, :cond_5

    .line 6313
    const-string v0, "- updateScreen: manage conference mode (NOT updating in-call UI)..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 6316
    :cond_5
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v4, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->CALL_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v0, v4, :cond_c

    .line 6317
    const-string v0, "- updateScreen: call ended state (NOT updating in-call UI)..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6319
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateInCallBackground()V

    .line 6320
    const-string v0, "clear_cover"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 6321
    const-string v0, "- updateScreen: call ended state (Check view cover state)..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6322
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v2, :cond_2

    .line 6323
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/FrameLayout;

    .line 6324
    const v1, 0x7f0a03a4

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v1

    check-cast v1, Landroid/widget/FrameLayout;

    .line 6326
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    if-nez v4, :cond_6

    .line 6327
    new-instance v4, Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v5

    invoke-direct {v4, v5}, Lcom/android/phone/CallCardCoveredDialog;-><init>(Landroid/content/Context;)V

    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    .line 6329
    :cond_6
    iget-object v4, v3, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    if-eqz v4, :cond_2

    .line 6331
    :try_start_0
    invoke-virtual {v3}, Lcom/android/phone/PhoneGlobals;->isCoverClosed()Z

    move-result v4

    if-nez v4, :cond_9

    .line 6332
    const-string v2, "CoverOpened"

    const/4 v3, 0x1

    invoke-direct {p0, v2, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6333
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {v2}, Lcom/android/phone/CallCardCoveredDialog;->dismissDialog()V

    .line 6334
    if-eqz v0, :cond_7

    .line 6335
    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 6336
    :cond_7
    if-eqz v1, :cond_8

    .line 6337
    const/16 v0, 0x8

    invoke-virtual {v1, v0}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 6339
    :cond_8
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->requestUpdateDockUi()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto/16 :goto_0

    .line 6352
    :catch_0
    move-exception v0

    .line 6353
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V

    goto/16 :goto_0

    .line 6340
    :cond_9
    :try_start_1
    iget-object v4, v3, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    invoke-virtual {v4}, Lcom/samsung/android/sdk/cover/ScoverManager;->getCoverState()Lcom/samsung/android/sdk/cover/ScoverState;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/sdk/cover/ScoverState;->getType()I

    move-result v4

    if-eq v4, v2, :cond_a

    iget-object v2, v3, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    invoke-virtual {v2}, Lcom/samsung/android/sdk/cover/ScoverManager;->getCoverState()Lcom/samsung/android/sdk/cover/ScoverState;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/sdk/cover/ScoverState;->getType()I

    move-result v2

    if-ne v2, v6, :cond_2

    .line 6342
    :cond_a
    const-string v2, "CoverClosed"

    const/4 v3, 0x1

    invoke-direct {p0, v2, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6343
    const/4 v2, 0x1

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->setRequestedOrientation(I)V

    .line 6345
    if-eqz v1, :cond_b

    .line 6346
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 6347
    :cond_b
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v1, v2, v3}, Lcom/android/phone/CallCardCoveredDialog;->showDialog(Landroid/content/Context;Lcom/android/phone/InCallScreen;)V

    .line 6348
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v1, v2}, Lcom/android/phone/CallCardCoveredDialog;->updateState(Lcom/android/internal/telephony/CallManager;)V

    .line 6349
    if-eqz v0, :cond_2

    .line 6350
    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/FrameLayout;->setVisibility(I)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    goto/16 :goto_0

    .line 6359
    :cond_c
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v4, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->EMPTY:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v0, v4, :cond_d

    .line 6362
    const-string v0, "- updateScreen: error call state (NOT updating in-call UI)..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 6364
    :cond_d
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v4, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->UNDEFINED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v0, v4, :cond_e

    .line 6365
    const-string v0, "- updateScreen: undefined call state (NOT updating in-call UI)..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 6368
    :cond_e
    const-string v0, "- updateScreen: updating the in-call UI..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6371
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 6372
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    .line 6376
    :goto_1
    sget-object v4, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v4, :cond_19

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-eq v0, v2, :cond_19

    .line 6377
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->removeDialog(I)V

    .line 6378
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_16

    .line 6379
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    .line 6388
    :goto_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-nez v0, :cond_f

    .line 6389
    invoke-static {}, Lsiso/vt/VTManager;->getInstance()Lsiso/vt/VTManager;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    .line 6391
    :cond_f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->myListener:Lsiso/vt/VTManager$VTStackStateListener;

    invoke-virtual {v0, v4}, Lsiso/vt/VTManager;->setStackStateListener(Lsiso/vt/VTManager$VTStackStateListener;)V

    .line 6392
    iput v2, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 6393
    const v0, 0x7f09018a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    .line 6394
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initInVTCallScreen()V

    .line 6401
    :goto_3
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1b

    .line 6402
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v0

    if-nez v0, :cond_1a

    move v0, v2

    .line 6406
    :goto_4
    if-eqz v0, :cond_1c

    .line 6407
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissAllDialogs()V

    .line 6469
    :cond_10
    :goto_5
    const-string v0, "clear_cover"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_14

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v2, :cond_14

    .line 6471
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/FrameLayout;

    .line 6472
    const v1, 0x7f0a03a4

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v1

    check-cast v1, Landroid/widget/FrameLayout;

    .line 6474
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    if-nez v4, :cond_11

    .line 6475
    new-instance v4, Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v5

    invoke-direct {v4, v5}, Lcom/android/phone/CallCardCoveredDialog;-><init>(Landroid/content/Context;)V

    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    .line 6477
    :cond_11
    iget-object v4, v3, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    if-eqz v4, :cond_14

    .line 6479
    :try_start_2
    invoke-virtual {v3}, Lcom/android/phone/PhoneGlobals;->isCoverClosed()Z

    move-result v4

    if-nez v4, :cond_26

    .line 6480
    const-string v2, "CoverOpened"

    const/4 v3, 0x1

    invoke-direct {p0, v2, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6481
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {v2}, Lcom/android/phone/CallCardCoveredDialog;->dismissDialog()V

    .line 6482
    if-eqz v0, :cond_12

    .line 6483
    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 6484
    :cond_12
    if-eqz v1, :cond_13

    .line 6485
    const/16 v0, 0x8

    invoke-virtual {v1, v0}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 6487
    :cond_13
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->requestUpdateDockUi()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 6506
    :cond_14
    :goto_6
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_2

    .line 6507
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->invalidateOptionsMenu()V

    goto/16 :goto_0

    .line 6374
    :cond_15
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    goto/16 :goto_1

    .line 6381
    :cond_16
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_17

    const-string v0, "feature_multisim"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_18

    .line 6383
    :cond_17
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->phones:[Lcom/android/internal/telephony/Phone;

    iget v4, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    aget-object v0, v0, v4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    goto/16 :goto_2

    .line 6385
    :cond_18
    iget-object v0, v3, Lcom/android/phone/PhoneGlobals;->phone:Lcom/android/internal/telephony/Phone;

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    goto/16 :goto_2

    .line 6396
    :cond_19
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateInCallBackground()V

    goto/16 :goto_3

    :cond_1a
    move v0, v1

    .line 6402
    goto/16 :goto_4

    .line 6404
    :cond_1b
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v0

    goto/16 :goto_4

    .line 6415
    :cond_1c
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 6416
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getConnections()Ljava/util/List;

    move-result-object v1

    .line 6417
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v0

    .line 6422
    :goto_7
    const/4 v4, 0x2

    if-ne v0, v4, :cond_21

    .line 6423
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFgCallLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 6424
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v4

    iget-object v4, v4, Lcom/android/phone/PhoneGlobals;->cdmaPhoneCallState:Lcom/android/phone/CdmaPhoneCallState;

    invoke-virtual {v4}, Lcom/android/phone/CdmaPhoneCallState;->getCurrentCallState()Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;

    move-result-object v4

    sget-object v5, Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;->CONF_CALL:Lcom/android/phone/CdmaPhoneCallState$PhoneCallState;

    if-ne v4, v5, :cond_1f

    .line 6425
    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_1d
    :goto_8
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_10

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/Connection;

    .line 6426
    if-eqz v0, :cond_1d

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getPostDialState()Lcom/android/internal/telephony/Connection$PostDialState;

    move-result-object v4

    sget-object v5, Lcom/android/internal/telephony/Connection$PostDialState;->WAIT:Lcom/android/internal/telephony/Connection$PostDialState;

    if-ne v4, v5, :cond_1d

    .line 6428
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->cancelPostDial()V

    goto :goto_8

    .line 6419
    :cond_1e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFgCallConnections()Ljava/util/List;

    move-result-object v1

    .line 6420
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFgPhone()Lcom/android/internal/telephony/Phone;

    move-result-object v0

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v0

    goto :goto_7

    .line 6431
    :cond_1f
    if-eqz v0, :cond_10

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getPostDialState()Lcom/android/internal/telephony/Connection$PostDialState;

    move-result-object v1

    sget-object v4, Lcom/android/internal/telephony/Connection$PostDialState;->WAIT:Lcom/android/internal/telephony/Connection$PostDialState;

    if-ne v1, v4, :cond_10

    .line 6434
    const-string v1, "vt_post_dial_feature_support"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_20

    .line 6435
    const-string v1, "show the Wait dialog for CDMA"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6436
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getRemainingPostDialString()Ljava/lang/String;

    move-result-object v1

    .line 6437
    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showWaitPromptDialogCDMA(Lcom/android/internal/telephony/Connection;Ljava/lang/String;)V

    goto/16 :goto_5

    .line 6440
    :cond_20
    const-string v1, "post dial feature not supported"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6441
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->cancelPostDial()V

    goto/16 :goto_5

    .line 6444
    :cond_21
    if-ne v0, v2, :cond_24

    .line 6445
    const-string v0, "kor_cs_vt_network_operator"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_10

    .line 6447
    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_22
    :goto_9
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_10

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/telephony/Connection;

    .line 6448
    if-eqz v0, :cond_22

    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getPostDialState()Lcom/android/internal/telephony/Connection$PostDialState;

    move-result-object v4

    sget-object v5, Lcom/android/internal/telephony/Connection$PostDialState;->WAIT:Lcom/android/internal/telephony/Connection$PostDialState;

    if-ne v4, v5, :cond_22

    .line 6450
    const-string v4, "vt_post_dial_feature_support"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_23

    .line 6451
    const-string v4, "show the Wait dialog for GSM"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6452
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getRemainingPostDialString()Ljava/lang/String;

    move-result-object v4

    .line 6453
    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->showWaitPromptDialog(Lcom/android/internal/telephony/Connection;Ljava/lang/String;)V

    goto :goto_9

    .line 6456
    :cond_23
    const-string v4, "post dial feature not supported"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 6457
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->cancelPostDial()V

    goto :goto_9

    .line 6462
    :cond_24
    if-ne v0, v6, :cond_25

    .line 6463
    const-string v0, "handling PHONE_TYPE_SIP to avoid fatal exception, should not come here"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_5

    .line 6465
    :cond_25
    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unexpected phone type: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6488
    :cond_26
    :try_start_3
    iget-object v4, v3, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    invoke-virtual {v4}, Lcom/samsung/android/sdk/cover/ScoverManager;->getCoverState()Lcom/samsung/android/sdk/cover/ScoverState;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/sdk/cover/ScoverState;->getType()I

    move-result v4

    if-eq v4, v2, :cond_27

    iget-object v2, v3, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    invoke-virtual {v2}, Lcom/samsung/android/sdk/cover/ScoverManager;->getCoverState()Lcom/samsung/android/sdk/cover/ScoverState;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/sdk/cover/ScoverState;->getType()I

    move-result v2

    if-ne v2, v6, :cond_14

    .line 6490
    :cond_27
    const-string v2, "CoverClosed"

    const/4 v3, 0x1

    invoke-direct {p0, v2, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 6491
    const/4 v2, 0x1

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->setRequestedOrientation(I)V

    .line 6493
    if-eqz v1, :cond_28

    .line 6494
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 6495
    :cond_28
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v1, v2, v3}, Lcom/android/phone/CallCardCoveredDialog;->showDialog(Landroid/content/Context;Lcom/android/phone/InCallScreen;)V

    .line 6496
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v1, v2}, Lcom/android/phone/CallCardCoveredDialog;->updateState(Lcom/android/internal/telephony/CallManager;)V

    .line 6497
    if-eqz v0, :cond_14

    .line 6498
    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/FrameLayout;->setVisibility(I)V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_1

    goto/16 :goto_6

    .line 6500
    :catch_1
    move-exception v0

    .line 6501
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V

    goto/16 :goto_6
.end method

.method private updateSelectedImageFromGallery()V
    .locals 6

    .prologue
    const/4 v5, 0x0

    .line 1793
    sget-object v2, Lcom/android/phone/InVTCallScreen;->mImageSelectedFromGalary:Landroid/graphics/Bitmap;

    if-nez v2, :cond_0

    .line 1812
    :goto_0
    return-void

    .line 1797
    :cond_0
    :try_start_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    const-string v3, "during_vt_photo.jpg"

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/Context;->openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;

    move-result-object v1

    .line 1798
    .local v1, fos:Ljava/io/FileOutputStream;
    sget-object v2, Lcom/android/phone/InVTCallScreen;->mImageSelectedFromGalary:Landroid/graphics/Bitmap;

    sget-object v3, Landroid/graphics/Bitmap$CompressFormat;->JPEG:Landroid/graphics/Bitmap$CompressFormat;

    const/16 v4, 0x4b

    invoke-virtual {v2, v3, v4, v1}, Landroid/graphics/Bitmap;->compress(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z

    .line 1799
    invoke-virtual {v1}, Ljava/io/FileOutputStream;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 1804
    .end local v1           #fos:Ljava/io/FileOutputStream;
    :goto_1
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    .line 1805
    iput-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    .line 1806
    iput-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageSelectedFromOption:Z

    .line 1807
    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 1808
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 1809
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 1810
    const-string v2, "data/data/com.android.phone/files/during_vt_photo.jpg"

    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    .line 1811
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    goto :goto_0

    .line 1800
    :catch_0
    move-exception v0

    .line 1801
    .local v0, e:Ljava/io/IOException;
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1
.end method

.method private updateSelectedVideoFromGallery()V
    .locals 7

    .prologue
    const/4 v3, 0x0

    const/4 v6, 0x0

    .line 1759
    const-string v0, "Response from MediaStore"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1760
    sget-object v0, Lcom/android/phone/InVTCallScreen;->mVideoSelectedFromGalary:Landroid/net/Uri;

    if-eqz v0, :cond_2

    sget-object v0, Lcom/android/phone/InVTCallScreen;->mVideoSelectedFromGalary:Landroid/net/Uri;

    invoke-virtual {v0}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v0

    if-lez v0, :cond_2

    .line 1763
    const-string v0, "Response from MediaStore  VTPM_VIDEO_REQ"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1765
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    sget-object v1, Lcom/android/phone/InVTCallScreen;->mVideoSelectedFromGalary:Landroid/net/Uri;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->VideoProj:[Ljava/lang/String;

    move-object v4, v3

    move-object v5, v3

    invoke-virtual/range {v0 .. v5}, Landroid/content/ContentResolver;->query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    .line 1769
    if-eqz v0, :cond_1

    .line 1770
    invoke-interface {v0}, Landroid/database/Cursor;->getCount()I

    move-result v1

    if-lez v1, :cond_0

    .line 1771
    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    .line 1772
    const-string v1, "_data"

    invoke-interface {v0, v1}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v1

    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    .line 1774
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Value of video filepath  VTPM_VIDEO_REQ"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1776
    iput-boolean v6, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    .line 1777
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    .line 1778
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 1779
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->showVideo(Ljava/lang/String;)V

    .line 1781
    :cond_0
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 1783
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v6}, Landroid/view/TextureView;->setVisibility(I)V

    .line 1790
    :goto_0
    return-void

    .line 1786
    :cond_2
    const v0, 0x7f0903ea

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->displayToast(I)V

    .line 1787
    const-string v0, "mVideoSelectedFromGalary is null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method private updateStartRecordingUI()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 11917
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setIsFarEndRecord(Z)V

    .line 11919
    const-string v0, "In startRecordingFarEndView"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 11920
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 11921
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11922
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 11923
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 11930
    :goto_0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1

    .line 11931
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 11932
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setVisibility(I)V

    .line 11933
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 11935
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setEnabled(Z)V

    .line 11938
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 11939
    return-void

    .line 11925
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11926
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 11927
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setVisibility(I)V

    goto :goto_0
.end method

.method private updateStartRecordingUIForNearEnd()V
    .locals 3

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 11970
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean v1, v0, Lcom/android/phone/InVTCallState;->isNearEndRecord:Z

    .line 11971
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v0, v1}, Lcom/android/phone/InCSVTCallMenu;->setDisableOutGoingMenu(Z)V

    .line 11972
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 11973
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11974
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 11975
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 11982
    :goto_0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_3

    .line 11983
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 11984
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setVisibility(I)V

    .line 11985
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 11987
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 11988
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setEnabled(Z)V

    .line 11991
    :cond_1
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsRecordSupport:Z

    if-nez v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    if-eqz v0, :cond_2

    .line 11992
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11993
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setVisibility(I)V

    .line 11996
    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->invalidateOptionsMenu()V

    .line 11999
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 12000
    return-void

    .line 11977
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11978
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 11979
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    goto :goto_0
.end method

.method private updateStopRecordingUI()V
    .locals 7

    .prologue
    const-wide/16 v5, 0x0

    const/4 v1, 0x4

    const/4 v4, 0x1

    const/4 v3, 0x0

    const/16 v2, 0x8

    .line 11942
    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->setIsFarEndRecord(Z)V

    .line 11943
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 11944
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 11945
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11946
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0}, Landroid/widget/TextView;->clearComposingText()V

    .line 11947
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-direct {p0, v5, v6}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 11948
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 11949
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11950
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 11951
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0}, Landroid/widget/TextView;->clearComposingText()V

    .line 11952
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-direct {p0, v5, v6}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 11954
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1

    .line 11955
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 11956
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 11960
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v4}, Landroid/widget/Button;->setEnabled(Z)V

    .line 11962
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 11963
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v4}, Landroid/widget/Button;->setEnabled(Z)V

    .line 11966
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 11967
    return-void
.end method

.method private updateStopRecordingUIForNearEnd()V
    .locals 7

    .prologue
    const-wide/16 v5, 0x0

    const/4 v4, 0x4

    const/4 v3, 0x0

    const/16 v2, 0x8

    .line 12003
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean v3, v0, Lcom/android/phone/InVTCallState;->isNearEndRecord:Z

    .line 12004
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v0, v3}, Lcom/android/phone/InCSVTCallMenu;->setDisableOutGoingMenu(Z)V

    .line 12005
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v4}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 12006
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v4}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 12007
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 12008
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 12009
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 12010
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 12011
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0}, Landroid/widget/TextView;->clearComposingText()V

    .line 12012
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0}, Landroid/widget/TextView;->clearComposingText()V

    .line 12013
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-direct {p0, v5, v6}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 12014
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-direct {p0, v5, v6}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 12016
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_3

    .line 12017
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 12018
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 12019
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 12021
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 12022
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 12025
    :cond_1
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsRecordSupport:Z

    if-nez v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_2

    .line 12026
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v4}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 12029
    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->invalidateOptionsMenu()V

    .line 12033
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 12034
    return-void
.end method


# virtual methods
.method protected capture_nearend_view(J)V
    .locals 7
    .parameter "lCurrTime"

    .prologue
    const/16 v6, 0x80

    const/4 v5, 0x1

    const/4 v4, 0x0

    .line 13171
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->checkStorageMemorySpace(Z)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 13172
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 13173
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 13174
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->show_camera()V

    .line 13175
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->imageCaptureAnimation()V

    .line 13176
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v1, v2}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 13177
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v1, v6}, Landroid/os/Handler;->removeMessages(I)V

    .line 13178
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const-wide/16 v2, 0x28a

    invoke-virtual {v1, v6, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 13179
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCaptureImageAnimation:Landroid/graphics/drawable/AnimationDrawable;

    invoke-virtual {v1}, Landroid/graphics/drawable/AnimationDrawable;->start()V

    .line 13180
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mImageCaptureAnimationImageView:Landroid/widget/ImageView;

    invoke-virtual {v1, v4}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 13181
    const-string v1, "In capture_nearend_view method"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13183
    const-string v1, "kor_cs_vt_ui"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 13184
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-direct {p0, v4, v5}, Lcom/android/phone/InVTCallScreen;->GetValidFileName(ZZ)Ljava/lang/String;

    move-result-object v2

    iput-object v2, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    .line 13190
    :goto_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v1, :cond_0

    .line 13191
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 13192
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    .line 13193
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageSelectedFromOption:Z

    .line 13194
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v2, v2, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    invoke-virtual {v1, v2, v4}, Lsiso/vt/VTManager;->CaptureImage(Ljava/lang/String;Z)V

    .line 13195
    iput-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    .line 13196
    new-array v0, v5, [Ljava/lang/String;

    .line 13197
    .local v0, path:[Ljava/lang/String;
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    aput-object v1, v0, v4

    .line 13198
    const/4 v1, 0x0

    new-instance v2, Lcom/android/phone/InVTCallScreen$63;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$63;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-static {p0, v0, v1, v2}, Landroid/media/MediaScannerConnection;->scanFile(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V

    .line 13206
    .end local v0           #path:[Ljava/lang/String;
    :cond_0
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mSuccessToastNotRequired:Z

    .line 13207
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    .line 13211
    :goto_1
    return-void

    .line 13187
    :cond_1
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->GetValidFileName(Z)Ljava/lang/String;

    move-result-object v2

    iput-object v2, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    goto :goto_0

    .line 13209
    :cond_2
    const/16 v1, 0x8

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto :goto_1
.end method

.method protected changeImgSize(I)V
    .locals 4
    .parameter "aType"

    .prologue
    const/16 v3, 0x8

    const/4 v2, 0x0

    .line 12567
    packed-switch p1, :pswitch_data_0

    .line 12598
    :cond_0
    :goto_0
    return-void

    .line 12569
    :pswitch_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_0

    .line 12570
    const-string v0, "This is inside ChangeImage for Caller Image with Small size -- "

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12572
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    invoke-virtual {v0, v3}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 12573
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v2}, Landroid/view/TextureView;->setVisibility(I)V

    .line 12574
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    new-instance v1, Landroid/widget/FrameLayout$LayoutParams;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v2}, Landroid/view/TextureView;->getWidth()I

    move-result v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getHeight()I

    move-result v3

    invoke-direct {v1, v2, v3}, Landroid/widget/FrameLayout$LayoutParams;-><init>(II)V

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    goto :goto_0

    .line 12580
    :pswitch_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_0

    .line 12581
    const-string v0, "This is inside ChangeImage for Caller Image with Large size --"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12582
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_1

    .line 12583
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    invoke-virtual {v0, v3}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 12584
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v2}, Landroid/view/TextureView;->setVisibility(I)V

    .line 12585
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    new-instance v1, Landroid/widget/FrameLayout$LayoutParams;

    const/16 v2, 0x16b

    const/16 v3, 0x110

    invoke-direct {v1, v2, v3}, Landroid/widget/FrameLayout$LayoutParams;-><init>(II)V

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    goto :goto_0

    .line 12588
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->farEndImage:Landroid/widget/ImageView;

    invoke-virtual {v0, v3}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 12589
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v2}, Landroid/view/TextureView;->setVisibility(I)V

    .line 12590
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    new-instance v1, Landroid/widget/FrameLayout$LayoutParams;

    const/16 v2, 0x1b4

    const/16 v3, 0x146

    invoke-direct {v1, v2, v3}, Landroid/widget/FrameLayout$LayoutParams;-><init>(II)V

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    goto :goto_0

    .line 12567
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public checkCameraStartCondition_Security()Z
    .locals 2

    .prologue
    .line 14675
    const-string v1, "persist.sys.camera_lock"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 14676
    .local v0, dev_camera_lock_state:Ljava/lang/String;
    const-string v1, "camera_lock.enabled"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 14677
    const/4 v1, 0x1

    .line 14679
    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0
.end method

.method connectBluetoothAudio(Landroid/bluetooth/BluetoothDevice;)Z
    .locals 3
    .parameter "device"

    .prologue
    .line 9320
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "connectBluetoothAudio()... "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {p1}, Landroid/bluetooth/BluetoothDevice;->getAddress()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9321
    const/4 v0, 0x0

    .line 9322
    .local v0, ret:Z
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v1, :cond_0

    .line 9324
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v1, p1}, Landroid/bluetooth/BluetoothHeadset;->connectAudio(Landroid/bluetooth/BluetoothDevice;)Z

    move-result v0

    .line 9332
    :cond_0
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothConnectionPending:Z

    .line 9333
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    iput-wide v1, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothConnectionRequestTime:J

    .line 9334
    return v0
.end method

.method disconnectBluetoothAudio()V
    .locals 1

    .prologue
    .line 9338
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_0

    const-string v0, "disconnectBluetoothAudio()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9339
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v0, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnected()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 9340
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v0}, Landroid/bluetooth/BluetoothHeadset;->disconnectAudio()Z

    .line 9342
    :cond_1
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothConnectionPending:Z

    .line 9343
    return-void
.end method

.method dismissMenu(Z)V
    .locals 4
    .parameter "dismissImmediate"

    .prologue
    const/16 v3, 0x6f

    .line 9109
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "dismissMenu(immediate = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ")..."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9111
    if-eqz p1, :cond_0

    .line 9112
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->closeOptionsMenu()V

    .line 9118
    :goto_0
    return-void

    .line 9114
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v3}, Landroid/os/Handler;->removeMessages(I)V

    .line 9115
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const-wide/16 v1, 0x3e8

    invoke-virtual {v0, v3, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto :goto_0
.end method

.method public dispatchKeyEvent(Landroid/view/KeyEvent;)Z
    .locals 2
    .parameter "event"

    .prologue
    .line 4179
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v0

    packed-switch v0, :pswitch_data_0

    .line 4195
    :cond_0
    :goto_0
    :pswitch_0
    invoke-super {p0, p1}, Landroid/app/Activity;->dispatchKeyEvent(Landroid/view/KeyEvent;)Z

    move-result v0

    return v0

    .line 4186
    :pswitch_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_0

    .line 4187
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/view/TextureView;->setVisibility(I)V

    goto :goto_0

    .line 4179
    nop

    :pswitch_data_0
    .packed-switch 0x13
        :pswitch_1
        :pswitch_1
        :pswitch_1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)Z
    .locals 3
    .parameter "event"

    .prologue
    const/4 v2, 0x1

    .line 14745
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-eq v0, v2, :cond_0

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_3

    .line 14746
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    if-eqz v0, :cond_1

    .line 14747
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTStatusText:Landroid/widget/TextView;

    invoke-direct {p0, p1, v0}, Lcom/android/phone/InVTCallScreen;->dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;Landroid/view/View;)V

    .line 14750
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    if-eqz v0, :cond_2

    .line 14751
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerName:Landroid/widget/TextView;

    invoke-direct {p0, p1, v0}, Lcom/android/phone/InVTCallScreen;->dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;Landroid/view/View;)V

    .line 14754
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    if-eqz v0, :cond_3

    .line 14755
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerNumber:Landroid/widget/TextView;

    invoke-direct {p0, p1, v0}, Lcom/android/phone/InVTCallScreen;->dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;Landroid/view/View;)V

    .line 14758
    :cond_3
    return v2
.end method

.method public dispatchTouchEvent(Landroid/view/MotionEvent;)Z
    .locals 22
    .parameter "event"

    .prologue
    .line 4202
    const-string v20, "support_vtincomingcall_penwindow"

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v20

    if-nez v20, :cond_0

    const-string v20, "support_kk_vt_tablet_multiwindow"

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v20

    if-eqz v20, :cond_1c

    .line 4203
    :cond_0
    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v3

    .line 4205
    .local v3, action:I
    const-string v20, "feature_chn_duos"

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v20

    if-eqz v20, :cond_1

    .line 4206
    invoke-virtual/range {p0 .. p0}, Lcom/android/phone/InVTCallScreen;->getActionBar()Landroid/app/ActionBar;

    move-result-object v4

    .line 4207
    .local v4, actionBar:Landroid/app/ActionBar;
    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getRawY()F

    move-result v7

    .line 4208
    .local v7, focusY:F
    if-eqz v4, :cond_1

    invoke-virtual {v4}, Landroid/app/ActionBar;->isShowing()Z

    move-result v20

    if-eqz v20, :cond_1

    .line 4209
    invoke-virtual {v4}, Landroid/app/ActionBar;->getHeight()I

    move-result v20

    add-int/lit8 v20, v20, 0xa

    move/from16 v0, v20

    int-to-float v0, v0

    move/from16 v20, v0

    cmpg-float v20, v7, v20

    if-gez v20, :cond_1

    .line 4210
    invoke-super/range {p0 .. p1}, Landroid/app/Activity;->dispatchTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    .line 4364
    .end local v3           #action:I
    .end local v4           #actionBar:Landroid/app/ActionBar;
    .end local v7           #focusY:F
    :goto_0
    return v20

    .line 4215
    .restart local v3       #action:I
    :cond_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    move-object/from16 v20, v0

    invoke-interface/range {v20 .. v20}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v20

    sget-object v21, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    move-object/from16 v0, v20

    move-object/from16 v1, v21

    if-ne v0, v1, :cond_1c

    invoke-virtual/range {p0 .. p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v20

    if-nez v20, :cond_2

    const-string v20, "support_kk_vt_tablet_multiwindow"

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v20

    if-eqz v20, :cond_1c

    .line 4218
    :cond_2
    const/4 v10, 0x0

    .line 4222
    .local v10, isConsumed:Z
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    move-object/from16 v20, v0

    if-nez v20, :cond_3

    .line 4223
    invoke-super/range {p0 .. p1}, Landroid/app/Activity;->dispatchTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    goto :goto_0

    .line 4225
    :cond_3
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    move-object/from16 v20, v0

    invoke-virtual/range {v20 .. v20}, Landroid/widget/SlidingDrawer;->isOpened()Z

    move-result v20

    if-eqz v20, :cond_4

    .line 4226
    invoke-super/range {p0 .. p1}, Landroid/app/Activity;->dispatchTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    goto :goto_0

    .line 4229
    :cond_4
    const-string v20, "enhanced_driving_mode"

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v20

    if-eqz v20, :cond_5

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    move-object/from16 v20, v0

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneUtilsCommon;->isDrivingModeOn(Landroid/content/Context;)Z

    move-result v20

    if-eqz v20, :cond_5

    .line 4231
    invoke-super/range {p0 .. p1}, Landroid/app/Activity;->dispatchTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    goto :goto_0

    .line 4234
    :cond_5
    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getX()F

    move-result v18

    .line 4235
    .local v18, x:F
    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getY()F

    move-result v19

    .line 4238
    .local v19, y:F
    const/16 v20, 0x2

    move/from16 v0, v20

    new-array v0, v0, [I

    move-object/from16 v16, v0

    .line 4239
    .local v16, widgetPos:[I
    const/16 v20, 0x2

    move/from16 v0, v20

    new-array v6, v0, [I

    .line 4241
    .local v6, drawerPos:[I
    new-instance v15, Landroid/graphics/Rect;

    invoke-direct {v15}, Landroid/graphics/Rect;-><init>()V

    .line 4243
    .local v15, tempRect:Landroid/graphics/Rect;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/phone/IncomingCallWidget;->getLocationOnScreen([I)V

    .line 4244
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    invoke-virtual {v0, v6}, Landroid/widget/SlidingDrawer;->getLocationOnScreen([I)V

    .line 4246
    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "Pointer Count: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getPointerCount()I

    move-result v21

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, ", Dispatch Touch Action: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    move-object/from16 v0, p0

    move-object/from16 v1, v20

    invoke-direct {v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4248
    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getActionIndex()I

    move-result v9

    .line 4249
    .local v9, index:I
    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getX(I)F

    move-result v12

    .line 4250
    .local v12, mFocusX:F
    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getY(I)F

    move-result v13

    .line 4252
    .local v13, mFocusY:F
    invoke-static/range {p1 .. p1}, Landroid/view/MotionEvent;->obtain(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;

    move-result-object v5

    .line 4254
    .local v5, backupMotionEvent:Landroid/view/MotionEvent;
    invoke-virtual/range {p0 .. p0}, Lcom/android/phone/InVTCallScreen;->getWindowMode()I

    move-result v17

    .line 4255
    .local v17, windowMode:I
    invoke-virtual/range {p0 .. p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;

    move-result-object v11

    .line 4256
    .local v11, lp:Landroid/view/WindowManager$LayoutParams;
    move/from16 v0, v17

    and-int/lit16 v0, v0, 0x800

    move/from16 v20, v0

    if-nez v20, :cond_6

    const-string v20, "support_kk_vt_tablet_multiwindow"

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v20

    if-eqz v20, :cond_7

    .line 4264
    :cond_6
    invoke-virtual/range {p0 .. p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v20

    if-eqz v20, :cond_e

    .line 4265
    const/16 v20, 0x1

    aget v21, v16, v20

    add-int/lit8 v21, v21, -0x28

    aput v21, v16, v20

    .line 4272
    :cond_7
    :goto_1
    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "X: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, ", Y: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, ", INDEX: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, ", FocusX: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, ", FocusY: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    move-object/from16 v0, p0

    move-object/from16 v1, v20

    invoke-direct {v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4274
    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getActionMasked()I

    move-result v14

    .line 4275
    .local v14, maskedAction:I
    if-eqz v14, :cond_8

    const/16 v20, 0x5

    move/from16 v0, v20

    if-ne v14, v0, :cond_11

    .line 4278
    :cond_8
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    invoke-virtual {v0, v15}, Lcom/android/phone/IncomingCallWidget;->getHitRect(Landroid/graphics/Rect;)V

    .line 4279
    float-to-int v0, v12

    move/from16 v20, v0

    float-to-int v0, v13

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    invoke-virtual {v15, v0, v1}, Landroid/graphics/Rect;->contains(II)Z

    move-result v20

    if-nez v20, :cond_9

    if-nez v3, :cond_a

    :cond_9
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    move/from16 v20, v0

    const/16 v21, -0x1

    move/from16 v0, v20

    move/from16 v1, v21

    if-eq v0, v1, :cond_f

    .line 4294
    :cond_a
    :goto_2
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    invoke-virtual {v0, v15}, Landroid/widget/SlidingDrawer;->getHitRect(Landroid/graphics/Rect;)V

    .line 4295
    float-to-int v0, v12

    move/from16 v20, v0

    float-to-int v0, v13

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    invoke-virtual {v15, v0, v1}, Landroid/graphics/Rect;->contains(II)Z

    move-result v20

    if-nez v20, :cond_b

    if-nez v3, :cond_c

    :cond_b
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    move/from16 v20, v0

    const/16 v21, -0x1

    move/from16 v0, v20

    move/from16 v1, v21

    if-eq v0, v1, :cond_10

    .line 4349
    :cond_c
    :goto_3
    const/16 v20, 0x1

    move/from16 v0, v20

    if-ne v10, v0, :cond_19

    .line 4350
    if-eqz v5, :cond_d

    .line 4351
    invoke-virtual {v5}, Landroid/view/MotionEvent;->recycle()V

    .line 4353
    :cond_d
    const/16 v20, 0x1

    goto/16 :goto_0

    .line 4268
    .end local v14           #maskedAction:I
    :cond_e
    const/16 v20, 0x0

    aget v21, v16, v20

    move/from16 v0, v21

    add-int/lit16 v0, v0, -0x200

    move/from16 v21, v0

    aput v21, v16, v20

    .line 4269
    const/16 v20, 0x1

    aget v21, v16, v20

    move/from16 v0, v21

    add-int/lit16 v0, v0, -0x168

    move/from16 v21, v0

    aput v21, v16, v20

    goto/16 :goto_1

    .line 4281
    .restart local v14       #maskedAction:I
    :cond_f
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    move/from16 v20, v0

    const/16 v21, -0x1

    move/from16 v0, v20

    move/from16 v1, v21

    if-ne v0, v1, :cond_a

    .line 4284
    const/16 v20, 0x0

    aget v20, v16, v20

    move/from16 v0, v20

    int-to-float v0, v0

    move/from16 v20, v0

    sub-float v20, v12, v20

    const/16 v21, 0x1

    aget v21, v16, v21

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    sub-float v21, v13, v21

    move-object/from16 v0, p1

    move/from16 v1, v20

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Landroid/view/MotionEvent;->setLocation(FF)V

    .line 4285
    const/16 v20, 0x0

    move-object/from16 v0, p1

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/view/MotionEvent;->setAction(I)V

    .line 4287
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/phone/IncomingCallWidget;->onInterceptTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    if-eqz v20, :cond_a

    .line 4288
    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v20

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    .line 4289
    const/16 v20, -0x1

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    .line 4290
    const/4 v10, 0x1

    goto/16 :goto_2

    .line 4297
    :cond_10
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    move/from16 v20, v0

    const/16 v21, -0x1

    move/from16 v0, v20

    move/from16 v1, v21

    if-ne v0, v1, :cond_c

    .line 4300
    const/16 v20, 0x0

    aget v20, v6, v20

    move/from16 v0, v20

    int-to-float v0, v0

    move/from16 v20, v0

    sub-float v20, v12, v20

    const/16 v21, 0x1

    aget v21, v6, v21

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    sub-float v21, v13, v21

    move-object/from16 v0, p1

    move/from16 v1, v20

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Landroid/view/MotionEvent;->setLocation(FF)V

    .line 4301
    const/16 v20, 0x0

    move-object/from16 v0, p1

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/view/MotionEvent;->setAction(I)V

    .line 4303
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Landroid/widget/SlidingDrawer;->onInterceptTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    if-eqz v20, :cond_c

    .line 4304
    const/16 v20, -0x1

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    .line 4305
    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v20

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    .line 4306
    const/4 v10, 0x1

    goto/16 :goto_3

    .line 4309
    :cond_11
    const/16 v20, 0x2

    move/from16 v0, v20

    if-ne v3, v0, :cond_14

    .line 4310
    const/4 v8, 0x0

    .local v8, i:I
    :goto_4
    invoke-virtual/range {p1 .. p1}, Landroid/view/MotionEvent;->getPointerCount()I

    move-result v20

    move/from16 v0, v20

    if-ge v8, v0, :cond_c

    .line 4311
    move-object/from16 v0, p1

    invoke-virtual {v0, v8}, Landroid/view/MotionEvent;->getX(I)F

    move-result v12

    .line 4312
    move-object/from16 v0, p1

    invoke-virtual {v0, v8}, Landroid/view/MotionEvent;->getY(I)F

    move-result v13

    .line 4313
    move-object/from16 v0, p1

    invoke-virtual {v0, v8}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v20

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    if-ne v0, v1, :cond_12

    .line 4314
    const/16 v20, 0x0

    aget v20, v16, v20

    move/from16 v0, v20

    int-to-float v0, v0

    move/from16 v20, v0

    sub-float v20, v12, v20

    const/16 v21, 0x1

    aget v21, v16, v21

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    sub-float v21, v13, v21

    move-object/from16 v0, p1

    move/from16 v1, v20

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Landroid/view/MotionEvent;->setLocation(FF)V

    .line 4315
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/phone/IncomingCallWidget;->onTouchEvent(Landroid/view/MotionEvent;)Z

    .line 4316
    const/4 v10, 0x1

    .line 4318
    :cond_12
    move-object/from16 v0, p1

    invoke-virtual {v0, v8}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v20

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    if-ne v0, v1, :cond_13

    .line 4319
    const/16 v20, 0x0

    aget v20, v6, v20

    move/from16 v0, v20

    int-to-float v0, v0

    move/from16 v20, v0

    sub-float v20, v12, v20

    const/16 v21, 0x1

    aget v21, v6, v21

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    sub-float v21, v13, v21

    move-object/from16 v0, p1

    move/from16 v1, v20

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Landroid/view/MotionEvent;->setLocation(FF)V

    .line 4320
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Landroid/widget/SlidingDrawer;->onTouchEvent(Landroid/view/MotionEvent;)Z

    .line 4321
    const/4 v10, 0x1

    .line 4310
    :cond_13
    add-int/lit8 v8, v8, 0x1

    goto/16 :goto_4

    .line 4324
    .end local v8           #i:I
    :cond_14
    const/16 v20, 0x1

    move/from16 v0, v20

    if-eq v14, v0, :cond_15

    const/16 v20, 0x6

    move/from16 v0, v20

    if-ne v14, v0, :cond_c

    .line 4325
    :cond_15
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    move/from16 v20, v0

    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v21

    move/from16 v0, v20

    move/from16 v1, v21

    if-eq v0, v1, :cond_18

    const/16 v20, 0x1

    move/from16 v0, v20

    if-eq v3, v0, :cond_18

    .line 4337
    :cond_16
    :goto_5
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    move/from16 v20, v0

    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v21

    move/from16 v0, v20

    move/from16 v1, v21

    if-eq v0, v1, :cond_17

    const/16 v20, 0x1

    move/from16 v0, v20

    if-ne v3, v0, :cond_c

    .line 4339
    :cond_17
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    move/from16 v20, v0

    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v21

    move/from16 v0, v20

    move/from16 v1, v21

    if-eq v0, v1, :cond_c

    .line 4342
    const/16 v20, -0x1

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    .line 4343
    const/16 v20, 0x0

    aget v20, v6, v20

    move/from16 v0, v20

    int-to-float v0, v0

    move/from16 v20, v0

    sub-float v20, v12, v20

    const/16 v21, 0x1

    aget v21, v6, v21

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    sub-float v21, v13, v21

    move-object/from16 v0, p1

    move/from16 v1, v20

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Landroid/view/MotionEvent;->setLocation(FF)V

    .line 4344
    const/16 v20, 0x1

    move-object/from16 v0, p1

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/view/MotionEvent;->setAction(I)V

    .line 4345
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Landroid/widget/SlidingDrawer;->onTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    if-eqz v20, :cond_c

    .line 4346
    const/4 v10, 0x1

    goto/16 :goto_3

    .line 4327
    :cond_18
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/phone/InVTCallScreen;->mSlidingDrawerTouchID:I

    move/from16 v20, v0

    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Landroid/view/MotionEvent;->getPointerId(I)I

    move-result v21

    move/from16 v0, v20

    move/from16 v1, v21

    if-eq v0, v1, :cond_16

    .line 4330
    const/16 v20, -0x1

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/phone/InVTCallScreen;->mSlidingTabTouchID:I

    .line 4331
    const/16 v20, 0x0

    aget v20, v16, v20

    move/from16 v0, v20

    int-to-float v0, v0

    move/from16 v20, v0

    sub-float v20, v12, v20

    const/16 v21, 0x1

    aget v21, v16, v21

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    sub-float v21, v13, v21

    move-object/from16 v0, p1

    move/from16 v1, v20

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Landroid/view/MotionEvent;->setLocation(FF)V

    .line 4332
    const/16 v20, 0x1

    move-object/from16 v0, p1

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/view/MotionEvent;->setAction(I)V

    .line 4333
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/phone/IncomingCallWidget;->onTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    if-eqz v20, :cond_16

    .line 4334
    const/4 v10, 0x1

    goto/16 :goto_5

    .line 4355
    :cond_19
    move/from16 v0, v17

    and-int/lit16 v0, v0, 0x800

    move/from16 v20, v0

    if-nez v20, :cond_1a

    const-string v20, "support_kk_vt_tablet_multiwindow"

    invoke-static/range {v20 .. v20}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v20

    if-eqz v20, :cond_1b

    .line 4356
    :cond_1a
    move-object/from16 v0, p0

    invoke-super {v0, v5}, Landroid/app/Activity;->dispatchTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    goto/16 :goto_0

    .line 4359
    :cond_1b
    if-eqz v5, :cond_1c

    .line 4360
    invoke-virtual {v5}, Landroid/view/MotionEvent;->recycle()V

    .line 4364
    .end local v3           #action:I
    .end local v5           #backupMotionEvent:Landroid/view/MotionEvent;
    .end local v6           #drawerPos:[I
    .end local v9           #index:I
    .end local v10           #isConsumed:Z
    .end local v11           #lp:Landroid/view/WindowManager$LayoutParams;
    .end local v12           #mFocusX:F
    .end local v13           #mFocusY:F
    .end local v14           #maskedAction:I
    .end local v15           #tempRect:Landroid/graphics/Rect;
    .end local v16           #widgetPos:[I
    .end local v17           #windowMode:I
    .end local v18           #x:F
    .end local v19           #y:F
    :cond_1c
    invoke-super/range {p0 .. p1}, Landroid/app/Activity;->dispatchTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v20

    goto/16 :goto_0
.end method

.method protected enableHideMeState()V
    .locals 9

    .prologue
    const/4 v8, 0x1

    const/4 v7, 0x0

    .line 13759
    iput-boolean v7, p0, Lcom/android/phone/InVTCallScreen;->isCameraStarted:Z

    .line 13760
    iput-boolean v8, p0, Lcom/android/phone/InVTCallScreen;->mSuccessToastNotRequired:Z

    .line 13761
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string v6, "preset_name"

    invoke-static {v5, v6}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 13763
    .local v1, preset_Name:Ljava/lang/String;
    if-eqz v1, :cond_2

    const-string v5, "photo"

    invoke-virtual {v1, v5}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result v5

    if-eqz v5, :cond_0

    const-string v5, "Default"

    invoke-virtual {v1, v5}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result v5

    if-nez v5, :cond_2

    .line 13765
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string v6, "preset_path"

    invoke-static {v5, v6}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 13767
    .local v0, presetImageSrc:Ljava/lang/String;
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "enableHideMeState ::preset_Name is "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13768
    if-eqz v0, :cond_1

    .line 13769
    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    .line 13770
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    .line 13801
    .end local v0           #presetImageSrc:Ljava/lang/String;
    :goto_0
    iput-boolean v7, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    .line 13802
    iput-boolean v7, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    .line 13804
    iput-boolean v8, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageEnabled:Z

    .line 13805
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 13806
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 13807
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v5

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 13808
    return-void

    .line 13772
    .restart local v0       #presetImageSrc:Ljava/lang/String;
    :cond_1
    const-string v5, "data/data/com.android.phone/files/preset_defaultimage.jpg"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    goto :goto_0

    .line 13774
    .end local v0           #presetImageSrc:Ljava/lang/String;
    :cond_2
    if-eqz v1, :cond_9

    const-string v5, "video"

    invoke-virtual {v1, v5}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result v5

    if-nez v5, :cond_9

    .line 13775
    const-string v5, "enableHideMeState ::preset_Name is video"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13777
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string v6, "preset_video_path"

    invoke-static {v5, v6}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 13778
    .local v2, uriString:Ljava/lang/String;
    const/4 v4, 0x0

    .line 13779
    .local v4, videoUri:Landroid/net/Uri;
    const/4 v3, 0x0

    .line 13780
    .local v3, videoPath:Ljava/lang/String;
    if-eqz v2, :cond_3

    .line 13781
    invoke-static {v2}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v4

    .line 13783
    :cond_3
    if-eqz v4, :cond_4

    .line 13784
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->getVideoFileNameFromUri(Landroid/net/Uri;)Ljava/lang/String;

    move-result-object v3

    .line 13786
    :cond_4
    if-eqz v3, :cond_5

    .line 13787
    invoke-virtual {v3}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v5

    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    .line 13788
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->showVideo(Ljava/lang/String;)V

    goto :goto_0

    .line 13790
    :cond_5
    if-nez v2, :cond_6

    const-string v5, "enableHideMeState: uriString is Null,"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13791
    :cond_6
    if-nez v4, :cond_7

    const-string v5, "enableHideMeState: videoUri is Null,"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13792
    :cond_7
    if-nez v3, :cond_8

    const-string v5, "enableHideMeState: videoPath is null,"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13793
    :cond_8
    const-string v5, "enableHideMeState: so setting Default Image"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13794
    const-string v5, "data/data/com.android.phone/files/preset_defaultimage.jpg"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    goto :goto_0

    .line 13797
    .end local v2           #uriString:Ljava/lang/String;
    .end local v3           #videoPath:Ljava/lang/String;
    .end local v4           #videoUri:Landroid/net/Uri;
    :cond_9
    const-string v5, "enableHideMeState ::preset_Name is Null "

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13798
    const-string v5, "data/data/com.android.phone/files/preset_defaultimage.jpg"

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    goto :goto_0
.end method

.method public endInVTCallScreenSession()V
    .locals 4

    .prologue
    const/4 v3, 0x0

    .line 3223
    const-string v1, "endInVTCallScreenSession()..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3225
    const-string v1, "clear_cover"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 3226
    invoke-static {v3}, Lcom/android/phone/PhoneUtilsCommon;->changeCoverLockUI(Z)V

    .line 3229
    :cond_0
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 3231
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_1

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v1, v2, :cond_1

    .line 3232
    const/4 v1, 0x1

    invoke-static {p0, v3, v1}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 3233
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    .line 3234
    .local v0, targetphone:Lcom/android/internal/telephony/Phone;
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->changePhone(Lcom/android/internal/telephony/Phone;)V

    .line 3235
    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/Call$State;->WAITING:Lcom/android/internal/telephony/Call$State;

    if-ne v1, v2, :cond_2

    .line 3236
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/phone/PhoneGlobals;->getNotifier(Lcom/android/internal/telephony/Phone;)Lcom/android/phone/CallNotifier;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/phone/CallNotifier;->duosPlayWaitingTone()V

    .line 3244
    .end local v0           #targetphone:Lcom/android/internal/telephony/Phone;
    :cond_1
    :goto_0
    sput-boolean v3, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    .line 3245
    sget-object v1, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->UNDEFINED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    .line 3246
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->finish()V

    .line 3248
    return-void

    .line 3237
    .restart local v0       #targetphone:Lcom/android/internal/telephony/Phone;
    :cond_2
    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    sget-object v2, Lcom/android/internal/telephony/Call$State;->INCOMING:Lcom/android/internal/telephony/Call$State;

    if-ne v1, v2, :cond_1

    .line 3238
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/phone/PhoneGlobals;->getNotifier(Lcom/android/internal/telephony/Phone;)Lcom/android/phone/CallNotifier;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/phone/CallNotifier;->isSilenceRequested()Z

    move-result v1

    if-nez v1, :cond_1

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/phone/PhoneGlobals;->getRinger(Lcom/android/internal/telephony/Phone;)Lcom/android/phone/Ringer;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/phone/Ringer;->isRinging()Z

    move-result v1

    if-nez v1, :cond_1

    .line 3240
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/phone/PhoneGlobals;->getRinger(Lcom/android/internal/telephony/Phone;)Lcom/android/phone/Ringer;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/phone/Ringer;->ring()V

    goto :goto_0
.end method

.method fallbackHangupVTRingingCall()V
    .locals 1

    .prologue
    .line 8811
    const-string v0, "hangupVTRingingCall()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8812
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->fallbackHangupVTRingingCall(Lcom/android/internal/telephony/Phone;)Z

    .line 8813
    return-void
.end method

.method public finish()V
    .locals 2

    .prologue
    const/4 v1, 0x1

    .line 3177
    const-string v0, "finish()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3178
    const/4 v0, 0x0

    sput-boolean v0, Lcom/android/phone/InVTCallScreen;->mHomePressed:Z

    .line 3189
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    if-eqz v0, :cond_0

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->phoneIsInUse()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3190
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->moveTaskToBack(Z)Z

    .line 3196
    :goto_0
    return-void

    .line 3191
    :cond_0
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->phoneIsInUse()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_1

    .line 3192
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->moveTaskToBack(Z)Z

    goto :goto_0

    .line 3194
    :cond_1
    invoke-super {p0}, Landroid/app/Activity;->finish()V

    goto :goto_0
.end method

.method public finishAffinity()V
    .locals 1

    .prologue
    .line 3201
    const-string v0, "finishAffinity()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3210
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->phoneIsInUse()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3211
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->moveTaskToBack(Z)Z

    .line 3215
    :goto_0
    return-void

    .line 3213
    :cond_0
    invoke-super {p0}, Landroid/app/Activity;->finishAffinity()V

    goto :goto_0
.end method

.method getConnectedBluetoothDevices()Ljava/util/List;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/bluetooth/BluetoothDevice;",
            ">;"
        }
    .end annotation

    .prologue
    .line 9346
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v1, :cond_0

    .line 9347
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v1}, Landroid/bluetooth/BluetoothHeadset;->getConnectedDevices()Ljava/util/List;

    move-result-object v0

    .line 9351
    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method protected getDialer()Lcom/android/phone/DTMFTwelveKeyDialerForVT;
    .locals 1

    .prologue
    .line 15106
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    return-object v0
.end method

.method protected getNearEndPressed()Z
    .locals 1

    .prologue
    .line 15175
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->nearend_pressed:Z

    return v0
.end method

.method public getNetworkType()V
    .locals 2

    .prologue
    .line 5257
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getServiceState()Landroid/telephony/ServiceState;

    move-result-object v1

    invoke-virtual {v1}, Landroid/telephony/ServiceState;->getRilVoiceRadioTechnology()I

    move-result v0

    .line 5258
    .local v0, radiotech:I
    packed-switch v0, :pswitch_data_0

    .line 5303
    const-string v1, "GetNetworkType :NETWORK_TYPE_UNKNOWN"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 5307
    :goto_0
    return-void

    .line 5260
    :pswitch_0
    const-string v1, "GetNetworkType :NETWORK_TYPE_GPRS"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5264
    :pswitch_1
    const-string v1, "GetNetworkType :NETWORK_TYPE_EDGE"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5268
    :pswitch_2
    const-string v1, "GetNetworkType :NETWORK_TYPE_UMTS"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5272
    :pswitch_3
    const-string v1, "GetNetworkType :NETWORK_TYPE_HSDPA"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5276
    :pswitch_4
    const-string v1, "GetNetworkType :NETWORK_TYPE_HSUPA"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5280
    :pswitch_5
    const-string v1, "GetNetworkType :NETWORK_TYPE_HSPA"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5284
    :pswitch_6
    const-string v1, "GetNetworkType :RADIO_TECHNOLOGY_IS95A"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5287
    :pswitch_7
    const-string v1, "GetNetworkType :NETWORK_TYPE_CDMA"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5291
    :pswitch_8
    const-string v1, "GetNetworkType :NETWORK_TYPE_1xRTT"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5295
    :pswitch_9
    const-string v1, "GetNetworkType :NETWORK_TYPE_EVDO_0"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5299
    :pswitch_a
    const-string v1, "GetNetworkType :NETWORK_TYPE_EVDO_A"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 5258
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_6
        :pswitch_7
        :pswitch_8
        :pswitch_9
        :pswitch_a
        :pswitch_3
        :pswitch_4
        :pswitch_5
    .end packed-switch
.end method

.method public getPhone()Lcom/android/internal/telephony/Phone;
    .locals 1

    .prologue
    .line 15599
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    return-object v0
.end method

.method protected getPreviewEffectUI()Lcom/android/phone/PreviewEffectUI;
    .locals 1

    .prologue
    .line 15102
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    return-object v0
.end method

.method public getSystemOneHandSwitchStateSettingValue()I
    .locals 3

    .prologue
    .line 15458
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "onehand_switch_state"

    const/4 v2, 0x3

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    return v0
.end method

.method protected getTestCloseCheck()Z
    .locals 1

    .prologue
    .line 15135
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mTestCloseCheck:Z

    return v0
.end method

.method protected getVTCallType()I
    .locals 1

    .prologue
    .line 15098
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    return v0
.end method

.method protected getVTManager()Lsiso/vt/VTManager;
    .locals 1

    .prologue
    .line 15094
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    return-object v0
.end method

.method handleOnscreenButtonClick(I)V
    .locals 3
    .parameter "id"

    .prologue
    .line 7941
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "handleOnscreenButtonClick(id "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ")..."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7943
    sparse-switch p1, :sswitch_data_0

    .line 7995
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "handleOnscreenButtonClick: unexpected ID "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8013
    :goto_0
    :sswitch_0
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateInCallTouchUi()V

    .line 8014
    return-void

    .line 7951
    :sswitch_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalAnswerCall()V

    goto :goto_0

    .line 7954
    :sswitch_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->hangupRingingCall()V

    goto :goto_0

    .line 7957
    :sswitch_3
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->internalRespondViaSms()V

    goto :goto_0

    .line 7966
    :sswitch_4
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopVTCall()V

    .line 7967
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalHangup()V

    goto :goto_0

    .line 7970
    :sswitch_5
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onShowHideDialpad()V

    goto :goto_0

    .line 7973
    :sswitch_6
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onMuteClick()V

    goto :goto_0

    .line 7976
    :sswitch_7
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7977
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->startNewCall(Lcom/android/internal/telephony/Phone;)Z

    goto :goto_0

    .line 7979
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->startNewCall(Lcom/android/internal/telephony/CallManager;)Z

    goto :goto_0

    .line 7984
    :sswitch_8
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->mergeCalls(Lcom/android/internal/telephony/CallManager;)V

    .line 7985
    const-string v0, "Merged"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->startToast(Ljava/lang/String;)V

    goto :goto_0

    .line 7943
    nop

    :sswitch_data_0
    .sparse-switch
        0x7f0a0009 -> :sswitch_1
        0x7f0a000a -> :sswitch_2
        0x7f0a000b -> :sswitch_3
        0x7f0a009e -> :sswitch_6
        0x7f0a01c7 -> :sswitch_7
        0x7f0a01c9 -> :sswitch_8
        0x7f0a01cd -> :sswitch_5
        0x7f0a01ce -> :sswitch_4
        0x7f0a01d7 -> :sswitch_0
        0x7f0a01d9 -> :sswitch_0
    .end sparse-switch
.end method

.method protected handlingSwitchCameraButton()V
    .locals 4

    .prologue
    const/4 v3, 0x0

    const/4 v2, 0x4

    .line 14792
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_0

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-eq v0, v1, :cond_1

    .line 14843
    :cond_0
    :goto_0
    return-void

    .line 14796
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 14800
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v0

    if-nez v0, :cond_8

    .line 14801
    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v0

    if-nez v0, :cond_6

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-nez v0, :cond_6

    .line 14802
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingEffectLayout()Z

    move-result v0

    if-nez v0, :cond_4

    .line 14804
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 14805
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14806
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14807
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_3

    .line 14808
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 14809
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    goto :goto_0

    .line 14813
    :cond_4
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 14814
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14815
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 14816
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14817
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_5

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_5

    .line 14818
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 14819
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    goto :goto_0

    .line 14824
    :cond_6
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14825
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14826
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14827
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_7

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_7

    .line 14828
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 14829
    :cond_7
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_0

    .line 14833
    :cond_8
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v0

    if-nez v0, :cond_0

    .line 14835
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14836
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14837
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 14838
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_9

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_9

    .line 14839
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14840
    :cond_9
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_0
.end method

.method hangupRingingCall()V
    .locals 1

    .prologue
    .line 8729
    const-string v0, "hangupRingingCall()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8730
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_0

    invoke-static {}, Lcom/android/phone/PhoneUtils;->dumpCallManager()V

    .line 8733
    :cond_0
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 8734
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangupRingingCall(Lcom/android/internal/telephony/Call;)Z

    .line 8738
    :goto_0
    return-void

    .line 8736
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangupRingingCall(Lcom/android/internal/telephony/Call;)Z

    goto :goto_0
.end method

.method protected hideDTMFDialpad()V
    .locals 8

    .prologue
    const/4 v1, 0x1

    const/4 v7, 0x4

    const/4 v2, 0x0

    .line 14340
    const-string v0, "Dialer Pad Already open"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14342
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean v2, v0, Lcom/android/phone/InVTCallState;->showDialpad:Z

    .line 14343
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDTMFDialerLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v7}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14344
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14346
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingEffectLayout()Z

    move-result v0

    if-nez v0, :cond_7

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_7

    const-string v0, "vt_white_theme"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_7

    .line 14347
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainBackgroundToNormal()V

    .line 14353
    :cond_0
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v7}, Landroid/widget/Button;->setVisibility(I)V

    .line 14354
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 14355
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14356
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_2

    .line 14357
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v2}, Landroid/widget/Button;->setVisibility(I)V

    .line 14361
    :cond_2
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_5

    .line 14362
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isDialpadSurfaceViewSwipe:Z

    if-eqz v0, :cond_4

    .line 14363
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isDialpadSurfaceViewSwipe:Z

    .line 14364
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-nez v0, :cond_8

    move v0, v1

    :goto_1
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setIsSurfaceViewSwipe(Z)V

    .line 14366
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v0

    if-eqz v0, :cond_9

    .line 14367
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v7}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14368
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v7}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 14369
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0, v7}, Landroid/widget/TextView;->setVisibility(I)V

    .line 14371
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v3

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v5, v5, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v5, v5, Lcom/android/phone/InVTCallState;->mRecordTimeFarEnd:J

    sub-long/2addr v3, v5

    invoke-direct {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 14373
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14374
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    .line 14375
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 14388
    :cond_3
    :goto_2
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->swipeSurfaceView()V

    .line 14390
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v7}, Landroid/view/TextureView;->setVisibility(I)V

    .line 14391
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    const/4 v3, 0x6

    const-wide/16 v4, 0x96

    invoke-virtual {v0, v3, v4, v5}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 14394
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0, v1}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->closeDialer(Z)V

    .line 14395
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0, v2}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->setHandleVisible(Z)V

    .line 14396
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->setVTManagerInstance(Lsiso/vt/VTManager;)V

    .line 14399
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 14400
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 14401
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSimUI()V

    .line 14403
    :cond_6
    return-void

    .line 14348
    :cond_7
    const-string v0, "vt_white_theme"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 14349
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v3, 0x2

    if-ne v0, v3, :cond_0

    .line 14350
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainLandBackgroundToNormal()V

    goto/16 :goto_0

    :cond_8
    move v0, v2

    .line 14364
    goto/16 :goto_1

    .line 14376
    :cond_9
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 14377
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v7}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14378
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordFarEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v7}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 14379
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-virtual {v0, v7}, Landroid/widget/TextView;->setVisibility(I)V

    .line 14381
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v3

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v5, v5, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v5, v5, Lcom/android/phone/InVTCallState;->mRecordTimeNearEnd:J

    sub-long/2addr v3, v5

    invoke-direct {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 14383
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeLayoutNearEnd:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14384
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    invoke-virtual {v0, v2}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 14385
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-virtual {v0, v2}, Landroid/widget/TextView;->setVisibility(I)V

    goto/16 :goto_2
.end method

.method internalAnswerCall()V
    .locals 9

    .prologue
    const/4 v7, 0x0

    const/4 v6, 0x1

    .line 8543
    const-string v8, "feature_chn_duos"

    invoke-static {v8}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_2

    .line 8544
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_1

    move v2, v6

    .line 8549
    .local v2, hasRingingCall:Z
    :goto_0
    if-eqz v2, :cond_0

    .line 8552
    const-string v8, "feature_chn_duos"

    invoke-static {v8}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_3

    .line 8553
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    .line 8554
    .local v3, phone:Lcom/android/internal/telephony/Phone;
    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    .line 8559
    .local v5, ringing:Lcom/android/internal/telephony/Call;
    :goto_1
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v8}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v4

    .line 8560
    .local v4, phoneType:I
    const/4 v8, 0x2

    if-ne v4, v8, :cond_4

    .line 8561
    const-string v6, "internalAnswerCall: answering (CDMA)..."

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8564
    invoke-static {v5}, Lcom/android/phone/PhoneUtils;->answerCall(Lcom/android/internal/telephony/Call;)Z

    .line 8614
    .end local v3           #phone:Lcom/android/internal/telephony/Phone;
    .end local v4           #phoneType:I
    .end local v5           #ringing:Lcom/android/internal/telephony/Call;
    :cond_0
    :goto_2
    return-void

    .end local v2           #hasRingingCall:Z
    :cond_1
    move v2, v7

    .line 8544
    goto :goto_0

    .line 8546
    :cond_2
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v8}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v2

    .restart local v2       #hasRingingCall:Z
    goto :goto_0

    .line 8556
    :cond_3
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v8}, Lcom/android/internal/telephony/CallManager;->getRingingPhone()Lcom/android/internal/telephony/Phone;

    move-result-object v3

    .line 8557
    .restart local v3       #phone:Lcom/android/internal/telephony/Phone;
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v8}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v5

    .restart local v5       #ringing:Lcom/android/internal/telephony/Call;
    goto :goto_1

    .line 8568
    .restart local v4       #phoneType:I
    :cond_4
    if-ne v4, v6, :cond_b

    .line 8583
    const-string v8, "feature_chn_duos"

    invoke-static {v8}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_7

    .line 8584
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_5

    move v0, v6

    .line 8585
    .local v0, hasActiveCall:Z
    :goto_3
    iget-object v8, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v8}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v8

    if-nez v8, :cond_6

    move v1, v6

    .line 8591
    .local v1, hasHoldingCall:Z
    :goto_4
    if-eqz v0, :cond_8

    if-eqz v1, :cond_8

    .line 8592
    const-string v6, "internalAnswerCall: answering (both lines in use!)..."

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8596
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->DisplayWaitingCallDialogWhenHaveHoldingCall()V

    goto :goto_2

    .end local v0           #hasActiveCall:Z
    .end local v1           #hasHoldingCall:Z
    :cond_5
    move v0, v7

    .line 8584
    goto :goto_3

    .restart local v0       #hasActiveCall:Z
    :cond_6
    move v1, v7

    .line 8585
    goto :goto_4

    .line 8587
    .end local v0           #hasActiveCall:Z
    :cond_7
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v6}, Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z

    move-result v0

    .line 8588
    .restart local v0       #hasActiveCall:Z
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v6}, Lcom/android/internal/telephony/CallManager;->hasActiveBgCall()Z

    move-result v1

    .restart local v1       #hasHoldingCall:Z
    goto :goto_4

    .line 8597
    :cond_8
    if-eqz v0, :cond_9

    .line 8598
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->DisplayWaitingCallDialogWhenDoNotHaveHoldingCall()V

    goto :goto_2

    .line 8599
    :cond_9
    const-string v6, "feature_chn_duos"

    invoke-static {v6}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_a

    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v6}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v6

    sget-object v7, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v6, v7, :cond_a

    .line 8601
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->DuosAnswerVTCall()V

    goto :goto_2

    .line 8603
    :cond_a
    const-string v6, "internalAnswerCall: answering..."

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8604
    invoke-static {v5}, Lcom/android/phone/PhoneUtils;->answerCall(Lcom/android/internal/telephony/Call;)Z

    goto :goto_2

    .line 8608
    .end local v0           #hasActiveCall:Z
    .end local v1           #hasHoldingCall:Z
    :cond_b
    const/4 v6, 0x3

    if-ne v4, v6, :cond_c

    .line 8609
    const-string v6, "handling PHONE_TYPE_SIP to avoid fatal exception, should not come here"

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_2

    .line 8611
    :cond_c
    new-instance v6, Ljava/lang/IllegalStateException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Unexpected phone type: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v6
.end method

.method internalHangup()V
    .locals 1

    .prologue
    .line 8819
    const-string v0, "internalHangup()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8820
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 8821
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangup(Lcom/android/internal/telephony/Phone;)Z

    .line 8825
    :goto_0
    return-void

    .line 8823
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangup(Lcom/android/internal/telephony/CallManager;)Z

    goto :goto_0
.end method

.method internalHangupRingingCall()V
    .locals 1

    .prologue
    .line 8796
    const-string v0, "internalHangupRingingCall()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8797
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_0

    invoke-static {}, Lcom/android/phone/PhoneUtils;->dumpCallManager()V

    .line 8800
    :cond_0
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 8801
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangupRingingCall(Lcom/android/internal/telephony/Call;)Z

    .line 8805
    :goto_0
    return-void

    .line 8803
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangupRingingCall(Lcom/android/internal/telephony/Call;)Z

    goto :goto_0
.end method

.method internalPhoneHangup()V
    .locals 1

    .prologue
    .line 8838
    const-string v0, "internalHangup()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8839
    const/4 v0, 0x0

    sput-boolean v0, Lcom/android/phone/InVTCallScreen;->disconnectDueToLowBattery:Z

    .line 8840
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 8841
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangup(Lcom/android/internal/telephony/Phone;)Z

    .line 8845
    :goto_0
    return-void

    .line 8843
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hangup(Lcom/android/internal/telephony/CallManager;)Z

    goto :goto_0
.end method

.method internalResolveIntent(Landroid/content/Intent;)V
    .locals 10
    .parameter "intent"

    .prologue
    const/4 v9, 0x1

    const/4 v8, 0x0

    .line 3476
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    if-nez v6, :cond_1

    .line 3589
    :cond_0
    :goto_0
    return-void

    .line 3480
    :cond_1
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    .line 3481
    .local v0, action:Ljava/lang/String;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "internalResolveIntent: action="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3488
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    .line 3490
    .local v2, app:Lcom/android/phone/PhoneGlobals;
    const-string v6, "sec_product_feature_common_dsds_support"

    invoke-static {v6}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 3491
    invoke-static {}, Lcom/android/phone/PhoneUtilsDsds;->getDefaultSimForVoiceCalls()I

    move-result v4

    .line 3492
    .local v4, defSimCardId:I
    const/4 v1, 0x0

    .line 3494
    .local v1, activePhone:I
    sget-boolean v6, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v6, :cond_2

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "onReceive: intent - "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {p1}, Landroid/content/Intent;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3496
    :cond_2
    const-string v6, "simId"

    invoke-virtual {p1, v6}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 3497
    const-string v6, "simId"

    invoke-virtual {p1, v6, v8}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v1

    .line 3498
    sget-boolean v6, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v6, :cond_3

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "onCreate()... intent has simId, active SimId is... "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3503
    :cond_3
    :goto_1
    if-nez v1, :cond_6

    .line 3504
    iput v8, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    .line 3509
    :goto_2
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->phones:[Lcom/android/internal/telephony/Phone;

    iget v7, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    aget-object v6, v6, v7

    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    .line 3524
    .end local v1           #activePhone:I
    .end local v4           #defSimCardId:I
    :cond_4
    :goto_3
    const-string v6, "com.android.phone.InCallScreen.SHOW_ACTIVATION"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v6}, Lcom/android/internal/telephony/Phone;->getPhoneType()I

    move-result v6

    const/4 v7, 0x2

    if-ne v6, v7, :cond_a

    .line 3526
    sget-object v6, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    goto/16 :goto_0

    .line 3500
    .restart local v1       #activePhone:I
    .restart local v4       #defSimCardId:I
    :cond_5
    sget-boolean v6, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v6, :cond_3

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "onCreate()... intent has no simId, active SimId is... "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_1

    .line 3506
    :cond_6
    iput v9, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    goto :goto_2

    .line 3510
    .end local v1           #activePhone:I
    .end local v4           #defSimCardId:I
    :cond_7
    const-string v6, "feature_multisim"

    invoke-static {v6}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 3511
    const-string v6, "simSlot"

    invoke-virtual {p1, v6}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_9

    .line 3512
    const-string v6, "simSlot"

    invoke-virtual {p1, v6, v8}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v6

    iput v6, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    .line 3513
    sget-boolean v6, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v6, :cond_8

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "internalResolveIntent()... intent has simSlot, the active SimSlotNum is... "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3518
    :cond_8
    :goto_4
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->phones:[Lcom/android/internal/telephony/Phone;

    iget v7, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    aget-object v6, v6, v7

    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    goto :goto_3

    .line 3515
    :cond_9
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v6

    iget-object v6, v6, Lcom/android/phone/PhoneGlobals;->phoneMgrs:[Lcom/android/phone/PhoneInterfaceManager;

    aget-object v6, v6, v8

    invoke-virtual {v6}, Lcom/android/phone/PhoneInterfaceManager;->getDefaultSimForVoiceCalls()I

    move-result v6

    iput v6, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    .line 3516
    sget-boolean v6, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v6, :cond_8

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "internalResolveIntent()... intent has no simSlot, the active SimSlotNum is... "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_4

    .line 3527
    :cond_a
    const-string v6, "android.intent.action.ANSWER"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 3528
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalAnswerCall()V

    .line 3529
    invoke-virtual {v2, v8}, Lcom/android/phone/PhoneGlobals;->setRestoreMuteOnInCallResume(Z)V

    goto/16 :goto_0

    .line 3530
    :cond_b
    const-string v6, "android.intent.action.CALL"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_c

    const-string v6, "android.intent.action.CALL_EMERGENCY"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_10

    .line 3533
    :cond_c
    const-string v6, "feature_chn_duos"

    invoke-static {v6}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_d

    .line 3534
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v6}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v3

    .line 3538
    .local v3, currentCallState:Lcom/android/internal/telephony/Call$State;
    :goto_5
    sget-object v6, Lcom/android/internal/telephony/Call$State;->DIALING:Lcom/android/internal/telephony/Call$State;

    if-ne v3, v6, :cond_e

    .line 3539
    const-string v6, "onNewIntent: VT is dialing so ignore duplicated Intent"

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 3536
    .end local v3           #currentCallState:Lcom/android/internal/telephony/Call$State;
    :cond_d
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v6}, Lcom/android/internal/telephony/CallManager;->getActiveFgCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v3

    .restart local v3       #currentCallState:Lcom/android/internal/telephony/Call$State;
    goto :goto_5

    .line 3543
    :cond_e
    invoke-virtual {v2, v8}, Lcom/android/phone/PhoneGlobals;->setRestoreMuteOnInCallResume(Z)V

    .line 3545
    invoke-direct {p0, p1}, Lcom/android/phone/InVTCallScreen;->placeCall(Landroid/content/Intent;)Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v5

    .line 3546
    .local v5, status:Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    sget-object v6, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-ne v5, v6, :cond_f

    .line 3549
    invoke-virtual {v2, v9}, Lcom/android/phone/PhoneGlobals;->setBeginningCall(Z)V

    .line 3551
    :cond_f
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v6, v5}, Lcom/android/phone/InVTCallState;->setPendingCallStatusCode(Lcom/android/phone/InVTCallState$InVTCallInitStatus;)V

    goto/16 :goto_0

    .line 3552
    .end local v3           #currentCallState:Lcom/android/internal/telephony/Call$State;
    .end local v5           #status:Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    :cond_10
    const-string v6, "android.intent.action.MAIN"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_17

    .line 3560
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v6, v6, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v7, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-eq v6, v7, :cond_11

    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v6, v6, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v7, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v6, v7, :cond_12

    .line 3563
    :cond_11
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateScreen()V

    goto/16 :goto_0

    .line 3566
    :cond_12
    const-string v6, "com.android.phone.ShowDialpad"

    invoke-virtual {p1, v6}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_14

    .line 3567
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    const-string v7, "com.android.phone.ShowDialpad"

    invoke-virtual {p1, v7, v8}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v7

    iput-boolean v7, v6, Lcom/android/phone/InVTCallState;->showDialpad:Z

    .line 3568
    iget-boolean v6, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v6, :cond_13

    iget v6, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v7, 0x3

    if-eq v6, v7, :cond_13

    .line 3569
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean v8, v6, Lcom/android/phone/InVTCallState;->showDialpad:Z

    .line 3570
    :cond_13
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "- internalResolveIntent: SHOW_DIALPAD_EXTRA: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v7, v7, Lcom/android/phone/InVTCallState;->showDialpad:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3574
    :cond_14
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inCallUiState:Lcom/android/phone/InCallUiState;

    invoke-virtual {v6}, Lcom/android/phone/InCallUiState;->hasPendingCallStatusCode()Z

    move-result v6

    if-eqz v6, :cond_15

    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inCallUiState:Lcom/android/phone/InCallUiState;

    invoke-virtual {v6}, Lcom/android/phone/InCallUiState;->getPendingCallStatusCode()Lcom/android/phone/Constants$CallStatusCode;

    move-result-object v6

    sget-object v7, Lcom/android/phone/Constants$CallStatusCode;->CALL_FAILED:Lcom/android/phone/Constants$CallStatusCode;

    if-ne v6, v7, :cond_15

    .line 3575
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    sget-object v7, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->CALL_FAILED:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    invoke-virtual {v6, v7}, Lcom/android/phone/InVTCallState;->setPendingCallStatusCode(Lcom/android/phone/InVTCallState$InVTCallInitStatus;)V

    .line 3578
    :cond_15
    const-string v6, "feature_hktw"

    invoke-static {v6}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v6

    if-nez v6, :cond_16

    const-string v6, "feature_chn"

    invoke-static {v6}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_0

    .line 3579
    :cond_16
    iget-object v6, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v6}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v6

    sget-object v7, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v6, v7, :cond_0

    .line 3580
    iget-object v6, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v6}, Lcom/android/phone/InVTCallState;->clearPendingCallStatusCode()V

    goto/16 :goto_0

    .line 3583
    :cond_17
    const-string v6, "com.android.phone.InCallScreen.UNDEFINED"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_0

    .line 3585
    const-string v6, "InVTCallScreen"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "internalResolveIntent: unexpected intent action: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0
.end method

.method public isBluetoothAudioConnected()Z
    .locals 5

    .prologue
    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 9205
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-nez v2, :cond_1

    .line 9206
    sget-boolean v2, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v2, :cond_0

    const-string v2, "isBluetoothAudioConnected: ==> FALSE (null mBluetoothHeadset)"

    invoke-direct {p0, v2, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    :cond_0
    move v2, v3

    .line 9217
    :goto_0
    return v2

    .line 9209
    :cond_1
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v2}, Landroid/bluetooth/BluetoothHeadset;->getConnectedDevices()Ljava/util/List;

    move-result-object v0

    .line 9211
    .local v0, deviceList:Ljava/util/List;,"Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    const/4 v1, 0x0

    .local v1, i:I
    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_3

    .line 9212
    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/bluetooth/BluetoothDevice;

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnected(Landroid/bluetooth/BluetoothDevice;)Z

    move-result v2

    if-eqz v2, :cond_2

    move v2, v4

    .line 9213
    goto :goto_0

    .line 9211
    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_3
    move v2, v3

    .line 9217
    goto :goto_0
.end method

.method isBluetoothAudioConnected(Landroid/bluetooth/BluetoothDevice;)Z
    .locals 1
    .parameter "device"

    .prologue
    .line 9224
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-nez v0, :cond_1

    .line 9225
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_0

    const-string v0, "isBluetoothAudioConnected: ==> FALSE (null mBluetoothHeadset)"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9226
    :cond_0
    const/4 v0, 0x0

    .line 9229
    :goto_0
    return v0

    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v0, p1}, Landroid/bluetooth/BluetoothHeadset;->isAudioConnected(Landroid/bluetooth/BluetoothDevice;)Z

    move-result v0

    goto :goto_0
.end method

.method isBluetoothAudioConnectedOrPending()Z
    .locals 8

    .prologue
    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 9243
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnected()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 9244
    const-string v3, "isBluetoothAudioConnectedOrPending: ==> TRUE (really connected)"

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9267
    :goto_0
    return v2

    .line 9252
    :cond_0
    iget-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothConnectionPending:Z

    if-eqz v4, :cond_2

    .line 9253
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    iget-wide v6, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothConnectionRequestTime:J

    sub-long v0, v4, v6

    .line 9254
    .local v0, timeSinceRequest:J
    const-wide/16 v4, 0x1388

    cmp-long v4, v0, v4

    if-gez v4, :cond_1

    .line 9255
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "isBluetoothAudioConnectedOrPending: ==> TRUE (requested "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " msec ago)"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 9259
    :cond_1
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "isBluetoothAudioConnectedOrPending: ==> FALSE (request too old: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, " msec ago)"

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9261
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothConnectionPending:Z

    move v2, v3

    .line 9262
    goto :goto_0

    .line 9266
    .end local v0           #timeSinceRequest:J
    :cond_2
    const-string v2, "isBluetoothAudioConnectedOrPending: ==> FALSE"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    move v2, v3

    .line 9267
    goto :goto_0
.end method

.method public isBluetoothAvailable()Z
    .locals 4

    .prologue
    .line 9164
    sget-boolean v2, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v2, :cond_0

    const-string v2, "isBluetoothAvailable()..."

    const/4 v3, 0x1

    invoke-direct {p0, v2, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 9165
    :cond_0
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    if-nez v2, :cond_2

    .line 9167
    const-string v2, "  ==> FALSE (not BT capable)"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9168
    const/4 v1, 0x0

    .line 9197
    :cond_1
    :goto_0
    return v1

    .line 9186
    :cond_2
    const/4 v1, 0x0

    .line 9188
    .local v1, isConnected:Z
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v2, :cond_3

    .line 9189
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v2}, Landroid/bluetooth/BluetoothHeadset;->getConnectedDevices()Ljava/util/List;

    move-result-object v0

    .line 9191
    .local v0, deviceList:Ljava/util/List;,"Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-lez v2, :cond_3

    .line 9192
    const/4 v1, 0x1

    .line 9196
    .end local v0           #deviceList:Ljava/util/List;,"Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    :cond_3
    sget-boolean v2, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v2, :cond_1

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  ==> "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method protected isEasyModeEnabled()Z
    .locals 5

    .prologue
    .line 14982
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    .line 14985
    .local v0, context:Landroid/content/Context;
    const-string v2, "support_easy_mode"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    invoke-static {v2}, Lcom/android/phone/PhoneUtils;->isEasyMode(Landroid/content/Context;)Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v1, 0x1

    .line 14988
    .local v1, isEasyModeSetting:Z
    :goto_0
    const-string v2, "InVTCallScreen"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "isEasyModeEnabled() = "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/android/phone/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14989
    return v1

    .line 14985
    .end local v1           #isEasyModeSetting:Z
    :cond_0
    const/4 v1, 0x0

    goto :goto_0
.end method

.method protected isFarEndRecord()Z
    .locals 1

    .prologue
    .line 15151
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->isFarEndRecord:Z

    return v0
.end method

.method isForegroundActivity()Z
    .locals 1

    .prologue
    .line 3251
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    return v0
.end method

.method protected isFrontCameraEnabled()Z
    .locals 1

    .prologue
    .line 15171
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFrontCameraEnabled:Z

    return v0
.end method

.method protected isHandAdaptEnabled()Z
    .locals 1

    .prologue
    .line 15110
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->mIsHandAdaptEnabled:Z

    return v0
.end method

.method public isInVTCallScreenTopActivity()Z
    .locals 7

    .prologue
    const/4 v4, 0x0

    const/4 v3, 0x1

    .line 1498
    const-string v5, "activity"

    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager;

    .line 1499
    .local v0, activityManager:Landroid/app/ActivityManager;
    const/4 v5, 0x3

    invoke-virtual {v0, v5}, Landroid/app/ActivityManager;->getRunningTasks(I)Ljava/util/List;

    move-result-object v1

    .line 1500
    .local v1, info:Ljava/util/List;,"Ljava/util/List<Landroid/app/ActivityManager$RunningTaskInfo;>;"
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v5

    if-le v5, v3, :cond_0

    .line 1501
    invoke-interface {v1, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/ActivityManager$RunningTaskInfo;

    .line 1502
    .local v2, taskInfo:Landroid/app/ActivityManager$RunningTaskInfo;
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "isInVTCallScreenTopActivity()... topActivity.getClassName() - "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v2, Landroid/app/ActivityManager$RunningTaskInfo;->topActivity:Landroid/content/ComponentName;

    invoke-virtual {v6}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 1503
    iget-object v5, v2, Landroid/app/ActivityManager$RunningTaskInfo;->topActivity:Landroid/content/ComponentName;

    invoke-virtual {v5}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v5

    const-string v6, "com.android.phone.InVTCallScreen"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 1504
    const-string v4, "InVTCallScreen is the Top activity"

    invoke-direct {p0, v4, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 1508
    .end local v2           #taskInfo:Landroid/app/ActivityManager$RunningTaskInfo;
    :goto_0
    return v3

    :cond_0
    move v3, v4

    goto :goto_0
.end method

.method isMultiWindowMode()Z
    .locals 2

    .prologue
    const/4 v0, 0x0

    .line 15286
    const-string v1, "support_multi_window"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v1, :cond_0

    .line 15287
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v1}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v1

    if-nez v1, :cond_0

    const/4 v0, 0x1

    .line 15289
    :cond_0
    return v0
.end method

.method protected isNearEndRecord()Z
    .locals 1

    .prologue
    .line 15143
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->isNearEndRecord:Z

    return v0
.end method

.method protected isNoiseSuppressionSupported()Z
    .locals 1

    .prologue
    .line 15147
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsNoiseSuppressionSupported:Z

    return v0
.end method

.method public isOneHandOperationEnabled()Z
    .locals 6

    .prologue
    const/4 v3, 0x0

    const/4 v2, 0x1

    .line 14969
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    .line 14971
    .local v0, context:Landroid/content/Context;
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_ENABLED:Ljava/lang/String;

    invoke-static {v4, v5, v3}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v4

    if-ne v4, v2, :cond_0

    move v1, v2

    .line 14973
    .local v1, oneHandSetting:Z
    :goto_0
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "mIsOneHandOption = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14974
    if-eqz v1, :cond_1

    iget v4, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    if-ne v4, v2, :cond_1

    .line 14977
    :goto_1
    return v2

    .end local v1           #oneHandSetting:Z
    :cond_0
    move v1, v3

    .line 14971
    goto :goto_0

    .restart local v1       #oneHandSetting:Z
    :cond_1
    move v2, v3

    .line 14977
    goto :goto_1
.end method

.method public isPenMultiWindow()Z
    .locals 2

    .prologue
    .line 3609
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getMultiWindowStyle()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v0

    .line 3611
    .local v0, multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/16 v1, 0x800

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 3612
    const/4 v1, 0x1

    .line 3614
    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0
.end method

.method protected isPresetImageEnabled()Z
    .locals 1

    .prologue
    .line 15167
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageEnabled:Z

    return v0
.end method

.method protected isRequestAudioFocus()Z
    .locals 1

    .prologue
    .line 15119
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->mIsRequestedAudioFocus:Z

    return v0
.end method

.method protected isShowMe()Z
    .locals 1

    .prologue
    .line 15127
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->isShowMe:Z

    return v0
.end method

.method protected isSurfaceViewSwipe()Z
    .locals 1

    .prologue
    .line 15183
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->isSurfaceViewSwipe:Z

    return v0
.end method

.method protected launchBrightSB(I)V
    .locals 8
    .parameter

    .prologue
    const/4 v7, 0x4

    const/4 v6, 0x0

    .line 12668
    const-string v0, "This is inside launchBrightSB"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12670
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->brzoomCntDwn:Lcom/android/phone/InVTCallScreen$BrightZoomTimer;

    if-eqz v0, :cond_0

    .line 12671
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->brzoomCntDwn:Lcom/android/phone/InVTCallScreen$BrightZoomTimer;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallScreen$BrightZoomTimer;->cancel()V

    .line 12673
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    if-eqz v0, :cond_1

    .line 12674
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setOnSeekBarChangeListener(Landroid/widget/SeekBar$OnSeekBarChangeListener;)V

    .line 12677
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerInfoLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_2

    .line 12678
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerInfoLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v7}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 12681
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingThemeView()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 12682
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0, v6}, Lcom/android/phone/PreviewEffectState;->setShowThemeView(Z)V

    .line 12685
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingEmotionalAni()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 12686
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0, v6}, Lcom/android/phone/PreviewEffectState;->setShowEmotionalAni(Z)V

    .line 12689
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectUI;->hideEmotionalLayout()V

    .line 12691
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_6

    .line 12692
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectUI;->hidAllEffectLayoutExceptEmotion()V

    .line 12693
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_5

    .line 12694
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0, v7}, Landroid/widget/Button;->setVisibility(I)V

    .line 12695
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_6

    .line 12696
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setVisibility(I)V

    .line 12699
    :cond_6
    new-instance v0, Lcom/android/phone/InVTCallScreen$BrightZoomTimer;

    const-wide/16 v2, 0x7d0

    const-wide/16 v4, 0x1f4

    move-object v1, p0

    invoke-direct/range {v0 .. v5}, Lcom/android/phone/InVTCallScreen$BrightZoomTimer;-><init>(Lcom/android/phone/InVTCallScreen;JJ)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->brzoomCntDwn:Lcom/android/phone/InVTCallScreen$BrightZoomTimer;

    .line 12700
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->brzoomCntDwn:Lcom/android/phone/InVTCallScreen$BrightZoomTimer;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallScreen$BrightZoomTimer;->start()Landroid/os/CountDownTimer;

    .line 12702
    const v0, 0x7f0a0388

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/SeekBar;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    .line 12703
    const v0, 0x7f0a0386

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/TextView;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarText:Landroid/widget/TextView;

    .line 12705
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    if-eqz v0, :cond_7

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_7

    .line 12706
    packed-switch p1, :pswitch_data_0

    .line 12749
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBrightSBChangeListener:Landroid/widget/SeekBar$OnSeekBarChangeListener;

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setOnSeekBarChangeListener(Landroid/widget/SeekBar$OnSeekBarChangeListener;)V

    .line 12752
    :cond_7
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    if-eqz v0, :cond_8

    .line 12753
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    invoke-virtual {v0, v6}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 12755
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_8

    .line 12756
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_8

    .line 12757
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->SeekBarLayout:Landroid/widget/FrameLayout;

    invoke-virtual {v0, v6}, Landroid/widget/FrameLayout;->setVisibility(I)V

    .line 12761
    :cond_8
    return-void

    .line 12708
    :pswitch_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    const/16 v1, 0xd

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setMax(I)V

    .line 12709
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v1, v6}, Lsiso/vt/VTManager;->GetCameraParams(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setProgress(I)V

    .line 12710
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarText:Landroid/widget/TextView;

    const v1, 0x7f090423

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_0

    .line 12714
    :pswitch_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setMax(I)V

    .line 12715
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v2, 0x1

    invoke-virtual {v1, v2}, Lsiso/vt/VTManager;->GetCameraParams(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setProgress(I)V

    .line 12716
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarText:Landroid/widget/TextView;

    const v1, 0x7f090422

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_0

    .line 12720
    :pswitch_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    invoke-virtual {v0, v7}, Landroid/widget/SeekBar;->setMax(I)V

    .line 12721
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v2, 0x7

    invoke-virtual {v1, v2}, Lsiso/vt/VTManager;->GetCameraParams(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setProgress(I)V

    .line 12722
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarText:Landroid/widget/TextView;

    const v1, 0x7f0904b3

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_0

    .line 12728
    :pswitch_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    const/16 v1, 0xa

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setMax(I)V

    .line 12730
    :try_start_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "screen_brightness"

    invoke-static {v0, v1}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/provider/Settings$SettingNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v0

    .line 12734
    :goto_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v1

    invoke-virtual {v1}, Landroid/view/Window;->getAttributes()Landroid/view/WindowManager$LayoutParams;

    move-result-object v1

    .line 12735
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "lp.screenBrightness : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v3, v1, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12736
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    const/4 v3, 0x0

    cmpg-float v2, v2, v3

    if-gez v2, :cond_9

    .line 12737
    div-int/lit8 v0, v0, 0x19

    .line 12741
    :goto_2
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "screenbrightness Changed : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12742
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    invoke-virtual {v1, v0}, Landroid/widget/SeekBar;->setProgress(I)V

    .line 12743
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarText:Landroid/widget/TextView;

    const v1, 0x7f0904b4

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto/16 :goto_0

    .line 12731
    :catch_0
    move-exception v0

    .line 12732
    const/16 v0, 0xff

    goto :goto_1

    .line 12739
    :cond_9
    iget v0, v1, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    const/high16 v1, 0x4120

    mul-float/2addr v0, v1

    float-to-int v0, v0

    goto :goto_2

    .line 12706
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method

.method public onActivityResult(IILandroid/content/Intent;)V
    .locals 4
    .parameter "requestCode"
    .parameter "resultCode"
    .parameter "intent"

    .prologue
    const/4 v3, 0x1

    .line 15294
    invoke-super {p0, p1, p2, p3}, Landroid/app/Activity;->onActivityResult(IILandroid/content/Intent;)V

    .line 15295
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onActivityResult "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " destroyed?: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mIsDestroyed:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 15298
    const/4 v1, -0x1

    if-eq p2, v1, :cond_1

    .line 15299
    const-string v1, "onActivityResult : Result not ok"

    invoke-direct {p0, v1, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 15315
    :cond_0
    :goto_0
    return-void

    .line 15303
    :cond_1
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsDestroyed:Z

    if-nez v1, :cond_0

    .line 15304
    packed-switch p1, :pswitch_data_0

    goto :goto_0

    .line 15306
    :pswitch_0
    const-string v1, "onActivityResult : REQUEST_ACRODEA_AVATAR"

    invoke-direct {p0, v1, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 15307
    const-string v0, "sdcard/acrodea_avatar_temp.jpg"

    .line 15308
    .local v0, SD_CARD_TEMP_DIR:Ljava/lang/String;
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    goto :goto_0

    .line 15304
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method public onBackPressed()V
    .locals 4

    .prologue
    const/4 v1, 0x1

    .line 3992
    const-string v2, "onBackPressed()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3994
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v2, :cond_1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v2}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 3995
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->hideDTMFDialpad()V

    .line 4037
    :cond_0
    :goto_0
    return-void

    .line 4004
    :cond_1
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 4005
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v2}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v2

    if-nez v2, :cond_2

    move v0, v1

    .line 4009
    .local v0, hasActiveRingingCall:Z
    :goto_1
    if-eqz v0, :cond_4

    .line 4011
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    if-eqz v2, :cond_4

    .line 4012
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v2}, Landroid/widget/SlidingDrawer;->isOpened()Z

    move-result v2

    if-eqz v2, :cond_4

    .line 4013
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mRejectCallWithMsgDrawer:Landroid/widget/SlidingDrawer;

    invoke-virtual {v1}, Landroid/widget/SlidingDrawer;->toggle()V

    goto :goto_0

    .line 4005
    .end local v0           #hasActiveRingingCall:Z
    :cond_2
    const/4 v0, 0x0

    goto :goto_1

    .line 4007
    :cond_3
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v0

    .restart local v0       #hasActiveRingingCall:Z
    goto :goto_1

    .line 4022
    :cond_4
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v2, v2, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v3, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->MANAGE_CONFERENCE:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-ne v2, v3, :cond_5

    .line 4024
    const-string v1, "BACK key: InVTCallScreenMode.MANAGE_CONFERENCE"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4025
    sget-object v1, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    goto :goto_0

    .line 4031
    :cond_5
    const-string v2, "hw_home_key"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v2, v3, :cond_0

    .line 4034
    :cond_6
    sput-boolean v1, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    .line 4036
    invoke-super {p0}, Landroid/app/Activity;->onBackPressed()V

    goto :goto_0
.end method

.method public onClick(Landroid/view/View;)V
    .locals 9
    .parameter

    .prologue
    const/4 v0, 0x2

    const/4 v8, 0x0

    const/16 v7, 0x6c

    const/4 v6, 0x0

    const/4 v1, 0x1

    .line 7304
    invoke-virtual {p1}, Landroid/view/View;->getId()I

    move-result v2

    .line 7305
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "onClick(View "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", id "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ")..."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7307
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v3

    .line 7309
    const-string v4, "volume_panel"

    invoke-static {v4}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 7310
    const v4, 0x7f0a01da

    if-eq v2, v4, :cond_0

    .line 7311
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->hideVolumePanel()V

    .line 7315
    :cond_0
    sparse-switch v2, :sswitch_data_0

    .line 7802
    :cond_1
    :goto_0
    return-void

    .line 7317
    :sswitch_0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsShownVolumeBar:Z

    if-nez v0, :cond_2

    .line 7318
    const-string v0, "Soft volume button click : show"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7319
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->showVolumePanel()V

    goto :goto_0

    .line 7321
    :cond_2
    const-string v0, "Soft volume button click : hide"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7322
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->hideVolumePanel()V

    goto :goto_0

    .line 7326
    :sswitch_1
    const-string v0, "Record start  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7327
    const-string v0, "vt_audio_mixed_recording"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    const-string v0, "vt_audio_mixed_recording_via_stack"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_3

    .line 7328
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->startRecordingAudio()V

    goto :goto_0

    .line 7330
    :cond_3
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    if-nez v0, :cond_1

    .line 7332
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setEnabled(Z)V

    .line 7333
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setEnabled(Z)V

    .line 7334
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    .line 7336
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->startRecordingFarEndView()V

    goto :goto_0

    .line 7341
    :sswitch_2
    const-string v0, "Record stop  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7342
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v0

    if-eqz v0, :cond_6

    .line 7343
    const-string v0, "vt_audio_mixed_recording"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    const-string v0, "vt_audio_mixed_recording_via_stack"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_5

    .line 7344
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopRecordingAudio()V

    .line 7351
    :cond_4
    :goto_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 7352
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setEnabled(Z)V

    goto :goto_0

    .line 7346
    :cond_5
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->stopRecordingFarEndView()V

    goto :goto_1

    .line 7348
    :cond_6
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 7349
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->stopRecordingNearEndView(Z)V

    goto :goto_1

    .line 7355
    :sswitch_3
    const-string v0, "Capture  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7356
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    if-nez v0, :cond_1

    .line 7358
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setEnabled(Z)V

    .line 7359
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setEnabled(Z)V

    .line 7360
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    .line 7362
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->capture_farend_view(J)V

    goto/16 :goto_0

    .line 7366
    :sswitch_4
    const-string v0, "Keypad  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7367
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_8

    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_8

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_8

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_8

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_8

    .line 7368
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    if-eqz v0, :cond_7

    .line 7369
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/ImageButton;->setVisibility(I)V

    .line 7370
    :cond_7
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_8

    .line 7371
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 7373
    :cond_8
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->onOpenCloseDialpad()V

    goto/16 :goto_0

    .line 7376
    :sswitch_5
    const-string v0, "Hide Dialer Pad"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7377
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 7378
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->hideDTMFDialpad()V

    .line 7379
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_1

    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_1

    .line 7380
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    if-eqz v0, :cond_1

    .line 7381
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    invoke-virtual {v0, v6}, Landroid/widget/ImageButton;->setVisibility(I)V

    goto/16 :goto_0

    .line 7387
    :sswitch_6
    const-string v2, "Voice call  button click"

    invoke-direct {p0, v2, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7388
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->disableEndCallButton()V

    .line 7394
    invoke-static {}, Lcom/android/phone/PhoneUtils;->setAudioMode()V

    .line 7396
    const-string v2, "kor_cs_vt_ui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 7397
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_9

    .line 7398
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->restorecallprefix(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    .line 7401
    :cond_9
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "OnClick:: Phone number to call : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7402
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    if-eqz v2, :cond_1

    .line 7403
    const-string v2, "kor_cs_vt"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 7404
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->resetAudioState()V

    .line 7407
    :cond_a
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.CALL_PRIVILEGED"

    const-string v4, "tel"

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-static {v4, v5, v8}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v4

    invoke-direct {v2, v3, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7410
    const-string v3, "feature_chn_duos"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_c

    .line 7412
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string v4, "CURRENT_NETWORK"

    invoke-static {v3, v4, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    if-nez v3, :cond_b

    move v0, v1

    .line 7417
    :cond_b
    const-string v3, "simnum"

    invoke-virtual {v2, v3, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7420
    :cond_c
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 7421
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    .line 7422
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_d

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 7423
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->removeMessages(I)V

    .line 7424
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 7425
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mHasDelayedChangePhone:Z

    goto/16 :goto_0

    .line 7427
    :cond_d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->removeMessages(I)V

    .line 7428
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto/16 :goto_0

    .line 7435
    :sswitch_7
    const-string v2, "IP call  button click"

    invoke-direct {p0, v2, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7436
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "OnClick:: Phone number to call : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7437
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    if-eqz v2, :cond_1

    .line 7438
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.CALL"

    const-string v4, "tel"

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-static {v4, v5, v8}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v4

    invoke-direct {v2, v3, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7440
    const-string v3, "ipcall"

    invoke-virtual {v2, v3, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 7442
    const-string v3, "feature_chn_duos"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_f

    .line 7444
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string v4, "CURRENT_NETWORK"

    invoke-static {v3, v4, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    if-nez v3, :cond_e

    move v0, v1

    .line 7449
    :cond_e
    const-string v3, "simnum"

    invoke-virtual {v2, v3, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7452
    :cond_f
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 7453
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    goto/16 :goto_0

    .line 7461
    :sswitch_8
    const-string v2, "Video call  button click"

    invoke-direct {p0, v2, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7462
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->disableEndCallButton()V

    .line 7463
    const-string v2, "kor_cs_vt_ui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_11

    .line 7464
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v2, v7}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v2

    if-eqz v2, :cond_10

    .line 7465
    const-string v2, "removeMessages(DELAYED_CLEANUP_AFTER_DISCONNECT)"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7466
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v2, v7}, Landroid/os/Handler;->removeMessages(I)V

    .line 7467
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->endInVTCallScreenSession()V

    .line 7469
    :cond_10
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_11

    .line 7470
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->restorecallprefix(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    .line 7474
    :cond_11
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "OnClick:: Phone number to call : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7477
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    if-eqz v2, :cond_1

    .line 7478
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.CALL_PRIVILEGED"

    const-string v4, "tel"

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-static {v4, v5, v8}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v4

    invoke-direct {v2, v3, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7480
    const-string v3, "videocall"

    invoke-virtual {v2, v3, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 7481
    const/high16 v3, 0x1000

    invoke-virtual {v2, v3}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 7483
    const-string v3, "feature_chn_duos"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_13

    .line 7485
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string v4, "CURRENT_NETWORK"

    invoke-static {v3, v4, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    if-nez v3, :cond_12

    move v0, v1

    .line 7490
    :cond_12
    const-string v3, "simnum"

    invoke-virtual {v2, v3, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7493
    :cond_13
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 7494
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    .line 7495
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_14

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v0

    if-eqz v0, :cond_14

    .line 7496
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->removeMessages(I)V

    .line 7497
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 7498
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mHasDelayedChangePhone:Z

    goto/16 :goto_0

    .line 7500
    :cond_14
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->removeMessages(I)V

    .line 7501
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v7}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto/16 :goto_0

    .line 7508
    :sswitch_9
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->disableEndCallButton()V

    .line 7509
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    if-eqz v0, :cond_1

    .line 7510
    new-instance v0, Landroid/content/Intent;

    const-string v2, "android.intent.action.SENDTO"

    const-string v3, "smsto"

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-static {v3, v4, v8}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v3

    invoke-direct {v0, v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7512
    const-string v2, "support_oem_message_for_kk"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_15

    .line 7513
    const-string v2, "com.android.mms"

    invoke-virtual {v0, v2}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 7516
    :cond_15
    const-string v2, "phone_kk_tablet_gui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_16

    .line 7517
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->makeFullScreenIntent(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v0

    .line 7520
    :cond_16
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 7521
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mAlreadyHasActionCall:Z

    goto/16 :goto_0

    .line 7526
    :sswitch_a
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->disableEndCallButton()V

    .line 7527
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    if-eqz v0, :cond_1

    .line 7528
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.intent.action.INSERT"

    sget-object v2, Landroid/provider/ContactsContract$Contacts;->CONTENT_URI:Landroid/net/Uri;

    invoke-direct {v0, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7530
    const-string v1, "phone"

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 7533
    const-string v1, "phone_kk_tablet_gui"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_17

    .line 7534
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->makeFullScreenIntent(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v0

    .line 7537
    :cond_17
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    goto/16 :goto_0

    .line 7542
    :sswitch_b
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->disableEndCallButton()V

    .line 7543
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    if-eqz v1, :cond_1

    .line 7544
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.INSERT_OR_EDIT"

    sget-object v3, Landroid/provider/ContactsContract$Contacts;->CONTENT_URI:Landroid/net/Uri;

    invoke-direct {v1, v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7546
    const-string v2, "phone"

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->phoneForCallNumber:Ljava/lang/String;

    invoke-virtual {v1, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 7547
    const-string v2, "phone_type"

    invoke-virtual {v1, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7549
    const-string v0, "vnd.android.cursor.item/raw_contact"

    invoke-virtual {v1, v0}, Landroid/content/Intent;->setType(Ljava/lang/String;)Landroid/content/Intent;

    .line 7551
    const-string v0, "phone_kk_tablet_gui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_29

    .line 7552
    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->makeFullScreenIntent(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v0

    .line 7555
    :goto_2
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    goto/16 :goto_0

    .line 7561
    :sswitch_c
    const-string v0, "End call  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7564
    sput-boolean v6, Lcom/android/phone/InVTCallScreen;->mBackPressed:Z

    .line 7565
    sput-boolean v6, Lcom/android/phone/InVTCallScreen;->mHomePressed:Z

    .line 7569
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v2, 0x3

    if-ne v0, v2, :cond_18

    .line 7570
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->isMO_Disconnect:Z

    .line 7572
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopVTCall()V

    goto/16 :goto_0

    .line 7575
    :cond_18
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalPhoneHangup()V

    goto/16 :goto_0

    .line 7580
    :sswitch_d
    const-string v0, "Switch camera button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7581
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->requestSwitchCamera()V

    goto/16 :goto_0

    .line 7585
    :sswitch_e
    const-string v0, "Dual camera off button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7586
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->updateDualCameraLayout(Z)V

    .line 7587
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->requestDualCamera(Z)V

    goto/16 :goto_0

    .line 7591
    :sswitch_f
    const-string v0, "Speaker  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7592
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->toggleSpeaker()V

    .line 7593
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_1

    .line 7594
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnectedOrPending()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    goto/16 :goto_0

    .line 7598
    :sswitch_10
    const-string v0, "Headset  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7599
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_19

    .line 7600
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHeadset:Landroid/widget/ToggleButton;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnectedOrPending()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 7602
    :cond_19
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->toggleBluetooth()V

    .line 7603
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSpeakerButton()V

    goto/16 :goto_0

    .line 7606
    :sswitch_11
    const-string v0, "Mute  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7607
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->onMuteClick()V

    goto/16 :goto_0

    .line 7611
    :sswitch_12
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v2

    if-eqz v2, :cond_1a

    .line 7612
    const-string v0, "Hide me  button click"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7613
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    goto/16 :goto_0

    .line 7615
    :cond_1a
    const-string v2, "Show me  button click"

    invoke-direct {p0, v2, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 7617
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    invoke-virtual {v1, v8}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v1

    if-eqz v1, :cond_1b

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v1, v6}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v1

    if-nez v1, :cond_1c

    .line 7618
    :cond_1b
    const v0, 0x7f0903e8

    invoke-static {p0, v0, v6}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v0

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    goto/16 :goto_0

    .line 7621
    :cond_1c
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->releaseSelectVideo()V

    .line 7624
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 7626
    const-string v1, "kor_cs_vt_ui"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    iget v1, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v1, v0, :cond_1

    .line 7627
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 7628
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_0

    .line 7639
    :sswitch_13
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    invoke-virtual {v0}, Landroid/widget/SeekBar;->getProgress()I

    move-result v0

    if-lez v0, :cond_1

    .line 7640
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    invoke-virtual {v1}, Landroid/widget/SeekBar;->getProgress()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setProgress(I)V

    goto/16 :goto_0

    .line 7646
    :sswitch_14
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    invoke-virtual {v0}, Landroid/widget/SeekBar;->getProgress()I

    move-result v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    invoke-virtual {v1}, Landroid/widget/SeekBar;->getMax()I

    move-result v1

    if-ge v0, v1, :cond_1

    .line 7647
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mBrightSB:Landroid/widget/SeekBar;

    invoke-virtual {v1}, Landroid/widget/SeekBar;->getProgress()I

    move-result v1

    add-int/lit8 v1, v1, 0x1

    invoke-virtual {v0, v1}, Landroid/widget/SeekBar;->setProgress(I)V

    goto/16 :goto_0

    .line 7651
    :sswitch_15
    new-instance v0, Lcom/android/phone/PopupMenu;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMainMenuButton:Landroid/widget/ImageButton;

    invoke-direct {v0, p0, v1}, Lcom/android/phone/PopupMenu;-><init>(Landroid/content/Context;Landroid/view/View;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    .line 7652
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0}, Lcom/android/phone/PopupMenu;->getMenuInflater()Landroid/view/MenuInflater;

    move-result-object v0

    const v1, 0x7f110004

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v2}, Lcom/android/phone/PopupMenu;->getMenu()Landroid/view/Menu;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Landroid/view/MenuInflater;->inflate(ILandroid/view/Menu;)V

    .line 7653
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0, p0}, Lcom/android/phone/PopupMenu;->setOnMenuItemClickListener(Lcom/android/phone/PopupMenu$OnMenuItemClickListener;)V

    .line 7655
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0}, Lcom/android/phone/PopupMenu;->getMenu()Landroid/view/Menu;

    move-result-object v0

    .line 7656
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v1, v0}, Lcom/android/phone/InCSVTCallMenu;->prepareOptionsMenu(Landroid/view/Menu;)Z

    .line 7657
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0}, Lcom/android/phone/PopupMenu;->show()V

    goto/16 :goto_0

    .line 7662
    :sswitch_16
    new-instance v0, Lcom/android/phone/PopupMenu;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mActionBarOptionmenu:Landroid/widget/ImageButton;

    invoke-direct {v0, p0, v1}, Lcom/android/phone/PopupMenu;-><init>(Landroid/content/Context;Landroid/view/View;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    .line 7663
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0}, Lcom/android/phone/PopupMenu;->getMenuInflater()Landroid/view/MenuInflater;

    move-result-object v0

    const v1, 0x7f110004

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v2}, Lcom/android/phone/PopupMenu;->getMenu()Landroid/view/Menu;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Landroid/view/MenuInflater;->inflate(ILandroid/view/Menu;)V

    .line 7664
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0, p0}, Lcom/android/phone/PopupMenu;->setOnMenuItemClickListener(Lcom/android/phone/PopupMenu$OnMenuItemClickListener;)V

    .line 7665
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0}, Lcom/android/phone/PopupMenu;->getMenu()Landroid/view/Menu;

    move-result-object v0

    .line 7666
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v1, v0}, Lcom/android/phone/InCSVTCallMenu;->prepareOptionsMenu(Landroid/view/Menu;)Z

    .line 7667
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->invalidateOptionsMenu()V

    .line 7668
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v0}, Lcom/android/phone/PopupMenu;->show()V

    goto/16 :goto_0

    .line 7674
    :sswitch_17
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_1d

    .line 7675
    sget-object v0, Lcom/android/phone/InCSVTCallMenu;->mOutGoingImage:[Ljava/lang/String;

    invoke-virtual {v0}, [Ljava/lang/String;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    sput-object v0, Lcom/android/phone/InCSVTCallMenu;->mContextMenuStrArrayId:[Ljava/lang/String;

    .line 7683
    :goto_3
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->setNearEndPressed(Z)V

    .line 7684
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto/16 :goto_0

    .line 7677
    :cond_1d
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPresetImageEnabled()Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 7678
    sget-object v0, Lcom/android/phone/InCSVTCallMenu;->mOutGoingWithPresetImage:[Ljava/lang/String;

    invoke-virtual {v0}, [Ljava/lang/String;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    sput-object v0, Lcom/android/phone/InCSVTCallMenu;->mContextMenuStrArrayId:[Ljava/lang/String;

    goto :goto_3

    .line 7680
    :cond_1e
    sget-object v0, Lcom/android/phone/InCSVTCallMenu;->mOutGoingImageHideMe:[Ljava/lang/String;

    invoke-virtual {v0}, [Ljava/lang/String;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    sput-object v0, Lcom/android/phone/InCSVTCallMenu;->mContextMenuStrArrayId:[Ljava/lang/String;

    goto :goto_3

    .line 7689
    :sswitch_18
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->disableEndCallButton()V

    .line 7691
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_20

    .line 7692
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 7696
    :goto_4
    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->getConnection(Lcom/android/internal/telephony/Call;)Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 7697
    if-eqz v0, :cond_21

    .line 7699
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_1f

    .line 7700
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 7702
    :cond_1f
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDisplayNumber:Ljava/lang/String;

    .line 7703
    if-eqz v1, :cond_1

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 7704
    invoke-virtual {v0}, Lcom/android/internal/telephony/Connection;->getUserData()Ljava/lang/Object;

    move-result-object v0

    .line 7705
    instance-of v1, v0, Lcom/android/internal/telephony/CallerInfo;

    if-eqz v1, :cond_1

    .line 7706
    check-cast v0, Lcom/android/internal/telephony/CallerInfo;

    .line 7707
    new-instance v1, Ljava/lang/StringBuffer;

    const-string v2, "content://com.android.contacts/contacts/"

    invoke-direct {v1, v2}, Ljava/lang/StringBuffer;-><init>(Ljava/lang/String;)V

    .line 7708
    iget-wide v2, v0, Lcom/android/internal/telephony/CallerInfo;->person_id:J

    invoke-static {v2, v3}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 7710
    new-instance v0, Landroid/content/Intent;

    const-string v2, "android.intent.action.VIEW"

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    invoke-direct {v0, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7711
    const/high16 v1, 0x1000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 7712
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/phone/PhoneGlobals;->startActivity(Landroid/content/Intent;)V

    goto/16 :goto_0

    .line 7694
    :cond_20
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    goto :goto_4

    .line 7717
    :cond_21
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContactBufferId:Ljava/lang/StringBuffer;

    if-eqz v0, :cond_22

    .line 7718
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.intent.action.VIEW"

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mContactBufferId:Ljava/lang/StringBuffer;

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v2

    invoke-direct {v0, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7719
    const/high16 v1, 0x1000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 7720
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/phone/PhoneGlobals;->startActivity(Landroid/content/Intent;)V

    goto/16 :goto_0

    .line 7723
    :cond_22
    const-string v0, "unable to use viewContact"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 7727
    :sswitch_19
    const-string v0, "In Accept by Voice call button click"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7728
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->getCallNumber(Lcom/android/internal/telephony/Call;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->AcceptByVoiceCallNumber:Ljava/lang/String;

    .line 7729
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->fallbackHangupVTRingingCall()V

    goto/16 :goto_0

    .line 7732
    :sswitch_1a
    const-string v0, "In Reject with msg button click"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7733
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->getCallNumber(Lcom/android/internal/telephony/Call;)Ljava/lang/String;

    move-result-object v0

    .line 7734
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalHangupRingingCall()V

    .line 7736
    if-eqz v0, :cond_1

    .line 7738
    invoke-static {p0}, Lcom/android/phone/callsettings/RejectCallWithMsgModes;->isIconModeEnable(Landroid/content/Context;)Z

    move-result v1

    if-eqz v1, :cond_23

    .line 7739
    new-instance v1, Landroid/content/Intent;

    const-class v2, Lcom/android/phone/RejectCallWithMsgIconModeIncomingVT;

    invoke-direct {v1, p0, v2}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V

    .line 7740
    const-string v2, "phone_number"

    invoke-virtual {v1, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 7741
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    goto/16 :goto_0

    .line 7746
    :cond_23
    new-instance v1, Landroid/content/Intent;

    const-class v2, Lcom/android/phone/RejectCallWithMsg;

    invoke-direct {v1, p0, v2}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V

    .line 7747
    const-string v2, "phone_number"

    invoke-virtual {v1, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 7748
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    goto/16 :goto_0

    .line 7756
    :sswitch_1b
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_24

    .line 7757
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    goto/16 :goto_0

    .line 7759
    :cond_24
    const-string v0, "Show me button is being clicked"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7761
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    invoke-virtual {v0, v8}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_25

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v6}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_26

    .line 7762
    :cond_25
    const v0, 0x7f0903e8

    invoke-static {p0, v0, v6}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v0

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    goto/16 :goto_0

    .line 7765
    :cond_26
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->releaseSelectVideo()V

    .line 7771
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_1

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_1

    .line 7772
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingEffectLayout()Z

    move-result v0

    if-nez v0, :cond_1

    .line 7773
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_27

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v0

    if-nez v0, :cond_1

    .line 7774
    :cond_27
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    if-eqz v0, :cond_28

    .line 7775
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, v6}, Landroid/widget/Button;->setVisibility(I)V

    .line 7776
    :cond_28
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_1

    .line 7777
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setVisibility(I)V

    goto/16 :goto_0

    .line 7786
    :sswitch_1c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 7787
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v6}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 7788
    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_DIRECTION:Ljava/lang/String;

    invoke-static {v0, v1, v6}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    goto/16 :goto_0

    .line 7791
    :sswitch_1d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandLeftLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v6}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 7792
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOneHandRightLayout:Landroid/widget/LinearLayout;

    const/16 v2, 0x8

    invoke-virtual {v0, v2}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 7793
    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_DIRECTION:Ljava/lang/String;

    invoke-static {v0, v2, v1}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    goto/16 :goto_0

    .line 7796
    :sswitch_1e
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalAnswerCall()V

    goto/16 :goto_0

    .line 7799
    :sswitch_1f
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalHangup()V

    goto/16 :goto_0

    :cond_29
    move-object v0, v1

    goto/16 :goto_2

    .line 7315
    nop

    :sswitch_data_0
    .sparse-switch
        0x7f0a0075 -> :sswitch_1f
        0x7f0a0100 -> :sswitch_4
        0x7f0a0183 -> :sswitch_a
        0x7f0a0184 -> :sswitch_b
        0x7f0a0185 -> :sswitch_18
        0x7f0a0187 -> :sswitch_6
        0x7f0a0188 -> :sswitch_7
        0x7f0a0189 -> :sswitch_8
        0x7f0a018a -> :sswitch_8
        0x7f0a018b -> :sswitch_9
        0x7f0a01da -> :sswitch_0
        0x7f0a020e -> :sswitch_1e
        0x7f0a027e -> :sswitch_d
        0x7f0a0292 -> :sswitch_1c
        0x7f0a0293 -> :sswitch_1d
        0x7f0a034a -> :sswitch_11
        0x7f0a0362 -> :sswitch_5
        0x7f0a0363 -> :sswitch_c
        0x7f0a0364 -> :sswitch_f
        0x7f0a0365 -> :sswitch_12
        0x7f0a0366 -> :sswitch_10
        0x7f0a036c -> :sswitch_3
        0x7f0a036d -> :sswitch_1
        0x7f0a036e -> :sswitch_2
        0x7f0a0383 -> :sswitch_16
        0x7f0a0384 -> :sswitch_17
        0x7f0a038d -> :sswitch_15
        0x7f0a0393 -> :sswitch_d
        0x7f0a0394 -> :sswitch_c
        0x7f0a03a7 -> :sswitch_e
        0x7f0a03a9 -> :sswitch_13
        0x7f0a03aa -> :sswitch_14
        0x7f0a03c1 -> :sswitch_8
        0x7f0a03c2 -> :sswitch_6
        0x7f0a03c3 -> :sswitch_7
        0x7f0a03c4 -> :sswitch_8
        0x7f0a03c5 -> :sswitch_9
        0x7f0a03d4 -> :sswitch_1b
        0x7f0a03d5 -> :sswitch_1b
        0x7f0a03d7 -> :sswitch_19
        0x7f0a03d8 -> :sswitch_1a
        0x7f0a03e4 -> :sswitch_c
    .end sparse-switch
.end method

.method public onConfigurationChanged(Landroid/content/res/Configuration;)V
    .locals 4
    .parameter "newConfig"

    .prologue
    const/4 v3, 0x1

    .line 13077
    invoke-super {p0, p1}, Landroid/app/Activity;->onConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 13078
    const-string v1, "onConfigurationChanged event get called"

    invoke-direct {p0, v1, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 13079
    iget v1, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    iget v2, p1, Landroid/content/res/Configuration;->orientation:I

    if-ne v1, v2, :cond_1

    .line 13110
    :cond_0
    :goto_0
    return-void

    .line 13082
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onConfigurationChanged orientation: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " -> "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p1, Landroid/content/res/Configuration;->orientation:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13083
    iget v1, p1, Landroid/content/res/Configuration;->orientation:I

    iput v1, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    .line 13085
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    .line 13086
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setCurrentOrientationState()V

    .line 13089
    const/4 v0, 0x0

    .line 13090
    .local v0, state:Lcom/android/internal/telephony/PhoneConstants$State;
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    if-eqz v1, :cond_2

    .line 13091
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    .line 13095
    :cond_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v1}, Lcom/android/phone/InVTCallState;->hasPendingCallStatusCode()Z

    move-result v1

    if-eqz v1, :cond_3

    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v1, :cond_3

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getRequestedOrientation()I

    move-result v1

    if-ne v1, v3, :cond_3

    .line 13097
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onConfigurationChanged app.inVTCallState.getPendingCallStatusCode():"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v2}, Lcom/android/phone/InVTCallState;->getPendingCallStatusCode()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 13100
    :cond_3
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v1, :cond_4

    if-eqz v0, :cond_4

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_4

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    if-eqz v1, :cond_4

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mGenericErrorDialog:Landroid/app/AlertDialog;

    invoke-virtual {v1}, Landroid/app/AlertDialog;->isShowing()Z

    move-result v1

    if-eqz v1, :cond_4

    .line 13101
    const-string v1, "onConfigurationChanged, tablet, phone state is idle, error dialog is showing"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 13104
    :cond_4
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initInVTCallScreen()V

    .line 13105
    const-string v1, "support_multi_window"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v1}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v1

    if-nez v1, :cond_0

    .line 13106
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    if-eqz v1, :cond_0

    .line 13107
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    invoke-virtual {v1, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto/16 :goto_0
.end method

.method protected onCreate(Landroid/os/Bundle;)V
    .locals 5
    .parameter

    .prologue
    const/4 v2, 0x0

    const/4 v1, 0x1

    .line 1939
    const-string v0, "InVTCallScreen"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "onCreate()...  this = "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1941
    invoke-static {}, Lcom/android/phone/Profiler;->callScreenOnCreate()V

    .line 1942
    invoke-super {p0, p1}, Landroid/app/Activity;->onCreate(Landroid/os/Bundle;)V

    .line 1944
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->registerBatteryListener()V

    .line 1947
    const-string v0, "ro.product.name"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v3, "superior"

    invoke-virtual {v0, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 1948
    new-instance v0, Landroid/content/Intent;

    const-string v3, "intent.stop.app-in-app"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->sendBroadcast(Landroid/content/Intent;)V

    .line 1951
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getBaseContext()Landroid/content/Context;

    move-result-object v0

    const-string v3, "device_policy"

    invoke-virtual {v0, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/admin/DevicePolicyManager;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    .line 1954
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getBaseContext()Landroid/content/Context;

    move-result-object v0

    const-string v3, "enterprise_policy"

    invoke-virtual {v0, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/enterprise/EnterpriseDeviceManager;

    .line 1955
    invoke-virtual {v0}, Landroid/app/enterprise/EnterpriseDeviceManager;->getRestrictionPolicy()Landroid/app/enterprise/RestrictionPolicy;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    .line 1957
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->createDefaultImages()V

    .line 1959
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    .line 1960
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->mCM:Lcom/android/internal/telephony/CallManager;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    .line 1961
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0, p0}, Lcom/android/phone/PhoneGlobals;->setInVTCallScreenInstance(Lcom/android/phone/InVTCallScreen;)V

    .line 1963
    new-instance v0, Lcom/android/phone/InCSVTCallMenu;

    invoke-direct {v0, p0}, Lcom/android/phone/InCSVTCallMenu;-><init>(Lcom/android/phone/InVTCallScreen;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    .line 1965
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    const-string v0, "not_support_vt_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 1966
    :cond_1
    new-instance v0, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-direct {v0, p0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;-><init>(Landroid/app/Activity;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    .line 1967
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0, p0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->setStateChangeListener(Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity$StateChangeListener;)Z

    .line 1970
    :cond_2
    const-string v0, "window"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Landroid/view/IWindowManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/view/IWindowManager;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mWindowManager:Landroid/view/IWindowManager;

    .line 1972
    const/high16 v0, 0x28

    .line 1974
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v3}, Lcom/android/phone/PhoneGlobals;->getPhoneState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v3

    sget-object v4, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v3, v4, :cond_3

    .line 1983
    const/high16 v0, 0x68

    .line 1985
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v3

    invoke-virtual {v3, v0}, Landroid/view/Window;->addFlags(I)V

    .line 1987
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 1988
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getIntent()Landroid/content/Intent;

    move-result-object v0

    .line 1990
    invoke-static {}, Lcom/android/phone/PhoneUtilsDsds;->getDefaultSimForVoiceCalls()I

    .line 1995
    const-string v3, "simId"

    invoke-virtual {v0, v3}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_12

    .line 1996
    const-string v3, "simId"

    invoke-virtual {v0, v3, v2}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v0

    .line 1997
    sget-boolean v3, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v3, :cond_4

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "onCreate()... intent has simId, active SimId is... "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2002
    :cond_4
    :goto_0
    if-nez v0, :cond_14

    .line 2003
    iput v2, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    .line 2018
    :cond_5
    :goto_1
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_17

    .line 2019
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getVTPhone()Lcom/android/internal/telephony/Phone;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    .line 2020
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_6

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onCreate(): mPhone Index: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2028
    :cond_6
    :goto_2
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->registerDevicePolicyManagerReceiver()V

    .line 2029
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->registerSDCardListener()V

    .line 2030
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getBluetoothPhoneService()Landroid/bluetooth/IBluetoothHeadsetPhone;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    .line 2031
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "- mBluetoothPhone: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2033
    new-instance v0, Landroid/content/IntentFilter;

    const-string v3, "android.intent.action.HEADSET_PLUG"

    invoke-direct {v0, v3}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    .line 2035
    const-string v3, "clear_cover"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 2036
    const-string v3, "com.samsung.cover.OPEN"

    invoke-virtual {v0, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2039
    :cond_7
    const-string v3, "volume_panel"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_8

    .line 2040
    const-string v3, "android.media.VOLUME_CHANGED_ACTION"

    invoke-virtual {v0, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2043
    :cond_8
    const-string v3, "vt_dual_camera"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_9

    .line 2044
    const-string v3, "android.intent.action.SIOP_LEVEL_CHANGED"

    invoke-virtual {v0, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2047
    :cond_9
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v3, v0}, Lcom/android/phone/InVTCallScreen;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2049
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initvtstack()V

    .line 2067
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->registerForPhoneStates()V

    .line 2068
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->registerPowerOffAnimationStartListener()V

    .line 2070
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/PreviewEffectState;->init(Landroid/content/Context;)Lcom/android/phone/PreviewEffectState;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    .line 2071
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v0

    invoke-static {v0}, Lcom/android/phone/CameraEngine;->init(Landroid/content/Context;)Lcom/android/phone/CameraEngine;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->cameraEngine:Lcom/android/phone/CameraEngine;

    .line 2073
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallState;->clearPendingCallStatusCode()V

    .line 2080
    if-nez p1, :cond_1c

    .line 2081
    const-string v0, "onCreate(): this is our very first launch, checking intent..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2086
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getIntent()Landroid/content/Intent;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->internalResolveIntent(Landroid/content/Intent;)V

    .line 2087
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onCreate(): app.inVTCallState.getPendingCallStatusCode() = "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v3, v3, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v3}, Lcom/android/phone/InVTCallState;->getPendingCallStatusCode()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2088
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallState;->hasPendingCallStatusCode()Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 2089
    const-string v0, "InVTCallScreen"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "onCreate: status "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v4, v4, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v4}, Lcom/android/phone/InVTCallState;->getPendingCallStatusCode()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " from internalResolveIntent()"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2107
    :cond_a
    :goto_3
    new-instance v0, Lcom/android/phone/CallTime;

    invoke-direct {v0, p0}, Lcom/android/phone/CallTime;-><init>(Lcom/android/phone/CallTime$OnTickListener;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    .line 2130
    :cond_b
    :goto_4
    const-string v0, "video_call_remove_record_button"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1d

    move v0, v1

    :goto_5
    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsRecordSupport:Z

    .line 2133
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_c

    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_c

    .line 2134
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->requestWindowFeature(I)Z

    .line 2137
    :cond_c
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 2138
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getActionBar()Landroid/app/ActionBar;

    move-result-object v0

    .line 2139
    if-eqz v0, :cond_d

    .line 2140
    invoke-virtual {v0}, Landroid/app/ActionBar;->hide()V

    .line 2141
    invoke-virtual {v0, v2}, Landroid/app/ActionBar;->setDisplayShowTitleEnabled(Z)V

    .line 2142
    invoke-virtual {v0, v2}, Landroid/app/ActionBar;->setDisplayShowHomeEnabled(Z)V

    .line 2144
    :cond_d
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setupSimTab()V

    .line 2147
    :cond_e
    new-instance v0, Lcom/android/phone/InVTCallScreen$MyOrientationListener;

    invoke-direct {v0, p0, p0}, Lcom/android/phone/InVTCallScreen$MyOrientationListener;-><init>(Lcom/android/phone/InVTCallScreen;Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOrientationListener:Lcom/android/phone/InVTCallScreen$MyOrientationListener;

    .line 2148
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOrientationListener:Lcom/android/phone/InVTCallScreen$MyOrientationListener;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallScreen$MyOrientationListener;->enable()V

    .line 2150
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_f

    .line 2151
    new-instance v0, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v0}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 2152
    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inPurgeable:Z

    .line 2154
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    const v4, 0x7f02008d

    invoke-static {v3, v4, v0}, Landroid/graphics/BitmapFactory;->decodeResource(Landroid/content/res/Resources;ILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayoutNormalBitmap:Landroid/graphics/Bitmap;

    .line 2155
    new-instance v0, Landroid/graphics/drawable/BitmapDrawable;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mMainLayoutNormalBitmap:Landroid/graphics/Bitmap;

    invoke-direct {v0, v3}, Landroid/graphics/drawable/BitmapDrawable;-><init>(Landroid/graphics/Bitmap;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayoutNormalDrawable:Landroid/graphics/drawable/Drawable;

    .line 2158
    :cond_f
    invoke-static {}, Lcom/android/phone/Profiler;->callScreenCreated()V

    .line 2160
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_10

    .line 2162
    new-instance v0, Lcom/android/phone/callsettings/ScrambleLib;

    invoke-direct {v0, p0}, Lcom/android/phone/callsettings/ScrambleLib;-><init>(Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->scramble:Lcom/android/phone/callsettings/ScrambleLib;

    .line 2163
    sput-boolean v2, Lcom/android/phone/InVTCallScreen;->mIsSKTServiceMode:Z

    .line 2166
    :cond_10
    const-string v0, "barge_in"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 2167
    new-instance v0, Lcom/android/phone/CallBargeIn;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-direct {v0, v2}, Lcom/android/phone/CallBargeIn;-><init>(Lcom/android/internal/telephony/CallManager;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallBargeIn:Lcom/android/phone/CallBargeIn;

    .line 2168
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallBargeIn:Lcom/android/phone/CallBargeIn;

    invoke-virtual {v0}, Lcom/android/phone/CallBargeIn;->init()V

    .line 2172
    :cond_11
    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->requestLowFPS(Z)V

    .line 2174
    const-string v0, "onCreate(): exit"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2175
    return-void

    .line 1999
    :cond_12
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_13

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onCreate()... intent has no simId, active SimId is... "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    :cond_13
    move v0, v2

    goto/16 :goto_0

    .line 2005
    :cond_14
    iput v1, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    goto/16 :goto_1

    .line 2007
    :cond_15
    const-string v0, "feature_multisim"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 2008
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getIntent()Landroid/content/Intent;

    move-result-object v0

    .line 2009
    const-string v3, "simSlot"

    invoke-virtual {v0, v3}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_16

    .line 2010
    const-string v3, "simSlot"

    invoke-virtual {v0, v3, v2}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    .line 2011
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_5

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onCreate()... intent has simSlot, the active SimSlotNum is... "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget v3, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_1

    .line 2013
    :cond_16
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->phoneMgrs:[Lcom/android/phone/PhoneInterfaceManager;

    aget-object v0, v0, v2

    invoke-virtual {v0}, Lcom/android/phone/PhoneInterfaceManager;->getDefaultSimForVoiceCalls()I

    move-result v0

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    .line 2014
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_5

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onCreate()... intent has no simSlot, the active SimSlotNum is... "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget v3, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_1

    .line 2021
    :cond_17
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_18

    const-string v0, "feature_multisim"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_19

    .line 2023
    :cond_18
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->phones:[Lcom/android/internal/telephony/Phone;

    iget v3, p0, Lcom/android/phone/InVTCallScreen;->mActiveSimCardId:I

    aget-object v0, v0, v3

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    goto/16 :goto_2

    .line 2025
    :cond_19
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->phone:Lcom/android/internal/telephony/Phone;

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    goto/16 :goto_2

    .line 2093
    :cond_1a
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onCreate(): Bluetooth:: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2094
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    if-eqz v0, :cond_1b

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    if-nez v0, :cond_1b

    .line 2098
    const-string v0, "onCreate: BluetoothAdapter.getDefaultAdapter()"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2099
    invoke-static {}, Landroid/bluetooth/BluetoothAdapter;->getDefaultAdapter()Landroid/bluetooth/BluetoothAdapter;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    .line 2100
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    if-eqz v0, :cond_a

    .line 2101
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v3

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothProfileServiceListener:Landroid/bluetooth/BluetoothProfile$ServiceListener;

    invoke-virtual {v0, v3, v4, v1}, Landroid/bluetooth/BluetoothAdapter;->getProfileProxy(Landroid/content/Context;Landroid/bluetooth/BluetoothProfile$ServiceListener;I)Z

    goto/16 :goto_3

    .line 2104
    :cond_1b
    const-string v0, "onCreate: mBluetoothPhone is null or mAdapter is not null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 2111
    :cond_1c
    const-string v0, "VTPreviousState"

    invoke-virtual {p1, v0}, Landroid/os/Bundle;->getParcelable(Ljava/lang/String;)Landroid/os/Parcelable;

    move-result-object v0

    check-cast v0, Lcom/android/phone/VTPreviousState;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTPreviousState:Lcom/android/phone/VTPreviousState;

    .line 2112
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTPreviousState:Lcom/android/phone/VTPreviousState;

    if-eqz v0, :cond_b

    .line 2113
    new-instance v0, Lcom/android/phone/CallTime;

    invoke-direct {v0, p0}, Lcom/android/phone/CallTime;-><init>(Lcom/android/phone/CallTime$OnTickListener;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    .line 2115
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTPreviousState:Lcom/android/phone/VTPreviousState;

    invoke-virtual {v0}, Lcom/android/phone/VTPreviousState;->isSpeakerOn()B

    move-result v0

    if-ne v0, v1, :cond_b

    .line 2116
    const-string v0, "onResume(): mVTPreviousState is null or previousState is speaker"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2117
    invoke-static {p0, v1, v1}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 2118
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_b

    .line 2119
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    goto/16 :goto_4

    :cond_1d
    move v0, v2

    .line 2130
    goto/16 :goto_5
.end method

.method public onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V
    .locals 0
    .parameter "menu"
    .parameter "v"
    .parameter "menuInfo"

    .prologue
    .line 11245
    invoke-super {p0, p1, p2, p3}, Landroid/app/Activity;->onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V

    .line 11246
    return-void
.end method

.method protected onCreateDialog(I)Landroid/app/Dialog;
    .locals 8
    .parameter

    .prologue
    const/4 v0, 0x0

    const v7, 0x7f090022

    const v2, 0x1010355

    const/4 v6, 0x0

    const/4 v3, 0x1

    .line 12045
    const-string v1, "In onCreateDialog"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12047
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v1}, Lcom/android/phone/InCSVTCallMenu;->getContextMenuStrArray()[Ljava/lang/String;

    move-result-object v1

    if-nez v1, :cond_0

    .line 12048
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v1}, Lcom/android/phone/InCSVTCallMenu;->setFarEndMenuString()V

    .line 12051
    :cond_0
    packed-switch p1, :pswitch_data_0

    .line 12411
    :pswitch_0
    invoke-super {p0, p1}, Landroid/app/Activity;->onCreateDialog(I)Landroid/app/Dialog;

    move-result-object v0

    :goto_0
    return-object v0

    .line 12053
    :pswitch_1
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    const v1, 0x7f090418

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setTitle(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v1}, Lcom/android/phone/InCSVTCallMenu;->getContextMenuStrArray()[Ljava/lang/String;

    move-result-object v1

    new-instance v2, Lcom/android/phone/InVTCallScreen$40;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$40;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setItems([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    .line 12066
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    invoke-virtual {v0, v3}, Landroid/app/Dialog;->setCanceledOnTouchOutside(Z)V

    .line 12068
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 12069
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->nearend_pressed:Z

    if-eqz v0, :cond_2

    .line 12070
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    const v1, 0x7f090419

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setTitle(I)V

    .line 12101
    :cond_1
    :goto_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    new-instance v1, Lcom/android/phone/InVTCallScreen$41;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$41;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 12109
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    goto :goto_0

    .line 12075
    :cond_2
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 12076
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    .line 12080
    :goto_2
    invoke-static {p0, v0}, Lcom/android/phone/PhoneUtils;->getCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;)Lcom/android/internal/telephony/CallerInfo;

    move-result-object v0

    .line 12086
    if-eqz v0, :cond_4

    iget-object v1, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    if-eqz v1, :cond_4

    iget-object v1, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_4

    .line 12087
    iget-object v0, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    .line 12088
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    invoke-virtual {v1, v0}, Landroid/app/Dialog;->setTitle(Ljava/lang/CharSequence;)V

    goto :goto_1

    .line 12078
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v0

    goto :goto_2

    .line 12089
    :cond_4
    if-eqz v0, :cond_6

    iget-object v1, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    if-eqz v1, :cond_5

    iget-object v1, v0, Lcom/android/internal/telephony/CallerInfo;->name:Ljava/lang/String;

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_6

    :cond_5
    iget-object v1, v0, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    if-eqz v1, :cond_6

    .line 12092
    iget-object v0, v0, Lcom/android/internal/telephony/CallerInfo;->phoneNumber:Ljava/lang/String;

    .line 12093
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    invoke-virtual {v1, v0}, Landroid/app/Dialog;->setTitle(Ljava/lang/CharSequence;)V

    goto :goto_1

    .line 12096
    :cond_6
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    const v1, 0x7f090007

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setTitle(I)V

    goto :goto_1

    .line 12115
    :pswitch_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v0}, Lcom/android/phone/InCSVTCallMenu;->getContextMenuStrArray()[Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, [Ljava/lang/String;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    .line 12116
    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/String;

    .line 12118
    aget-object v2, v0, v6

    aput-object v2, v1, v6

    .line 12119
    aget-object v0, v0, v3

    aput-object v0, v1, v3

    .line 12122
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    new-instance v2, Lcom/android/phone/InVTCallScreen$42;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$42;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setItems([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    .line 12136
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    invoke-virtual {v0, v3}, Landroid/app/Dialog;->setCanceledOnTouchOutside(Z)V

    .line 12137
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    const v1, 0x7f090419

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setTitle(I)V

    .line 12140
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    new-instance v1, Lcom/android/phone/InVTCallScreen$43;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$43;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 12148
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    goto/16 :goto_0

    .line 12151
    :pswitch_3
    new-instance v0, Landroid/widget/TextView;

    invoke-direct {v0, p0}, Landroid/widget/TextView;-><init>(Landroid/content/Context;)V

    .line 12153
    new-instance v1, Landroid/app/AlertDialog$Builder;

    invoke-direct {v1, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v1, v2}, Landroid/app/AlertDialog$Builder;->setIconAttribute(I)Landroid/app/AlertDialog$Builder;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/app/AlertDialog$Builder;->setView(Landroid/view/View;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09041c

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setTitle(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09041a

    new-instance v2, Lcom/android/phone/InVTCallScreen$45;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$45;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09041b

    new-instance v2, Lcom/android/phone/InVTCallScreen$44;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$44;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    goto/16 :goto_0

    .line 12169
    :pswitch_4
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v0, v2}, Landroid/app/AlertDialog$Builder;->setIconAttribute(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09041e

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setMessage(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09041d

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setTitle(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09041a

    new-instance v2, Lcom/android/phone/InVTCallScreen$47;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$47;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f0901da

    new-instance v2, Lcom/android/phone/InVTCallScreen$46;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$46;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    goto/16 :goto_0

    .line 12190
    :pswitch_5
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->getEarliestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v3

    .line 12196
    :try_start_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getIntent()Landroid/content/Intent;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->getInitialNumber(Landroid/content/Intent;)Ljava/lang/String;
    :try_end_0
    .catch Lcom/android/phone/PhoneUtils$VoiceMailNumberMissingException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_1

    move-result-object v2

    .line 12197
    :try_start_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "tempPhoneNumber = "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V
    :try_end_1
    .catch Lcom/android/phone/PhoneUtils$VoiceMailNumberMissingException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Ljava/lang/NullPointerException; {:try_start_1 .. :try_end_1} :catch_2

    move-object v1, v2

    .line 12204
    :goto_3
    if-eqz v1, :cond_7

    move-object v2, v1

    .line 12221
    :goto_4
    if-nez v2, :cond_9

    .line 12222
    const-string v1, "Dialog not created due to number is null"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12223
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x6c

    const-wide/16 v3, 0x1194

    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_0

    .line 12198
    :catch_0
    move-exception v1

    move-object v2, v0

    .line 12199
    :goto_5
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Error::PhoneUtils.VoiceMailNumberMissingException: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    move-object v1, v2

    .line 12202
    goto :goto_3

    .line 12200
    :catch_1
    move-exception v1

    move-object v2, v0

    .line 12201
    :goto_6
    invoke-virtual {v1}, Ljava/lang/NullPointerException;->printStackTrace()V

    move-object v1, v2

    goto :goto_3

    .line 12207
    :cond_7
    if-nez v3, :cond_b

    .line 12208
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;

    move-result-object v1

    .line 12211
    :goto_7
    if-nez v1, :cond_8

    .line 12212
    const-string v1, "Dialog not created due to getAddress is null and tempPhoneNumber is null"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12213
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v2, 0x6c

    const-wide/16 v3, 0x1194

    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_0

    .line 12217
    :cond_8
    invoke-virtual {v1}, Lcom/android/internal/telephony/Connection;->getAddress()Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    goto :goto_4

    .line 12232
    :cond_9
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mBeforeMakingCall:Z

    if-eqz v0, :cond_a

    .line 12233
    iput-boolean v6, p0, Lcom/android/phone/InVTCallScreen;->mBeforeMakingCall:Z

    .line 12235
    new-instance v0, Lcom/android/phone/InVTCallScreen$48;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$48;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 12242
    new-instance v1, Lcom/android/phone/InVTCallScreen$49;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$49;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 12282
    :goto_8
    new-instance v3, Lcom/android/phone/InVTCallScreen$52;

    invoke-direct {v3, p0, v2}, Lcom/android/phone/InVTCallScreen$52;-><init>(Lcom/android/phone/InVTCallScreen;Ljava/lang/String;)V

    .line 12299
    new-instance v2, Landroid/app/AlertDialog$Builder;

    invoke-direct {v2, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    const v4, 0x7f090446

    invoke-virtual {v2, v4}, Landroid/app/AlertDialog$Builder;->setTitle(I)Landroid/app/AlertDialog$Builder;

    move-result-object v2

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v2, v4}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    move-result-object v2

    invoke-virtual {v2, v7, v3}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v2

    const v3, 0x7f090025

    invoke-virtual {v2, v3, v1}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v1

    invoke-virtual {v1}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialogVoiceCall:Landroid/app/Dialog;

    .line 12304
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mDialogVoiceCall:Landroid/app/Dialog;

    invoke-virtual {v1, v0}, Landroid/app/Dialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 12306
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-virtual {v0, v6}, Lcom/android/phone/PhoneGlobals;->updateVTDuringCallWakeState(Z)V

    .line 12308
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialogVoiceCall:Landroid/app/Dialog;

    goto/16 :goto_0

    .line 12251
    :cond_a
    new-instance v0, Lcom/android/phone/InVTCallScreen$50;

    invoke-direct {v0, p0}, Lcom/android/phone/InVTCallScreen$50;-><init>(Lcom/android/phone/InVTCallScreen;)V

    .line 12267
    new-instance v1, Lcom/android/phone/InVTCallScreen$51;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$51;-><init>(Lcom/android/phone/InVTCallScreen;)V

    goto :goto_8

    .line 12312
    :pswitch_6
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v0, v2}, Landroid/app/AlertDialog$Builder;->setIconAttribute(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f09041f

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setTitle(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVoiceCallMessage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setMessage(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    new-instance v1, Lcom/android/phone/InVTCallScreen$53;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$53;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v7, v1}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    goto/16 :goto_0

    .line 12322
    :pswitch_7
    const-string v0, "In OUTGOING_NEAR_DIALOG_LIST condition"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12323
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v0, v3}, Landroid/app/AlertDialog$Builder;->setCancelable(Z)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v1}, Lcom/android/phone/InCSVTCallMenu;->getContextMenuStrArray()[Ljava/lang/String;

    move-result-object v1

    new-instance v2, Lcom/android/phone/InVTCallScreen$54;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$54;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setItems([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    .line 12334
    invoke-virtual {v0, v3}, Landroid/app/Dialog;->setCanceledOnTouchOutside(Z)V

    .line 12335
    new-instance v1, Lcom/android/phone/InVTCallScreen$55;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$55;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    goto/16 :goto_0

    .line 12345
    :pswitch_8
    const v1, 0x7f040021

    invoke-static {p0, v1, v0}, Landroid/view/View;->inflate(Landroid/content/Context;ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v0

    .line 12349
    const v1, 0x1020001

    invoke-virtual {v0, v1}, Landroid/view/View;->findViewById(I)Landroid/view/View;

    move-result-object v1

    .line 12350
    new-instance v2, Lcom/android/phone/InVTCallScreen$56;

    invoke-direct {v2, p0, v1}, Lcom/android/phone/InVTCallScreen$56;-><init>(Lcom/android/phone/InVTCallScreen;Landroid/view/View;)V

    invoke-virtual {v1, v2}, Landroid/view/View;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 12357
    new-instance v1, Landroid/app/AlertDialog$Builder;

    invoke-direct {v1, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    .line 12358
    invoke-virtual {v1, v0}, Landroid/app/AlertDialog$Builder;->setView(Landroid/view/View;)Landroid/app/AlertDialog$Builder;

    .line 12360
    const v0, 0x7f0903f4

    invoke-virtual {v1, v0}, Landroid/app/AlertDialog$Builder;->setTitle(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    new-instance v2, Lcom/android/phone/InVTCallScreen$57;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$57;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v7, v2}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    .line 12369
    invoke-virtual {v1}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    .line 12370
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    new-instance v1, Lcom/android/phone/InVTCallScreen$58;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$58;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 12375
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    goto/16 :goto_0

    .line 12378
    :pswitch_9
    new-instance v0, Landroid/app/AlertDialog$Builder;

    invoke-direct {v0, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v0, v2}, Landroid/app/AlertDialog$Builder;->setIconAttribute(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f090421

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setMessage(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f090420

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setTitle(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    new-instance v1, Lcom/android/phone/InVTCallScreen$60;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$60;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v7, v1}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f090025

    new-instance v2, Lcom/android/phone/InVTCallScreen$59;

    invoke-direct {v2, p0}, Lcom/android/phone/InVTCallScreen$59;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1, v2}, Landroid/app/AlertDialog$Builder;->setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    .line 12403
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    new-instance v1, Lcom/android/phone/InVTCallScreen$61;

    invoke-direct {v1, p0}, Lcom/android/phone/InVTCallScreen$61;-><init>(Lcom/android/phone/InVTCallScreen;)V

    invoke-virtual {v0, v1}, Landroid/app/Dialog;->setOnDismissListener(Landroid/content/DialogInterface$OnDismissListener;)V

    .line 12408
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mContextMenuDailog:Landroid/app/Dialog;

    goto/16 :goto_0

    .line 12200
    :catch_2
    move-exception v1

    goto/16 :goto_6

    .line 12198
    :catch_3
    move-exception v1

    goto/16 :goto_5

    :cond_b
    move-object v1, v3

    goto/16 :goto_7

    .line 12051
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_3
        :pswitch_0
        :pswitch_5
        :pswitch_7
        :pswitch_0
        :pswitch_6
        :pswitch_4
        :pswitch_2
        :pswitch_8
        :pswitch_9
    .end packed-switch
.end method

.method public onCreateOptionsMenu(Landroid/view/Menu;)Z
    .locals 4
    .parameter "menu"

    .prologue
    const/4 v0, 0x0

    const/4 v1, 0x1

    .line 12420
    invoke-super {p0, p1}, Landroid/app/Activity;->onCreateOptionsMenu(Landroid/view/Menu;)Z

    .line 12421
    const-string v2, "In onCreateOptionsMenu method"

    invoke-direct {p0, v2, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 12423
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    if-nez v2, :cond_1

    .line 12433
    :cond_0
    :goto_0
    return v0

    .line 12426
    :cond_1
    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v2, :cond_2

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getVTCallType()I

    move-result v2

    const/4 v3, 0x3

    if-ne v2, v3, :cond_0

    .line 12429
    :cond_2
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mMenu:Landroid/view/Menu;

    .line 12430
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mMenuFirstCreated:Z

    .line 12432
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getMenuInflater()Landroid/view/MenuInflater;

    move-result-object v0

    const v2, 0x7f110004

    invoke-virtual {v0, v2, p1}, Landroid/view/MenuInflater;->inflate(ILandroid/view/Menu;)V

    move v0, v1

    .line 12433
    goto :goto_0
.end method

.method protected onDestroy()V
    .locals 8

    .prologue
    const/4 v3, 0x1

    const/4 v4, 0x0

    const/4 v7, 0x0

    .line 3017
    const-string v2, "InVTCallScreen"

    const-string v5, "onDestroy()..."

    invoke-static {v2, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3018
    invoke-super {p0}, Landroid/app/Activity;->onDestroy()V

    .line 3020
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->requestLowFPS(Z)V

    .line 3021
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOrientationListener:Lcom/android/phone/InVTCallScreen$MyOrientationListener;

    invoke-virtual {v2}, Lcom/android/phone/InVTCallScreen$MyOrientationListener;->disable()V

    .line 3023
    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v2, :cond_0

    .line 3024
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mMainLayoutNormalBitmap:Landroid/graphics/Bitmap;

    if-eqz v2, :cond_0

    .line 3025
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mMainLayoutNormalBitmap:Landroid/graphics/Bitmap;

    .line 3028
    :cond_0
    const-string v2, "vt_theme_feature_support"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 3029
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getContext()Landroid/content/Context;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string v6, "previous_auto_state"

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v2}, Lcom/android/phone/PreviewEffectState;->isEmotionalAniAuto()Z

    move-result v2

    if-ne v2, v3, :cond_12

    move v2, v3

    :goto_0
    invoke-static {v5, v6, v2}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 3032
    :cond_1
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    .line 3034
    .local v0, app:Lcom/android/phone/PhoneGlobals;
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_13

    .line 3035
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    .line 3039
    .local v1, state:Lcom/android/internal/telephony/PhoneConstants$State;
    :goto_1
    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_2

    .line 3040
    invoke-virtual {v0, v4}, Lcom/android/phone/PhoneGlobals;->updateVTDuringCallWakeState(Z)V

    .line 3046
    :cond_2
    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 3052
    :cond_3
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    if-eqz v2, :cond_4

    .line 3053
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v2}, Lcom/android/phone/InCSVTCallMenu;->clearVTCommonFunctionReference()V

    .line 3058
    :cond_4
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsDestroyed:Z

    .line 3060
    if-eqz v0, :cond_5

    .line 3061
    invoke-virtual {v0, v4}, Lcom/android/phone/PhoneGlobals;->setIsVTcallStarted(Z)V

    .line 3064
    :cond_5
    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getInVTCallScreenInstance()Lcom/android/phone/InVTCallScreen;

    move-result-object v2

    invoke-virtual {v2, p0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 3065
    invoke-virtual {v0, v7}, Lcom/android/phone/PhoneGlobals;->setInVTCallScreenInstance(Lcom/android/phone/InVTCallScreen;)V

    .line 3069
    :cond_6
    const-string v2, "feature_ltn_auto_csp"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_7

    .line 3070
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->autoCSP:Lcom/android/phone/IAutoCSP;

    .line 3074
    :cond_7
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

    if-eqz v2, :cond_8

    .line 3075
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

    invoke-virtual {v2, v7}, Lcom/android/phone/RespondViaSmsManager;->setInCallScreenInstance(Lcom/android/phone/InCallScreen;)V

    .line 3078
    :cond_8
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->unregisterForPhoneStates()V

    .line 3079
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mLowBatteryReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 3080
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPowerOffAnimationReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 3081
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 3082
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mSDCardReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 3084
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDeviceManagerPolicyReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 3088
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    if-eqz v2, :cond_9

    .line 3090
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    iget-object v5, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    invoke-virtual {v2, v3, v5}, Landroid/bluetooth/BluetoothAdapter;->closeProfileProxy(ILandroid/bluetooth/BluetoothProfile;)V

    .line 3091
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothHeadset:Landroid/bluetooth/BluetoothHeadset;

    .line 3096
    :cond_9
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissAllDialogs()V

    .line 3097
    const-string v2, "clear_cover"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 3098
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    if-eqz v2, :cond_a

    .line 3099
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallCardCoveredDialog:Lcom/android/phone/CallCardCoveredDialog;

    invoke-virtual {v2}, Lcom/android/phone/CallCardCoveredDialog;->dismissDialog()V

    .line 3103
    :cond_a
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    .line 3104
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    .line 3106
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    sget-object v5, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v2, v5, :cond_14

    .line 3107
    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v2

    if-eqz v2, :cond_b

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->isShowingCallScreen()Z

    move-result v2

    if-ne v2, v3, :cond_b

    sget-boolean v2, Lcom/android/phone/PhoneGlobals;->mIsDockConnected:Z

    if-nez v2, :cond_b

    .line 3109
    invoke-static {p0, v4, v3}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 3126
    :cond_b
    :goto_2
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    if-eqz v2, :cond_c

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    invoke-virtual {v2}, Landroid/widget/ImageView;->getVisibility()I

    move-result v2

    if-eqz v2, :cond_c

    .line 3127
    const-string v2, "remove unused image handle"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3128
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImage:Landroid/widget/ImageView;

    invoke-virtual {v2, v7}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 3130
    :cond_c
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    if-eqz v2, :cond_d

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    invoke-virtual {v2}, Landroid/widget/ImageView;->getVisibility()I

    move-result v2

    if-eqz v2, :cond_d

    .line 3131
    const-string v2, "remove unused image handle"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3132
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->outgoingContactImageSmall:Landroid/widget/ImageView;

    invoke-virtual {v2, v7}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 3135
    :cond_d
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v2, :cond_e

    .line 3136
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v2}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->clearInCallScreenReference()V

    .line 3137
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    .line 3140
    :cond_e
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    if-eqz v2, :cond_f

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v2}, Landroid/widget/LinearLayout;->getVisibility()I

    move-result v2

    if-eqz v2, :cond_f

    .line 3141
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v2, v7}, Landroid/widget/LinearLayout;->setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 3144
    :cond_f
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarText:Landroid/widget/TextView;

    .line 3145
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mCallHandGripChangeObserver:Landroid/database/ContentObserver;

    .line 3147
    const-string v2, "video_call_audio_focus_enable"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_10

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isRequestAudioFocus()Z

    move-result v2

    if-eqz v2, :cond_10

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    if-eqz v2, :cond_10

    .line 3148
    const-string v2, "abandonAudioFocus"

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3149
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioFocusListener:Landroid/media/AudioManager$OnAudioFocusChangeListener;

    invoke-virtual {v2, v3}, Landroid/media/AudioManager;->abandonAudioFocus(Landroid/media/AudioManager$OnAudioFocusChangeListener;)I

    .line 3150
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mAudioFocusListener:Landroid/media/AudioManager$OnAudioFocusChangeListener;

    invoke-virtual {v2, v3}, Landroid/media/AudioManager;->unregisterAudioFocusListener(Landroid/media/AudioManager$OnAudioFocusChangeListener;)V

    .line 3151
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->setIsRequestAudioFocus(Z)V

    .line 3153
    :cond_10
    const-string v2, "support_kk_vt_tablet_multiwindow"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_11

    invoke-static {}, Lcom/android/phone/PhoneUtils;->isCameraAppRunning()Z

    move-result v2

    if-eqz v2, :cond_11

    .line 3154
    invoke-static {}, Lcom/android/phone/PhoneUtils;->moveCameraTaskToFront()Z

    .line 3157
    :cond_11
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mAudioFocusListener:Landroid/media/AudioManager$OnAudioFocusChangeListener;

    .line 3158
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    .line 3159
    iput-object v7, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    .line 3161
    return-void

    .end local v0           #app:Lcom/android/phone/PhoneGlobals;
    .end local v1           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    :cond_12
    move v2, v4

    .line 3029
    goto/16 :goto_0

    .line 3037
    .restart local v0       #app:Lcom/android/phone/PhoneGlobals;
    :cond_13
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    .restart local v1       #state:Lcom/android/internal/telephony/PhoneConstants$State;
    goto/16 :goto_1

    .line 3111
    :cond_14
    const-string v2, "kor_cs_vt_ui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_15

    .line 3112
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    if-eqz v2, :cond_b

    .line 3113
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mAudioManager:Landroid/media/AudioManager;

    invoke-virtual {v2}, Landroid/media/AudioManager;->getMode()I

    move-result v2

    const/4 v5, 0x3

    if-eq v2, v5, :cond_b

    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v2

    if-eqz v2, :cond_b

    .line 3115
    invoke-static {p0, v4, v3}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    goto/16 :goto_2

    .line 3119
    :cond_15
    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v2

    if-eqz v2, :cond_b

    .line 3120
    invoke-static {p0, v4, v3}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    goto/16 :goto_2
.end method

.method onDialerClose()V
    .locals 2

    .prologue
    .line 8952
    const-string v1, "onDialerClose()..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8953
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->hideDTMFDialpad()V

    .line 8955
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    .line 8957
    .local v0, app:Lcom/android/phone/PhoneGlobals;
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/phone/PhoneGlobals;->pokeUserActivity()V

    .line 8958
    return-void
.end method

.method onDialerOpen()V
    .locals 1

    .prologue
    .line 8939
    const-string v0, "onDialerOpen()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 8942
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->pokeUserActivity()V

    .line 8944
    return-void
.end method

.method public onGrabbedStateChange(Landroid/view/View;I)V
    .locals 2
    .parameter "v"
    .parameter "grabbedState"

    .prologue
    .line 13972
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onGrabbedStateChange: grabbedState "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13975
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_0

    .line 13976
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v0

    sget-object v1, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v0, v1, :cond_0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v0, 0x7f0a03d5

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    if-ne v1, v0, :cond_0

    .line 13979
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 13980
    if-lez p2, :cond_1

    .line 13981
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v1, 0x3e4ccccd

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setAlpha(F)V

    .line 13982
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0}, Landroid/widget/Button;->invalidate()V

    .line 13991
    :cond_0
    :goto_0
    return-void

    .line 13985
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const/high16 v1, 0x3f80

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setAlpha(F)V

    .line 13986
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    invoke-virtual {v0}, Landroid/widget/Button;->invalidate()V

    goto :goto_0
.end method

.method public onImageLoadComplete(ILandroid/graphics/drawable/Drawable;Landroid/graphics/Bitmap;Ljava/lang/Object;)V
    .locals 9
    .parameter
    .parameter
    .parameter
    .parameter

    .prologue
    const/4 v8, 0x2

    const/4 v7, 0x0

    const v6, 0x7f02020f

    const/4 v5, 0x1

    const/4 v4, 0x0

    .line 13453
    const-string v0, "onImageLoadComplete()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13455
    check-cast p4, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;

    .line 13456
    iget-object v0, p4, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;->callerInfo:Lcom/android/internal/telephony/CallerInfo;

    .line 13457
    iget-object v1, p4, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;->imageView:Landroid/widget/ImageView;

    .line 13458
    iget-object v2, p4, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;->smallImageView:Landroid/widget/ImageView;

    .line 13459
    iget v3, p4, Lcom/android/phone/InVTCallScreen$AsyncLoadCookie;->currentState:I

    .line 13461
    iput-object p2, v0, Lcom/android/internal/telephony/CallerInfo;->cachedPhoto:Landroid/graphics/drawable/Drawable;

    .line 13462
    iput-object p3, v0, Lcom/android/internal/telephony/CallerInfo;->cachedPhotoIcon:Landroid/graphics/Bitmap;

    .line 13463
    iput-boolean v5, v0, Lcom/android/internal/telephony/CallerInfo;->isCachedPhotoCurrent:Z

    .line 13467
    if-eqz p2, :cond_1

    .line 13468
    iput-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mUseSavedContactImage:Z

    .line 13469
    invoke-direct {p0, v1, v2, p2}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/graphics/drawable/Drawable;)V

    .line 13516
    :goto_0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mUseSavedContactImage:Z

    if-eqz v0, :cond_a

    .line 13517
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v0, :cond_9

    .line 13518
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v0}, Lcom/android/phone/FrameAnimationForVT;->stop()V

    .line 13523
    :goto_1
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 13524
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    .line 13553
    :cond_0
    :goto_2
    return-void

    .line 13470
    :cond_1
    if-eqz p3, :cond_2

    .line 13471
    iput-boolean v5, p0, Lcom/android/phone/InVTCallScreen;->mUseSavedContactImage:Z

    .line 13472
    invoke-direct {p0, v1, v2, p3}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/graphics/Bitmap;)V

    goto :goto_0

    .line 13474
    :cond_2
    iput-boolean v7, p0, Lcom/android/phone/InVTCallScreen;->mUseSavedContactImage:Z

    .line 13475
    sparse-switch v3, :sswitch_data_0

    .line 13511
    const-string v0, "onImageLoadComplete() default caller id is not correctly set"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 13477
    :sswitch_0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_3

    .line 13478
    invoke-direct {p0, v1, v4, v6}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto :goto_0

    .line 13481
    :cond_3
    const v0, 0x7f020203

    invoke-direct {p0, v1, v4, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto :goto_0

    .line 13485
    :sswitch_1
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_5

    .line 13486
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_4

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_4

    .line 13487
    const v0, 0x7f0202b5

    invoke-direct {p0, v1, v4, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto :goto_0

    .line 13489
    :cond_4
    invoke-direct {p0, v1, v4, v6}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto :goto_0

    .line 13492
    :cond_5
    const v0, 0x7f020204

    invoke-direct {p0, v1, v2, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto :goto_0

    .line 13496
    :sswitch_2
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_8

    .line 13497
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_6

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_6

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_6

    .line 13498
    const v0, 0x7f0202b5

    invoke-direct {p0, v1, v4, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto/16 :goto_0

    .line 13500
    :cond_6
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    if-ne v0, v8, :cond_7

    .line 13501
    invoke-direct {p0, v1, v4, v6}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto/16 :goto_0

    .line 13503
    :cond_7
    const v0, 0x7f0202b4

    invoke-direct {p0, v1, v4, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto/16 :goto_0

    .line 13507
    :cond_8
    const v0, 0x7f0201f4

    invoke-direct {p0, v1, v2, v0}, Lcom/android/phone/InVTCallScreen;->showContactImage(Landroid/widget/ImageView;Landroid/widget/ImageView;I)V

    goto/16 :goto_0

    .line 13521
    :cond_9
    invoke-static {}, Lcom/android/phone/FrameAnimationForVT;->cancelAndClearPreCaching()V

    goto/16 :goto_1

    .line 13527
    :cond_a
    if-ne v3, v8, :cond_0

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_0

    .line 13528
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v0, :cond_b

    .line 13529
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v0}, Lcom/android/phone/FrameAnimationForVT;->stop()V

    .line 13531
    :cond_b
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 13532
    iput-object v4, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    .line 13534
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingAnimation:[I

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    .line 13535
    const-string v0, "caller_animation_small_images"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 13536
    const v0, 0x7f0a03e2

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    .line 13537
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    if-eqz v2, :cond_c

    if-eqz v1, :cond_c

    if-eqz v0, :cond_c

    .line 13538
    invoke-virtual {v1, v4}, Landroid/widget/ImageView;->setImageDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 13539
    invoke-virtual {v0, v7}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 13541
    new-instance v1, Lcom/android/phone/FrameAnimationForVT;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    const/4 v3, 0x5

    invoke-direct {v1, v0, v2, v3}, Lcom/android/phone/FrameAnimationForVT;-><init>(Landroid/widget/ImageView;[II)V

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    .line 13548
    :cond_c
    :goto_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    if-eqz v0, :cond_0

    .line 13549
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    invoke-virtual {v0}, Lcom/android/phone/FrameAnimationForVT;->start()V

    goto/16 :goto_2

    .line 13544
    :cond_d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    if-eqz v0, :cond_c

    if-eqz v1, :cond_c

    .line 13545
    new-instance v0, Lcom/android/phone/FrameAnimationForVT;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimationList:[I

    const/4 v3, 0x5

    invoke-direct {v0, v1, v2, v3}, Lcom/android/phone/FrameAnimationForVT;-><init>(Landroid/widget/ImageView;[II)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingCallAnimation:Lcom/android/phone/FrameAnimationForVT;

    goto :goto_3

    .line 13475
    nop

    :sswitch_data_0
    .sparse-switch
        0x1 -> :sswitch_0
        0x2 -> :sswitch_2
        0xa -> :sswitch_1
    .end sparse-switch
.end method

.method public onKeyDown(ILandroid/view/KeyEvent;)Z
    .locals 12
    .parameter "keyCode"
    .parameter "event"

    .prologue
    .line 4375
    sparse-switch p1, :sswitch_data_0

    .line 4552
    :cond_0
    :sswitch_0
    invoke-virtual {p2}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v10

    if-nez v10, :cond_13

    invoke-direct {p0, p1, p2}, Lcom/android/phone/InVTCallScreen;->handleDialerKeyDown(ILandroid/view/KeyEvent;)Z

    move-result v10

    if-eqz v10, :cond_13

    .line 4553
    const/4 v10, 0x1

    .line 4556
    :goto_0
    return v10

    .line 4377
    :sswitch_1
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->handleCallKey()Z

    move-result v2

    .line 4378
    .local v2, handled:Z
    if-nez v2, :cond_1

    .line 4379
    const-string v10, "InVTCallScreen"

    const-string v11, "InVTCallScreen should always handle KEYCODE_CALL in onKeyDown"

    invoke-static {v10, v11}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4384
    :cond_1
    const/4 v10, 0x1

    goto :goto_0

    .line 4396
    .end local v2           #handled:Z
    :sswitch_2
    const/4 v10, 0x1

    goto :goto_0

    .line 4400
    :sswitch_3
    const/4 v10, 0x1

    goto :goto_0

    .line 4405
    :sswitch_4
    const-string v10, "feature_chn_duos"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_3

    .line 4406
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v10}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v6

    .line 4410
    .local v6, state:Lcom/android/internal/telephony/PhoneConstants$State;
    :goto_1
    sget-object v10, Lcom/android/internal/telephony/PhoneConstants$State;->RINGING:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v6, v10, :cond_8

    .line 4422
    const-string v10, "InVTCallScreen"

    const-string v11, "VOLUME key: incoming call is ringing! (PhoneWindowManager should have handled this key.)"

    invoke-static {v10, v11}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4427
    const-string v10, "feature_chn_duos"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_5

    .line 4428
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v10}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v10

    if-nez v10, :cond_4

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v10

    iget-object v5, v10, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .line 4437
    .local v5, notifier:Lcom/android/phone/CallNotifier;
    :goto_2
    invoke-virtual {v5}, Lcom/android/phone/CallNotifier;->isRinging()Z

    move-result v10

    if-eqz v10, :cond_2

    .line 4438
    const-string v10, "VOLUME key: silence ringer"

    invoke-direct {p0, v10}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4439
    invoke-virtual {v5}, Lcom/android/phone/CallNotifier;->silenceRinger()V

    .line 4444
    :cond_2
    const/4 v10, 0x1

    goto :goto_0

    .line 4408
    .end local v5           #notifier:Lcom/android/phone/CallNotifier;
    .end local v6           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    :cond_3
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v10}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v6

    .restart local v6       #state:Lcom/android/internal/telephony/PhoneConstants$State;
    goto :goto_1

    .line 4428
    :cond_4
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v10

    iget-object v5, v10, Lcom/android/phone/PhoneGlobals;->notifier2:Lcom/android/phone/CallNotifier;

    goto :goto_2

    .line 4430
    :cond_5
    const-string v10, "sec_product_feature_common_dsds_support"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_6

    .line 4431
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v10

    iget-object v10, v10, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v11, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v11}, Lcom/android/phone/PhoneUtilsDsds;->getSubscription(Lcom/android/internal/telephony/Phone;)I

    move-result v11

    aget-object v5, v10, v11

    .restart local v5       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_2

    .line 4432
    .end local v5           #notifier:Lcom/android/phone/CallNotifier;
    :cond_6
    const-string v10, "feature_multisim"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_7

    .line 4433
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v10

    iget-object v10, v10, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v11, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v11}, Lcom/android/internal/telephony/Phone;->getSimSlot()I

    move-result v11

    aget-object v5, v10, v11

    .restart local v5       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_2

    .line 4435
    .end local v5           #notifier:Lcom/android/phone/CallNotifier;
    :cond_7
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v10

    iget-object v5, v10, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .restart local v5       #notifier:Lcom/android/phone/CallNotifier;
    goto :goto_2

    .line 4447
    .end local v5           #notifier:Lcom/android/phone/CallNotifier;
    :cond_8
    const-string v10, "volume_panel"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_0

    .line 4448
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v10}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v10

    sget-object v11, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v10, v11, :cond_0

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->IsItPossibleShowVolumePanel()Z

    move-result v10

    const/4 v11, 0x1

    if-ne v10, v11, :cond_0

    .line 4449
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v10

    const-string v11, "audio"

    invoke-virtual {v10, v11}, Lcom/android/phone/PhoneGlobals;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/media/AudioManager;

    .line 4450
    .local v4, mAudioManager:Landroid/media/AudioManager;
    const/16 v7, 0xb

    .line 4451
    .local v7, stream:I
    const/4 v8, 0x0

    .line 4452
    .local v8, volume:I
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/phone/PhoneGlobals;->isBluetoothHeadsetAudioOn()Z

    move-result v10

    if-eqz v10, :cond_a

    const/4 v7, 0x6

    .line 4453
    :goto_3
    invoke-virtual {v4, v7}, Landroid/media/AudioManager;->getStreamVolume(I)I

    move-result v8

    .line 4455
    const/16 v10, 0x18

    if-ne p1, v10, :cond_b

    .line 4456
    add-int/lit8 v8, v8, 0x1

    invoke-direct {p0, v8}, Lcom/android/phone/InVTCallScreen;->setVolume(I)V

    .line 4460
    :cond_9
    :goto_4
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4452
    :cond_a
    const/16 v7, 0xb

    goto :goto_3

    .line 4457
    :cond_b
    const/16 v10, 0x19

    if-ne p1, v10, :cond_9

    .line 4458
    add-int/lit8 v8, v8, -0x1

    invoke-direct {p0, v8}, Lcom/android/phone/InVTCallScreen;->setVolume(I)V

    goto :goto_4

    .line 4469
    .end local v4           #mAudioManager:Landroid/media/AudioManager;
    .end local v6           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    .end local v7           #stream:I
    .end local v8           #volume:I
    :sswitch_5
    const-string v10, "feature_chn_duos"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_d

    .line 4470
    iget-object v11, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v10}, Lcom/android/phone/PhoneUtils;->getMute(Lcom/android/internal/telephony/Phone;)Z

    move-result v10

    if-nez v10, :cond_c

    const/4 v10, 0x1

    :goto_5
    invoke-static {v11, v10}, Lcom/android/phone/PhoneUtils;->setMute(Lcom/android/internal/telephony/Phone;Z)V

    .line 4474
    :goto_6
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4470
    :cond_c
    const/4 v10, 0x0

    goto :goto_5

    .line 4472
    :cond_d
    invoke-static {}, Lcom/android/phone/PhoneUtils;->getMute()Z

    move-result v10

    if-nez v10, :cond_e

    const/4 v10, 0x1

    :goto_7
    invoke-static {v10}, Lcom/android/phone/PhoneUtils;->setMute(Z)V

    goto :goto_6

    :cond_e
    const/4 v10, 0x0

    goto :goto_7

    .line 4478
    :sswitch_6
    sget-boolean v10, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v10, :cond_0

    .line 4479
    const-string v10, "----------- InVTCallScreen View dump --------------"

    invoke-direct {p0, v10}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4482
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v9

    .line 4483
    .local v9, w:Landroid/view/Window;
    invoke-virtual {v9}, Landroid/view/Window;->getDecorView()Landroid/view/View;

    move-result-object v0

    .line 4484
    .local v0, decorView:Landroid/view/View;
    invoke-virtual {v0}, Landroid/view/View;->debug()V

    .line 4485
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4489
    .end local v0           #decorView:Landroid/view/View;
    .end local v9           #w:Landroid/view/Window;
    :sswitch_7
    sget-boolean v10, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v10, :cond_0

    .line 4490
    const-string v10, "----------- InVTCallScreen call state dump --------------"

    invoke-direct {p0, v10}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4491
    invoke-static {}, Lcom/android/phone/PhoneUtils;->dumpCallManager()V

    .line 4492
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4496
    :sswitch_8
    sget-boolean v10, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v10, :cond_0

    .line 4498
    const-string v10, "------------ Temp testing -----------------"

    invoke-direct {p0, v10}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4499
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4506
    :sswitch_9
    const-string v10, "feature_chn_duos"

    invoke-static {v10}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_11

    .line 4507
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v10}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v10

    if-nez v10, :cond_10

    const/4 v3, 0x1

    .line 4511
    .local v3, hasActiveRingingCall:Z
    :goto_8
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getBaseContext()Landroid/content/Context;

    move-result-object v10

    invoke-static {v10}, Lcom/android/phone/PhoneUtils;->isAnyKeyMode(Landroid/content/Context;)Z

    move-result v10

    if-eqz v10, :cond_f

    if-eqz v3, :cond_f

    .line 4513
    :try_start_0
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mWindowManager:Landroid/view/IWindowManager;

    invoke-interface {v10}, Landroid/view/IWindowManager;->isCoverOpen()Z

    move-result v10

    if-eqz v10, :cond_f

    .line 4514
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->handleCallKey()Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 4520
    :cond_f
    :goto_9
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4507
    .end local v3           #hasActiveRingingCall:Z
    :cond_10
    const/4 v3, 0x0

    goto :goto_8

    .line 4509
    :cond_11
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v10}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v3

    .restart local v3       #hasActiveRingingCall:Z
    goto :goto_8

    .line 4516
    :catch_0
    move-exception v1

    .line 4517
    .local v1, e:Ljava/lang/Exception;
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V

    goto :goto_9

    .line 4526
    .end local v1           #e:Ljava/lang/Exception;
    .end local v3           #hasActiveRingingCall:Z
    :sswitch_a
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getBaseContext()Landroid/content/Context;

    move-result-object v10

    invoke-static {v10}, Lcom/android/phone/PhoneUtils;->isAnyKeyMode(Landroid/content/Context;)Z

    move-result v10

    if-eqz v10, :cond_0

    .line 4527
    const/4 v10, 0x5

    invoke-virtual {p0, v10, p2}, Lcom/android/phone/InVTCallScreen;->onKeyDown(ILandroid/view/KeyEvent;)Z

    .line 4528
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4543
    :sswitch_b
    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v10, :cond_0

    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v10}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v10

    if-nez v10, :cond_0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v10

    if-eqz v10, :cond_0

    .line 4544
    iget-boolean v10, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v10, :cond_12

    iget-object v10, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v10, v10, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v10, v10, Lcom/android/phone/InVTCallState;->showDialpad:Z

    if-nez v10, :cond_12

    .line 4545
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->showDTMFDialpad()V

    .line 4547
    :cond_12
    const/4 v10, 0x1

    goto/16 :goto_0

    .line 4556
    :cond_13
    invoke-super {p0, p1, p2}, Landroid/app/Activity;->onKeyDown(ILandroid/view/KeyEvent;)Z

    move-result v10

    goto/16 :goto_0

    .line 4375
    :sswitch_data_0
    .sparse-switch
        0x3 -> :sswitch_9
        0x5 -> :sswitch_1
        0x7 -> :sswitch_b
        0x8 -> :sswitch_b
        0x9 -> :sswitch_b
        0xa -> :sswitch_b
        0xb -> :sswitch_b
        0xc -> :sswitch_b
        0xd -> :sswitch_b
        0xe -> :sswitch_b
        0xf -> :sswitch_b
        0x10 -> :sswitch_b
        0x11 -> :sswitch_b
        0x12 -> :sswitch_b
        0x13 -> :sswitch_a
        0x14 -> :sswitch_a
        0x15 -> :sswitch_a
        0x16 -> :sswitch_a
        0x17 -> :sswitch_a
        0x18 -> :sswitch_4
        0x19 -> :sswitch_4
        0x1b -> :sswitch_2
        0x44 -> :sswitch_8
        0x46 -> :sswitch_7
        0x4c -> :sswitch_6
        0x52 -> :sswitch_0
        0x5b -> :sswitch_5
        0x101 -> :sswitch_3
    .end sparse-switch
.end method

.method public onKeyUp(ILandroid/view/KeyEvent;)Z
    .locals 1
    .parameter "keyCode"
    .parameter "event"

    .prologue
    .line 4369
    invoke-super {p0, p1, p2}, Landroid/app/Activity;->onKeyUp(ILandroid/view/KeyEvent;)Z

    move-result v0

    return v0
.end method

.method public onLongClick(Landroid/view/View;)Z
    .locals 4
    .parameter "v"

    .prologue
    const/4 v3, 0x1

    .line 9560
    const-string v1, "Inside onLongClick condition"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9561
    invoke-virtual {p1}, Landroid/view/View;->getId()I

    move-result v0

    .line 9562
    .local v0, widgetId:I
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Value of widgetId"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9563
    packed-switch v0, :pswitch_data_0

    .line 9578
    :goto_0
    return v3

    .line 9568
    :pswitch_0
    iget v1, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_0

    .line 9569
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->isMO_Disconnect:Z

    .line 9570
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->stopVTCall()V

    goto :goto_0

    .line 9572
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->internalPhoneHangup()V

    goto :goto_0

    .line 9563
    nop

    :pswitch_data_0
    .packed-switch 0x7f0a0363
        :pswitch_0
    .end packed-switch
.end method

.method public onMenuItemClick(Landroid/view/MenuItem;)Z
    .locals 2
    .parameter "item"

    .prologue
    .line 7805
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "- onMenuItemClick: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7806
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  id: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-interface {p1}, Landroid/view/MenuItem;->getItemId()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7807
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  title: \'"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-interface {p1}, Landroid/view/MenuItem;->getTitle()Ljava/lang/CharSequence;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "\'"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7808
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    .line 7809
    :goto_0
    return v0

    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v0, p1}, Lcom/android/phone/InCSVTCallMenu;->optionsItemSelected(Landroid/view/MenuItem;)Z

    move-result v0

    goto :goto_0
.end method

.method public onModeChanged(Z)V
    .locals 2
    .parameter "isMultiWindowMode"

    .prologue
    .line 3593
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onModeChanged : isMultiWindowMode = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3594
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initInVTCallScreen()V

    .line 3595
    return-void
.end method

.method protected onNewIntent(Landroid/content/Intent;)V
    .locals 5
    .parameter

    .prologue
    const/4 v2, 0x0

    const/4 v1, 0x1

    .line 3380
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onNewIntent: intent="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3383
    const-string v0, "ro.product.name"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v3, "superior"

    invoke-virtual {v0, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3384
    new-instance v0, Landroid/content/Intent;

    const-string v3, "intent.stop.app-in-app"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->sendBroadcast(Landroid/content/Intent;)V

    .line 3398
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/phone/InVTCallScreen;->setIntent(Landroid/content/Intent;)V

    .line 3407
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 3409
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->hasVideoCallConnection(Lcom/android/internal/telephony/Phone;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 3410
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_1

    const-string v0, "InVTCallScreen::onNewIntent(): already has video call,do not update mPhone"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3411
    :cond_1
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    const-string v3, "android.intent.action.CALL"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    const-string v3, "android.intent.action.CALL_EMERGENCY"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 3412
    :cond_2
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_3

    const-string v0, "InVTCallScreen::onNewIntent(): already has video call,do not make video call"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3413
    :cond_3
    const v0, 0x7f0901a4

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->showGenericErrorDialog(IZ)V

    .line 3473
    :cond_4
    :goto_0
    return-void

    .line 3417
    :cond_5
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getVTPhone()Lcom/android/internal/telephony/Phone;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setPhone(Lcom/android/internal/telephony/Phone;)V

    .line 3418
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v0, :cond_6

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "InVTCallScreen::onNewIntent(): mPhone is updated with Index: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3422
    :cond_6
    invoke-virtual {p0, p1}, Lcom/android/phone/InVTCallScreen;->internalResolveIntent(Landroid/content/Intent;)V

    .line 3424
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallState;->hasPendingCallStatusCode()Z

    move-result v0

    if-eqz v0, :cond_a

    .line 3425
    const-string v0, "InVTCallScreen"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "onNewIntent: status "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v4, v4, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v4}, Lcom/android/phone/InVTCallState;->getPendingCallStatusCode()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " from internalResolveIntent()"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3447
    :cond_7
    :goto_1
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 3448
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v0

    if-nez v0, :cond_c

    move v0, v1

    .line 3449
    :goto_2
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v3

    if-nez v3, :cond_8

    move v2, v1

    .line 3455
    :cond_8
    :goto_3
    if-eqz v2, :cond_f

    .line 3458
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 3459
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    .line 3464
    :goto_4
    sget-object v1, Lcom/android/internal/telephony/Call$State;->DIALING:Lcom/android/internal/telephony/Call$State;

    if-eq v0, v1, :cond_9

    sget-object v1, Lcom/android/internal/telephony/Call$State;->ALERTING:Lcom/android/internal/telephony/Call$State;

    if-ne v0, v1, :cond_4

    .line 3465
    :cond_9
    const/4 v0, 0x2

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    .line 3466
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_4

    .line 3467
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOutgoingAnimation:[I

    invoke-static {v0}, Lcom/android/phone/FrameAnimationForVT;->preCaching([I)V

    goto/16 :goto_0

    .line 3429
    :cond_a
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "onNewIntent(): Bluetooth:: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3430
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothPhone:Landroid/bluetooth/IBluetoothHeadsetPhone;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    if-nez v0, :cond_b

    .line 3434
    const-string v0, "onNewIntent: BluetoothAdapter.getDefaultAdapter()"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3435
    invoke-static {}, Landroid/bluetooth/BluetoothAdapter;->getDefaultAdapter()Landroid/bluetooth/BluetoothAdapter;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    .line 3436
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    if-eqz v0, :cond_7

    .line 3437
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mAdapter:Landroid/bluetooth/BluetoothAdapter;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v3

    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->mBluetoothProfileServiceListener:Landroid/bluetooth/BluetoothProfile$ServiceListener;

    invoke-virtual {v0, v3, v4, v1}, Landroid/bluetooth/BluetoothAdapter;->getProfileProxy(Landroid/content/Context;Landroid/bluetooth/BluetoothProfile$ServiceListener;I)Z

    goto/16 :goto_1

    .line 3440
    :cond_b
    const-string v0, "onNewIntent: mBluetoothPhone is null or mAdapter is not null"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_1

    :cond_c
    move v0, v2

    .line 3448
    goto :goto_2

    .line 3451
    :cond_d
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->hasActiveRingingCall()Z

    move-result v0

    .line 3452
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z

    move-result v2

    goto :goto_3

    .line 3461
    :cond_e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCallState()Lcom/android/internal/telephony/Call$State;

    move-result-object v0

    goto :goto_4

    .line 3470
    :cond_f
    if-eqz v0, :cond_4

    .line 3471
    iput v1, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    goto/16 :goto_0
.end method

.method public onOpenCloseDialpad()V
    .locals 1

    .prologue
    .line 14274
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_0

    .line 14275
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->isOpened()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 14276
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->hideDTMFDialpad()V

    .line 14281
    :cond_0
    :goto_0
    return-void

    .line 14278
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->showDTMFDialpad()V

    goto :goto_0
.end method

.method public onOptionsItemSelected(Landroid/view/MenuItem;)Z
    .locals 1
    .parameter "item"

    .prologue
    .line 12454
    invoke-super {p0, p1}, Landroid/app/Activity;->onOptionsItemSelected(Landroid/view/MenuItem;)Z

    .line 12455
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    .line 12456
    :goto_0
    return v0

    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v0, p1}, Lcom/android/phone/InCSVTCallMenu;->optionsItemSelected(Landroid/view/MenuItem;)Z

    move-result v0

    goto :goto_0
.end method

.method public onPanelClosed(ILandroid/view/Menu;)V
    .locals 2
    .parameter "featureId"
    .parameter "menu"

    .prologue
    .line 9126
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onPanelClosed(featureId = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ")..."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9128
    invoke-super {p0, p1, p2}, Landroid/app/Activity;->onPanelClosed(ILandroid/view/Menu;)V

    .line 9129
    return-void
.end method

.method protected onPause()V
    .locals 8

    .prologue
    const/16 v4, 0x6c

    const/4 v7, 0x0

    const/4 v6, 0x1

    .line 2856
    const-string v2, "InVTCallScreen"

    const-string v3, "onPause()..."

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2857
    invoke-super {p0}, Landroid/app/Activity;->onPause()V

    .line 2859
    const-string v2, "clear_cover"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 2860
    const-string v2, "unregsiter coverManager "

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2861
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    if-eqz v2, :cond_0

    .line 2862
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v3, v3, Lcom/android/phone/PhoneGlobals;->mCoverStateListener:Lcom/samsung/android/sdk/cover/ScoverManager$StateListener;

    invoke-virtual {v2, v3}, Lcom/samsung/android/sdk/cover/ScoverManager;->unregisterListener(Lcom/samsung/android/sdk/cover/ScoverManager$StateListener;)V

    .line 2865
    :cond_0
    iput-boolean v7, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    .line 2867
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    .line 2871
    .local v0, app:Lcom/android/phone/PhoneGlobals;
    invoke-virtual {v0, v7}, Lcom/android/phone/PhoneGlobals;->setBeginningCall(Z)V

    .line 2892
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v2, v4}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->checkForCleanupState()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 2894
    const-string v2, "DELAYED_CLEANUP_AFTER_DISCONNECT detected, moving UI to background."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2895
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v2, v4}, Landroid/os/Handler;->removeMessages(I)V

    .line 2896
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->delayedCleanupAfterDisconnect()V

    .line 2901
    :cond_1
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->dismissMenu(Z)V

    .line 2914
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v2, v3, :cond_7

    .line 2915
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dismissAllDialogs()V

    .line 2922
    :goto_0
    iget-object v2, v0, Lcom/android/phone/PhoneGlobals;->notificationMgr:Lcom/android/phone/NotificationMgr;

    iget-object v2, v2, Lcom/android/phone/NotificationMgr;->statusBarHelper:Lcom/android/phone/NotificationMgr$StatusBarHelper;

    invoke-virtual {v2, v6}, Lcom/android/phone/NotificationMgr$StatusBarHelper;->enableExpandedView(Z)V

    .line 2923
    iget-object v2, v0, Lcom/android/phone/PhoneGlobals;->notificationMgr:Lcom/android/phone/NotificationMgr;

    invoke-virtual {v2}, Lcom/android/phone/NotificationMgr;->updateInCallNotification()V

    .line 2924
    iget-object v2, v0, Lcom/android/phone/PhoneGlobals;->notificationMgr:Lcom/android/phone/NotificationMgr;

    iget-object v2, v2, Lcom/android/phone/NotificationMgr;->statusBarHelper:Lcom/android/phone/NotificationMgr$StatusBarHelper;

    invoke-virtual {v2, v6}, Lcom/android/phone/NotificationMgr$StatusBarHelper;->enableSystemBarNavigation(Z)V

    .line 2931
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    new-instance v3, Lcom/android/phone/InVTCallScreen$10;

    invoke-direct {v3, p0}, Lcom/android/phone/InVTCallScreen$10;-><init>(Lcom/android/phone/InVTCallScreen;)V

    const-wide/16 v4, 0x1f4

    invoke-virtual {v2, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 2940
    const-string v2, "feature_chn_duos"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_8

    .line 2941
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    .line 2946
    .local v1, state:Lcom/android/internal/telephony/PhoneConstants$State;
    :goto_1
    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_2

    .line 2947
    const-string v2, "not_show_call_view_statusbar"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_2

    .line 2948
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v3, 0xb6

    const-wide/16 v4, 0x2bc

    invoke-virtual {v2, v3, v4, v5}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 2952
    :cond_2
    const-string v2, "barge_in"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 2953
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBargeInRecognizer:Lcom/sec/android/app/IWSpeechRecognizer/BargeInRecognizer;

    if-eqz v2, :cond_3

    .line 2954
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mBargeInRecognizer:Lcom/sec/android/app/IWSpeechRecognizer/BargeInRecognizer;

    invoke-virtual {v2}, Lcom/sec/android/app/IWSpeechRecognizer/BargeInRecognizer;->stopBargeIn()V

    .line 2958
    :cond_3
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->enableKeyGuardLock()V

    .line 2959
    sget-object v2, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v1, v2, :cond_9

    .line 2960
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->updateKeyguardPolicy(Z)V

    .line 2965
    :goto_2
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    if-eqz v2, :cond_4

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    invoke-virtual {v2}, Landroid/app/ProgressDialog;->isShowing()Z

    move-result v2

    if-eqz v2, :cond_4

    .line 2966
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mProgressDialog:Landroid/app/ProgressDialog;

    invoke-virtual {v2}, Landroid/app/ProgressDialog;->cancel()V

    .line 2969
    :cond_4
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    if-eqz v2, :cond_5

    .line 2970
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPopup:Lcom/android/phone/PopupMenu;

    invoke-virtual {v2}, Lcom/android/phone/PopupMenu;->dismiss()V

    .line 2973
    :cond_5
    const-string v2, "barge_in"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 2974
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallBargeIn:Lcom/android/phone/CallBargeIn;

    invoke-virtual {v2}, Lcom/android/phone/CallBargeIn;->stopBargeIn()V

    .line 2976
    :cond_6
    return-void

    .line 2917
    .end local v1           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    :cond_7
    const-string v2, "it need to remain Dialog..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 2943
    :cond_8
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v2}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v1

    .restart local v1       #state:Lcom/android/internal/telephony/PhoneConstants$State;
    goto :goto_1

    .line 2962
    :cond_9
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->updateKeyguardPolicy(Z)V

    goto :goto_2
.end method

.method public onPrepareOptionsMenu(Landroid/view/Menu;)Z
    .locals 5
    .parameter "menu"

    .prologue
    const/4 v2, 0x0

    .line 12437
    const-string v3, "In onPrepareOptionsMenu"

    const/4 v4, 0x1

    invoke-direct {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 12438
    const-string v3, "feature_chn_duos"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 12439
    if-nez p1, :cond_1

    .line 12449
    :cond_0
    :goto_0
    return v2

    .line 12443
    :cond_1
    invoke-super {p0, p1}, Landroid/app/Activity;->onPrepareOptionsMenu(Landroid/view/Menu;)Z

    .line 12444
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    if-eqz v3, :cond_0

    .line 12445
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v3}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .line 12446
    .local v0, fgCall:Lcom/android/internal/telephony/Call;
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v3}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    .line 12448
    .local v1, rCall:Lcom/android/internal/telephony/Call;
    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->isIdle()Z

    move-result v3

    if-eqz v3, :cond_0

    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->isDialingOrAlerting()Z

    move-result v3

    if-nez v3, :cond_0

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v3}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v3

    sget-object v4, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v3, v4, :cond_0

    .line 12449
    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v2, p1}, Lcom/android/phone/InCSVTCallMenu;->prepareOptionsMenu(Landroid/view/Menu;)Z

    move-result v2

    goto :goto_0
.end method

.method public onQueryComplete(Lcom/android/phone/AdditionalCallerInfoAsyncQuery$AdditionalCallerInfo;)V
    .locals 4
    .parameter "additionalCallerInfo"

    .prologue
    .line 14773
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onQueryComplete : additionalCallerInfo = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14774
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_2

    .line 14776
    :cond_0
    if-eqz p1, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v0, :cond_3

    iget-object v0, p1, Lcom/android/phone/AdditionalCallerInfoAsyncQuery$AdditionalCallerInfo;->mStatus:Ljava/lang/String;

    if-nez v0, :cond_1

    iget-wide v0, p1, Lcom/android/phone/AdditionalCallerInfoAsyncQuery$AdditionalCallerInfo;->mRemainedDaysUntilBirthday:J

    const-wide/16 v2, -0x1

    cmp-long v0, v0, v2

    if-eqz v0, :cond_3

    .line 14778
    :cond_1
    const-string v0, "onQueryComplete : mSocialStatus set visible"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14779
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/phone/SocialStatus;->setVisibility(I)V

    .line 14787
    :cond_2
    :goto_0
    return-void

    .line 14782
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    if-eqz v0, :cond_2

    .line 14783
    const-string v0, "onQueryComplete : mSocialStatus set gone"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14784
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Lcom/android/phone/SocialStatus;->setVisibility(I)V

    goto :goto_0
.end method

.method protected onResume()V
    .locals 15

    .prologue
    .line 2541
    const-string v12, "InVTCallScreen"

    const-string v13, "onResume()..."

    invoke-static {v12, v13}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2542
    invoke-super {p0}, Landroid/app/Activity;->onResume()V

    .line 2544
    const-string v12, "clear_cover"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_0

    .line 2545
    const-string v12, "InVTCallScreen"

    const-string v13, "regist Scover listener"

    invoke-static {v12, v13}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2546
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v12, v12, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    if-eqz v12, :cond_0

    .line 2547
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v12, v12, Lcom/android/phone/PhoneGlobals;->mCoverManager:Lcom/samsung/android/sdk/cover/ScoverManager;

    iget-object v13, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v13, v13, Lcom/android/phone/PhoneGlobals;->mCoverStateListener:Lcom/samsung/android/sdk/cover/ScoverManager$StateListener;

    invoke-virtual {v12, v13}, Lcom/samsung/android/sdk/cover/ScoverManager;->registerListener(Lcom/samsung/android/sdk/cover/ScoverManager$StateListener;)V

    .line 2550
    :cond_0
    const-string v12, "ro.product.name"

    invoke-static {v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v12

    const-string v13, "superior"

    invoke-virtual {v12, v13}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v12

    if-eqz v12, :cond_1

    .line 2551
    new-instance v12, Landroid/content/Intent;

    const-string v13, "intent.stop.app-in-app"

    invoke-direct {v12, v13}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->sendBroadcast(Landroid/content/Intent;)V

    .line 2553
    :cond_1
    const-string v12, "kor_cs_vt_ui"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_2

    .line 2554
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v13, 0x6c

    invoke-virtual {v12, v13}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v12

    if-eqz v12, :cond_2

    .line 2555
    const-string v12, "DELAYED_CLEANUP_AFTER_DISCONNECT"

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2556
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "  mCM.getState() = "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-object v13, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v13}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2557
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "  mVTcalltype = "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget v13, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2558
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "  isVTManagerAlreadyStarted = "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    sget-boolean v13, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2559
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->delayedCleanupAfterDisconnect()V

    .line 2560
    const/4 v12, 0x0

    sput-boolean v12, Lcom/android/phone/InVTCallScreen;->isVTManagerAlreadyStarted:Z

    .line 2564
    :cond_2
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v12

    const/4 v13, 0x1

    invoke-virtual {v12, v13}, Lcom/android/phone/PhoneGlobals;->updateVTDuringCallWakeState(Z)V

    .line 2565
    const/4 v12, 0x1

    iput-boolean v12, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    .line 2566
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isOneHandOperationEnabled()Z

    move-result v12

    iput-boolean v12, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    .line 2568
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    .line 2570
    .local v0, app:Lcom/android/phone/PhoneGlobals;
    const-string v12, "support_kk_vt_tablet_multiwindow"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_3

    invoke-static {}, Lcom/android/phone/PhoneUtils;->isCameraAppRunning()Z

    move-result v12

    if-eqz v12, :cond_3

    .line 2571
    invoke-static {}, Lcom/android/phone/PhoneUtils;->moveCameraTaskToBack()Z

    .line 2583
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnected()Z

    move-result v1

    .line 2585
    .local v1, bluetoothConnected:Z
    iget-boolean v12, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v12, :cond_1b

    .line 2586
    sget-boolean v12, Lcom/android/phone/PhoneGlobals;->mIsDockConnected:Z

    if-eqz v12, :cond_1a

    .line 2587
    const-string v12, "onResume(): Dock Station is connected, UI set to Landscape "

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2588
    const/4 v12, 0x4

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->setRequestedOrientation(I)V

    .line 2589
    const-string v12, "window"

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/view/WindowManager;

    invoke-interface {v12}, Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;

    move-result-object v3

    .line 2590
    .local v3, display:Landroid/view/Display;
    invoke-virtual {v3}, Landroid/view/Display;->getRotation()I

    move-result v12

    sput v12, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    .line 2604
    .end local v3           #display:Landroid/view/Display;
    :goto_0
    const-string v12, "kor_cs_vt_ui"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_1d

    .line 2605
    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v12}, Lcom/android/phone/InVTCallState;->hasPendingCallStatusCode()Z

    move-result v12

    if-eqz v12, :cond_1c

    .line 2606
    const/4 v12, 0x1

    iput v12, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    .line 2607
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v12

    invoke-virtual {v12}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v2

    .line 2609
    .local v2, configuration:Landroid/content/res/Configuration;
    if-eqz v2, :cond_5

    .line 2610
    const-string v12, "tablet_device"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_4

    sget-boolean v12, Lcom/android/phone/PhoneGlobals;->mIsDockConnected:Z

    if-eqz v12, :cond_5

    .line 2612
    :cond_4
    iget v12, v2, Landroid/content/res/Configuration;->orientation:I

    iput v12, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    .line 2624
    .end local v2           #configuration:Landroid/content/res/Configuration;
    :cond_5
    :goto_1
    iget-boolean v12, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v12, :cond_6

    const-string v12, "support_kk_vt_tablet_multiwindow"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_6

    .line 2625
    const/4 v12, 0x0

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->setRequestedOrientation(I)V

    .line 2636
    :cond_6
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

    if-eqz v12, :cond_7

    .line 2637
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mRespondViaSmsManager:Lcom/android/phone/RespondViaSmsManager;

    invoke-virtual {v12}, Lcom/android/phone/RespondViaSmsManager;->dismissPopup()V

    .line 2640
    :cond_7
    if-eqz v1, :cond_1e

    .line 2641
    const-string v12, "onResume(): Bluetooth is connected "

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2642
    const/4 v12, 0x6

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->setVolumeControlStream(I)V

    .line 2667
    :goto_2
    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->notificationMgr:Lcom/android/phone/NotificationMgr;

    iget-object v12, v12, Lcom/android/phone/NotificationMgr;->statusBarHelper:Lcom/android/phone/NotificationMgr$StatusBarHelper;

    const/4 v13, 0x0

    invoke-virtual {v12, v13}, Lcom/android/phone/NotificationMgr$StatusBarHelper;->enableExpandedView(Z)V

    .line 2668
    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->notificationMgr:Lcom/android/phone/NotificationMgr;

    invoke-virtual {v12}, Lcom/android/phone/NotificationMgr;->updateInCallNotification()V

    .line 2671
    const-string v12, "feature_chn_duos"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_1f

    .line 2672
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v12}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v9

    .line 2676
    .local v9, state:Lcom/android/internal/telephony/PhoneConstants$State;
    :goto_3
    sget-object v12, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v9, v12, :cond_8

    .line 2677
    const-string v12, "not_show_call_view_statusbar"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_8

    .line 2678
    const-string v12, "statusbar"

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/app/StatusBarManager;

    .line 2685
    :cond_8
    iget-boolean v12, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v12, :cond_9

    .line 2686
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v12

    const-string v13, "emotional_eye_contact"

    const/4 v14, 0x1

    invoke-static {v12, v13, v14}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v12

    iput v12, p0, Lcom/android/phone/InVTCallScreen;->mEnableEyeContact:I

    .line 2689
    const/4 v12, 0x0

    iput v12, p0, Lcom/android/phone/InVTCallScreen;->mEnableEyeContact:I

    .line 2692
    :cond_9
    const/4 v12, 0x0

    iput-object v12, p0, Lcom/android/phone/InVTCallScreen;->mSocialStatus:Lcom/android/phone/SocialStatus;

    .line 2694
    const-string v12, "not_support_vt_multiwindow"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_a

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v12

    if-nez v12, :cond_a

    .line 2695
    const/4 v12, 0x1

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->setMultiwindowTrayDisable(Z)V

    .line 2708
    :cond_a
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "- onResume: initial status = "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-object v13, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v13}, Lcom/android/phone/InVTCallState;->getPendingCallStatusCode()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2709
    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v12}, Lcom/android/phone/InVTCallState;->hasPendingCallStatusCode()Z

    move-result v12

    if-eqz v12, :cond_20

    .line 2710
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "- onResume: failure during startup: "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-object v13, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v13}, Lcom/android/phone/InVTCallState;->getPendingCallStatusCode()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2715
    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-virtual {v12}, Lcom/android/phone/InVTCallState;->getPendingCallStatusCode()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->handleStartupError(Lcom/android/phone/InVTCallState$InVTCallInitStatus;)V

    .line 2732
    :goto_4
    const-string v12, "support_multi_window"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_c

    .line 2733
    const/4 v5, 0x0

    .line 2734
    .local v5, isKeyguardLocked:Z
    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v12

    if-eqz v12, :cond_b

    .line 2735
    invoke-virtual {v0}, Lcom/android/phone/PhoneGlobals;->getKeyguardManager()Landroid/app/KeyguardManager;

    move-result-object v12

    invoke-virtual {v12}, Landroid/app/KeyguardManager;->isKeyguardLocked()Z

    move-result v5

    .line 2736
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "app.getKeyguardManager().isKeyguardLocked()="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2739
    :cond_b
    if-eqz v5, :cond_c

    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v12, :cond_c

    .line 2740
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v12}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v12

    if-eqz v12, :cond_c

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v12

    if-nez v12, :cond_c

    .line 2741
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v12}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->normalWindow()V

    .line 2759
    .end local v5           #isKeyguardLocked:Z
    :cond_c
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->checkPresetImg()V

    .line 2766
    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v12, v12, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v13, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-eq v12, v13, :cond_d

    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v12, v12, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v13, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->OTA_ENDED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-eq v12, v13, :cond_d

    iget-object v12, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v12, v12, Lcom/android/phone/InVTCallState;->mInVTCallScreenMode:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    sget-object v13, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->EMPTY:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    if-eq v12, v13, :cond_d

    .line 2770
    sget-object v12, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->NORMAL:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    .line 2777
    :cond_d
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v12}, Lcom/android/internal/telephony/Phone;->clearDisconnected()V

    .line 2779
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->syncWithPhoneState()Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    move-result-object v10

    .line 2780
    .local v10, status:Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    sget-object v12, Lcom/android/phone/InVTCallState$InVTCallInitStatus;->SUCCESS:Lcom/android/phone/InVTCallState$InVTCallInitStatus;

    if-eq v10, v12, :cond_e

    .line 2781
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "- syncWithPhoneState failed! status = "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2789
    :cond_e
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v12

    const-class v13, Lcom/android/phone/InVTCallScreen;

    invoke-virtual {v13}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v13

    invoke-static {v12, v13}, Lcom/android/phone/Profiler;->profileViewCreate(Landroid/view/Window;Ljava/lang/String;)V

    .line 2790
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    const/4 v13, 0x0

    invoke-virtual {v12, v13}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v12

    if-eqz v12, :cond_f

    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    const/4 v13, 0x0

    invoke-virtual {v12, v13}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v12

    if-nez v12, :cond_10

    .line 2791
    :cond_f
    const-string v12, "Camera desabled due DPM\t- INTENT_MSG_SECURITY"

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2793
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    .line 2797
    :cond_10
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v12}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v12

    sget-object v13, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v12, v13, :cond_13

    .line 2798
    const-string v12, "not_show_call_view_statusbar"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_12

    .line 2799
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v13, 0xb6

    invoke-virtual {v12, v13}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v12

    if-eqz v12, :cond_11

    .line 2800
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v13, 0xb6

    invoke-virtual {v12, v13}, Landroid/os/Handler;->removeMessages(I)V

    .line 2802
    :cond_11
    const-string v12, "statusbar"

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/app/StatusBarManager;

    .line 2803
    .local v11, statusBar:Landroid/app/StatusBarManager;
    invoke-virtual {v11}, Landroid/app/StatusBarManager;->hideCallView()V

    .line 2805
    .end local v11           #statusBar:Landroid/app/StatusBarManager;
    :cond_12
    const-string v12, "feature_chn_duos"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_13

    .line 2806
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v12}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v12

    sget-object v13, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v12, v13, :cond_13

    .line 2807
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSimUI()V

    .line 2812
    :cond_13
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v12}, Lcom/android/internal/telephony/Phone;->getPendingMmiCodes()Ljava/util/List;

    move-result-object v12

    invoke-interface {v12}, Ljava/util/List;->isEmpty()Z

    move-result v12

    if-nez v12, :cond_16

    .line 2813
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    if-nez v12, :cond_16

    .line 2814
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v12}, Lcom/android/internal/telephony/Phone;->getPendingMmiCodes()Ljava/util/List;

    move-result-object v12

    const/4 v13, 0x0

    invoke-interface {v12, v13}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/telephony/MmiCode;

    .line 2815
    .local v8, mmiCode:Lcom/android/internal/telephony/MmiCode;
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v13, 0x35

    invoke-static {v12, v13}, Landroid/os/Message;->obtain(Landroid/os/Handler;I)Landroid/os/Message;

    move-result-object v7

    .line 2817
    .local v7, message:Landroid/os/Message;
    invoke-static {}, Lcom/android/phone/ECNUtils;->getInstance()Lcom/android/phone/ECNUtils;

    move-result-object v4

    .line 2818
    .local v4, ecnUtils:Lcom/android/phone/ECNUtils;
    if-eqz v4, :cond_14

    .line 2819
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "ecnUtils.getECNSentFlag(): "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v4}, Lcom/android/phone/ECNUtils;->getECNSentFlag()Z

    move-result v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " / ecnUtils.getECNUVRSentFlag(): "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v4}, Lcom/android/phone/ECNUtils;->getECNUVRSentFlag()Z

    move-result v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2821
    :cond_14
    const-string v12, "feature_ecn"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_15

    if-eqz v4, :cond_15

    invoke-virtual {v4}, Lcom/android/phone/ECNUtils;->getECNSentFlag()Z

    move-result v12

    if-nez v12, :cond_16

    invoke-virtual {v4}, Lcom/android/phone/ECNUtils;->getECNUVRSentFlag()Z

    move-result v12

    if-nez v12, :cond_16

    .line 2823
    :cond_15
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    invoke-static {p0, v8, v7, v12}, Lcom/android/phone/PhoneUtils;->displayMMIInitiate(Landroid/content/Context;Lcom/android/internal/telephony/MmiCode;Landroid/os/Message;Landroid/app/Dialog;)Landroid/app/Dialog;

    move-result-object v12

    iput-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMmiStartedDialog:Landroid/app/Dialog;

    .line 2831
    .end local v4           #ecnUtils:Lcom/android/phone/ECNUtils;
    .end local v7           #message:Landroid/os/Message;
    .end local v8           #mmiCode:Lcom/android/internal/telephony/MmiCode;
    :cond_16
    const-string v12, "barge_in"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_17

    .line 2832
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mCallBargeIn:Lcom/android/phone/CallBargeIn;

    invoke-virtual {v12}, Lcom/android/phone/CallBargeIn;->updateBargeInState()V

    .line 2835
    :cond_17
    const-string v12, "ssuport_hand_adapt_operation"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_18

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isHandAdaptEnabled()Z

    move-result v12

    if-nez v12, :cond_18

    .line 2836
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->getHandAdaptEnable()Z

    move-result v6

    .line 2837
    .local v6, mIsHandAdaptOn:Z
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "<< HKA start >> mIsHandAdaptOn : "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2839
    if-eqz v6, :cond_18

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v12

    if-nez v12, :cond_18

    iget-boolean v12, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v12, :cond_18

    .line 2840
    const-string v12, "Start CallHandGripChangeObserver start in onResume : VT "

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2841
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->registerCallHandGripChangeObserver()V

    .line 2842
    const/4 v12, 0x1

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->setHandGripCondition(Z)V

    .line 2846
    .end local v6           #mIsHandAdaptOn:Z
    :cond_18
    const-string v12, "video_call_audio_focus_enable"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_19

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isRequestAudioFocus()Z

    move-result v12

    if-nez v12, :cond_19

    .line 2847
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->requestAudioFocus()Z

    .line 2850
    :cond_19
    return-void

    .line 2592
    .end local v9           #state:Lcom/android/internal/telephony/PhoneConstants$State;
    .end local v10           #status:Lcom/android/phone/InVTCallState$InVTCallInitStatus;
    :cond_1a
    const-string v12, "onResume(): Dock Station is Not connected, UI set to Portrait"

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2593
    const/4 v12, 0x1

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->setRequestedOrientation(I)V

    goto/16 :goto_0

    .line 2596
    :cond_1b
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setCurrentOrientationState()V

    goto/16 :goto_0

    .line 2616
    :cond_1c
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v12

    invoke-virtual {v12}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v12

    iget v12, v12, Landroid/content/res/Configuration;->orientation:I

    iput v12, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    goto/16 :goto_1

    .line 2619
    :cond_1d
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v12

    invoke-virtual {v12}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v12

    iget v12, v12, Landroid/content/res/Configuration;->orientation:I

    iput v12, p0, Lcom/android/phone/InVTCallScreen;->mOrientation:I

    goto/16 :goto_1

    .line 2644
    :cond_1e
    const-string v12, "onResume(): Bluetooth is Not connected "

    invoke-direct {p0, v12}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2645
    const/16 v12, 0xb

    invoke-virtual {p0, v12}, Lcom/android/phone/InVTCallScreen;->setVolumeControlStream(I)V

    goto/16 :goto_2

    .line 2674
    :cond_1f
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v12}, Lcom/android/internal/telephony/CallManager;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v9

    .restart local v9       #state:Lcom/android/internal/telephony/PhoneConstants$State;
    goto/16 :goto_3

    .line 2724
    :cond_20
    const-string v12, "feature_kor_open"

    invoke-static {v12}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_21

    iget v12, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    const/4 v13, 0x3

    if-ne v12, v13, :cond_21

    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    if-eqz v12, :cond_21

    .line 2725
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v12}, Landroid/widget/LinearLayout;->requestLayout()V

    .line 2726
    iget-object v12, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v12}, Landroid/widget/LinearLayout;->invalidate()V

    goto/16 :goto_4

    .line 2728
    :cond_21
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->initInVTCallScreen()V

    goto/16 :goto_4
.end method

.method protected onSaveInstanceState(Landroid/os/Bundle;)V
    .locals 5
    .parameter "icicle"

    .prologue
    .line 2178
    const-string v4, "onSaveInstanceState()"

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2180
    const/4 v2, 0x0

    .line 2181
    .local v2, isFarOrNearEndRecord:B
    const-wide/16 v0, 0x0

    .line 2182
    .local v0, farEndOrNearEndRecordingTime:J
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v4

    if-eqz v4, :cond_2

    .line 2183
    const/4 v2, 0x1

    .line 2184
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v4, v4, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v0, v4, Lcom/android/phone/InVTCallState;->mRecordTimeFarEnd:J

    .line 2190
    :cond_0
    :goto_0
    new-instance v3, Lcom/android/phone/VTPreviousState;

    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v4

    if-eqz v4, :cond_3

    const/4 v4, 0x1

    :goto_1
    int-to-byte v4, v4

    invoke-direct {v3, v4}, Lcom/android/phone/VTPreviousState;-><init>(B)V

    .line 2192
    .local v3, vtState:Lcom/android/phone/VTPreviousState;
    if-eqz v3, :cond_1

    .line 2193
    const-string v4, "VTPreviousState"

    invoke-virtual {p1, v4, v3}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 2195
    :cond_1
    invoke-super {p0, p1}, Landroid/app/Activity;->onSaveInstanceState(Landroid/os/Bundle;)V

    .line 2196
    return-void

    .line 2185
    .end local v3           #vtState:Lcom/android/phone/VTPreviousState;
    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 2186
    const/4 v2, 0x2

    .line 2187
    iget-object v4, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v4, v4, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-wide v0, v4, Lcom/android/phone/InVTCallState;->mRecordTimeNearEnd:J

    goto :goto_0

    .line 2190
    :cond_3
    const/4 v4, 0x0

    goto :goto_1
.end method

.method public onSizeChanged(Landroid/graphics/Rect;)V
    .locals 2
    .parameter "rect"

    .prologue
    .line 3599
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onSizeChanged : rect = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3600
    return-void
.end method

.method protected onStop()V
    .locals 6

    .prologue
    const/4 v5, 0x0

    .line 2979
    const-string v3, "InVTCallScreen"

    const-string v4, "onStop()..."

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2980
    invoke-super {p0}, Landroid/app/Activity;->onStop()V

    .line 2982
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;

    move-result-object v2

    .line 2983
    .local v2, state:Lcom/android/internal/telephony/PhoneConstants$State;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "onStop: state = "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 2985
    const-string v3, "kor_cs_vt_network_operator"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 2987
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v3}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    .line 2988
    .local v0, call:Lcom/android/internal/telephony/Call;
    invoke-virtual {v0}, Lcom/android/internal/telephony/Call;->getState()Lcom/android/internal/telephony/Call$State;

    move-result-object v1

    .line 2990
    .local v1, callstate:Lcom/android/internal/telephony/Call$State;
    sget-object v3, Lcom/android/internal/telephony/Call$State;->INCOMING:Lcom/android/internal/telephony/Call$State;

    if-eq v1, v3, :cond_0

    sget-object v3, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    if-eqz v3, :cond_0

    .line 2992
    sget-object v3, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    invoke-virtual {v3}, Landroid/os/CountDownTimer;->cancel()V

    .line 2993
    const/4 v3, 0x0

    sput-object v3, Lcom/android/phone/PhoneUtilsExt;->mCANPToggleTimer:Landroid/os/CountDownTimer;

    .line 2998
    .end local v0           #call:Lcom/android/internal/telephony/Call;
    .end local v1           #callstate:Lcom/android/internal/telephony/Call$State;
    :cond_0
    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->OFFHOOK:Lcom/android/internal/telephony/PhoneConstants$State;

    if-eq v2, v3, :cond_1

    .line 2999
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    if-eqz v3, :cond_1

    .line 3000
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mCallTime:Lcom/android/phone/CallTime;

    invoke-virtual {v3}, Lcom/android/phone/CallTime;->cancelTimer()V

    .line 3004
    :cond_1
    sget-object v3, Lcom/android/internal/telephony/PhoneConstants$State;->IDLE:Lcom/android/internal/telephony/PhoneConstants$State;

    if-ne v2, v3, :cond_2

    .line 3005
    const-string v3, "Remove DIALOG_NORMAL_VOICE_CALL dialog"

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 3006
    const/4 v3, 0x4

    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->removeDialog(I)V

    .line 3009
    :cond_2
    const-string v3, "ssuport_hand_adapt_operation"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isHandAdaptEnabled()Z

    move-result v3

    if-eqz v3, :cond_3

    .line 3010
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->unregisterCallHandGripChangeObserver()V

    .line 3011
    invoke-virtual {p0, v5}, Lcom/android/phone/InVTCallScreen;->setIsHandAdaptEnabled(Z)V

    .line 3012
    invoke-direct {p0, v5}, Lcom/android/phone/InVTCallScreen;->setHandGripCondition(Z)V

    .line 3014
    :cond_3
    return-void
.end method

.method onSuppServiceFailed(Landroid/os/AsyncResult;)V
    .locals 4
    .parameter

    .prologue
    const/4 v3, 0x0

    .line 4564
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsForegroundActivity:Z

    if-nez v0, :cond_1

    .line 4565
    const-string v0, "onSuppServiceFailed: while not in foreground, so return without doing anything."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4617
    :cond_0
    :goto_0
    return-void

    .line 4568
    :cond_1
    iget-object v0, p1, Landroid/os/AsyncResult;->result:Ljava/lang/Object;

    check-cast v0, Lcom/android/internal/telephony/Phone$SuppService;

    .line 4569
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onSuppServiceFailed: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4571
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    .line 4572
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    invoke-virtual {v1}, Lcom/android/internal/telephony/Call;->isVideoCall()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 4580
    :cond_2
    sget-object v1, Lcom/android/phone/InVTCallScreen$78;->$SwitchMap$com$android$internal$telephony$Phone$SuppService:[I

    invoke-virtual {v0}, Lcom/android/internal/telephony/Phone$SuppService;->ordinal()I

    move-result v0

    aget v0, v1, v0

    packed-switch v0, :pswitch_data_0

    .line 4597
    const v0, 0x7f0901a6

    .line 4605
    :goto_1
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    if-eqz v1, :cond_3

    .line 4606
    const-string v1, "- DISMISSING mSuppServiceFailureDialog."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 4607
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    invoke-virtual {v1}, Landroid/app/AlertDialog;->dismiss()V

    .line 4610
    iput-object v3, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    .line 4613
    :cond_3
    new-instance v1, Landroid/app/AlertDialog$Builder;

    invoke-direct {v1, p0}, Landroid/app/AlertDialog$Builder;-><init>(Landroid/content/Context;)V

    invoke-virtual {v1, v0}, Landroid/app/AlertDialog$Builder;->setMessage(I)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const v1, 0x7f090022

    invoke-virtual {v0, v1, v3}, Landroid/app/AlertDialog$Builder;->setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/app/AlertDialog$Builder;->setCancelable(Z)Landroid/app/AlertDialog$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/AlertDialog$Builder;->create()Landroid/app/AlertDialog;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    .line 4615
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/view/Window;->addFlags(I)V

    .line 4616
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSuppServiceFailureDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->show()V

    goto :goto_0

    .line 4575
    :cond_4
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v1}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v1

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->isCSVideoCall(Lcom/android/internal/telephony/Call;)Z

    move-result v1

    if-nez v1, :cond_2

    goto :goto_0

    .line 4584
    :pswitch_0
    const v0, 0x7f0901ab

    .line 4585
    goto :goto_1

    .line 4590
    :pswitch_1
    const v0, 0x7f0901ac

    .line 4591
    goto :goto_1

    .line 4580
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public onSurfaceTextureAvailable(Landroid/graphics/SurfaceTexture;II)V
    .locals 7
    .parameter "surface"
    .parameter "width"
    .parameter "height"

    .prologue
    const/4 v6, 0x2

    const/4 v2, 0x0

    const/4 v5, 0x5

    const/4 v3, 0x3

    const/4 v4, 0x1

    .line 11257
    const-string v0, "onSurfaceTextureAvailable..."

    invoke-direct {p0, v0, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 11260
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_6

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0}, Landroid/view/TextureView;->getSurfaceTexture()Landroid/graphics/SurfaceTexture;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 11261
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "This is inside near_endsurview surface created : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 11262
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    .line 11263
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 11264
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 11265
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    invoke-virtual {v0, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 11269
    :cond_0
    :goto_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Width"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "Height"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 11283
    :cond_1
    :goto_1
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v4, :cond_b

    .line 11284
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_4

    .line 11285
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "own_video_receivedcall"

    invoke-static {v0, v1, v4}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mOwnVideoReceivedCall:I

    .line 11287
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isCameraStarted:Z

    if-nez v0, :cond_2

    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mOwnVideoReceivedCall:I

    if-eqz v0, :cond_3

    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDPM:Landroid/app/admin/DevicePolicyManager;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/app/admin/DevicePolicyManager;->getAllowCamera(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRP:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0, v2}, Landroid/app/enterprise/RestrictionPolicy;->isCameraEnabled(Z)Z

    move-result v0

    if-nez v0, :cond_9

    .line 11289
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->enableHideMeState()V

    .line 11290
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_4

    .line 11291
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    const-wide/16 v1, 0x64

    invoke-virtual {v0, v5, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 11331
    :cond_4
    :goto_2
    return-void

    .line 11267
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    invoke-virtual {v0, v4}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_0

    .line 11270
    :cond_6
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0}, Landroid/view/TextureView;->getSurfaceTexture()Landroid/graphics/SurfaceTexture;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 11271
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "This is inside far_endsur surface created : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 11272
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->far_endsurhldr:Landroid/graphics/SurfaceTexture;

    .line 11273
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    if-eqz v0, :cond_8

    .line 11274
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    invoke-virtual {v0, v6}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 11280
    :cond_7
    :goto_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Width"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "Height"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_1

    .line 11276
    :cond_8
    const-string v0, "VTManager.SetPreviewDisplay for Far end View"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 11277
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_7

    .line 11278
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_3

    .line 11293
    :cond_9
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_a

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_a

    .line 11294
    const-string v0, "Inside surfaceChanged: Send Live Video"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 11295
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->sendLiveVideo()V

    .line 11297
    :cond_a
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->mIsNearEndTransparent:Z

    if-eqz v0, :cond_4

    .line 11298
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0, v2}, Landroid/view/TextureView;->setVisibility(I)V

    goto/16 :goto_2

    .line 11303
    :cond_b
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isShowMe()Z

    move-result v0

    if-eqz v0, :cond_c

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_c

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mTestCloseCheck:Z

    if-eqz v0, :cond_c

    .line 11304
    const-string v0, "Inside surfaceChanged: Send Live Video"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 11305
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->sendLiveVideo()V

    .line 11306
    iput v3, p0, Lcom/android/phone/InVTCallScreen;->previousSelectedType:I

    .line 11309
    :cond_c
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->mIsNearEndTransparent:Z

    if-eqz v0, :cond_12

    .line 11310
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    const-wide/16 v1, 0x96

    invoke-virtual {v0, v5, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 11316
    :cond_d
    :goto_4
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_f

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_f

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_f

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_f

    .line 11317
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v3, :cond_f

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0}, Landroid/view/TextureView;->getSurfaceTexture()Landroid/graphics/SurfaceTexture;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_f

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->mIsFirstVideoFrameDecoded:Z

    if-nez v0, :cond_e

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsFarEndTransparent:Z

    if-eqz v0, :cond_f

    :cond_e
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->mIsNoDataFromModem:Z

    if-nez v0, :cond_f

    .line 11318
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    const/4 v1, 0x6

    const-wide/16 v2, 0x12c

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 11321
    :cond_f
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v0, v0, Lcom/android/phone/InVTCallState;->showDialpad:Z

    if-ne v0, v4, :cond_4

    .line 11322
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_11

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_11

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-eqz v0, :cond_11

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isPenMultiWindow()Z

    move-result v0

    if-nez v0, :cond_11

    .line 11323
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    if-eqz v0, :cond_10

    .line 11324
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumnButton:Landroid/widget/ImageButton;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/ImageButton;->setVisibility(I)V

    .line 11325
    :cond_10
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    if-eqz v0, :cond_11

    .line 11326
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVolumePanel:Landroid/widget/LinearLayout;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 11328
    :cond_11
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->showDTMFDialpad()V

    goto/16 :goto_2

    .line 11311
    :cond_12
    const-string v0, "support_multi_window"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_d

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    if-eqz v0, :cond_d

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMW:Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;

    invoke-virtual {v0}, Lcom/samsung/android/sdk/multiwindow/SMultiWindowActivity;->isMultiWindow()Z

    move-result v0

    if-nez v0, :cond_d

    .line 11312
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->mVTcalltype:I

    if-ne v0, v6, :cond_d

    .line 11313
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSurfaceHandler:Landroid/os/Handler;

    const-wide/16 v1, 0x12c

    invoke-virtual {v0, v5, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_4
.end method

.method public onSurfaceTextureDestroyed(Landroid/graphics/SurfaceTexture;)Z
    .locals 2
    .parameter "surface"

    .prologue
    const/4 v1, 0x1

    .line 11335
    const-string v0, "onSurfaceTextureDestroyed..."

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 11336
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0}, Landroid/view/TextureView;->getSurfaceTexture()Landroid/graphics/SurfaceTexture;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 11337
    const-string v0, "near_endsurview surface texture destroyed"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 11343
    :cond_0
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_1

    .line 11344
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->ResetNearEndDisplay()V

    .line 11345
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->ResetPreviewDisplay()V

    .line 11347
    :cond_1
    return v1

    .line 11339
    :cond_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0}, Landroid/view/TextureView;->getSurfaceTexture()Landroid/graphics/SurfaceTexture;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 11340
    const-string v0, "far_endsurview surface texture destroyed"

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    goto :goto_0
.end method

.method public onSurfaceTextureSizeChanged(Landroid/graphics/SurfaceTexture;II)V
    .locals 2
    .parameter "surface"
    .parameter "width"
    .parameter "height"

    .prologue
    .line 11252
    const-string v0, "onSurfaceTextureSizeChanged..."

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 11253
    return-void
.end method

.method public onSurfaceTextureUpdated(Landroid/graphics/SurfaceTexture;)V
    .locals 1
    .parameter "surface"

    .prologue
    .line 11354
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0}, Landroid/view/TextureView;->getSurfaceTexture()Landroid/graphics/SurfaceTexture;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 11356
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->IncreaseRenderCount()V

    .line 11363
    :goto_0
    return-void

    .line 11357
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v0}, Landroid/view/TextureView;->getSurfaceTexture()Landroid/graphics/SurfaceTexture;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_1

    .line 11359
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->IncreaseRemoteRenderCount()V

    goto :goto_0

    .line 11361
    :cond_1
    const-string v0, "onSurfaceTextureUpdated..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method public onTickForCallTimeElapsed(J)V
    .locals 5
    .parameter "timeElapsed"

    .prologue
    const-wide/16 v3, 0x0

    .line 2329
    cmp-long v1, p1, v3

    if-eqz v1, :cond_0

    const-wide/16 v1, 0x3c

    rem-long v1, p1, v1

    cmp-long v1, v1, v3

    if-nez v1, :cond_0

    .line 2332
    const-string v1, "feature_chn_duos"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 2333
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v1

    if-nez v1, :cond_1

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    .line 2334
    .local v0, notifier:Lcom/android/phone/CallNotifier;
    :goto_0
    invoke-virtual {v0}, Lcom/android/phone/CallNotifier;->playMinuteMinder()Z

    .line 2344
    .end local v0           #notifier:Lcom/android/phone/CallNotifier;
    :cond_0
    :goto_1
    invoke-direct {p0, p1, p2}, Lcom/android/phone/InVTCallScreen;->updateElapsedTimeWidget(J)V

    .line 2345
    return-void

    .line 2333
    :cond_1
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v0, v1, Lcom/android/phone/PhoneGlobals;->notifier2:Lcom/android/phone/CallNotifier;

    goto :goto_0

    .line 2335
    :cond_2
    const-string v1, "sec_product_feature_common_dsds_support"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 2336
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-static {v2}, Lcom/android/phone/PhoneUtilsDsds;->getSubscription(Lcom/android/internal/telephony/Phone;)I

    move-result v2

    aget-object v1, v1, v2

    invoke-virtual {v1}, Lcom/android/phone/CallNotifier;->playMinuteMinder()Z

    goto :goto_1

    .line 2337
    :cond_3
    const-string v1, "feature_multisim"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    .line 2338
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notifiers:[Lcom/android/phone/CallNotifier;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v2}, Lcom/android/internal/telephony/Phone;->getSimSlot()I

    move-result v2

    aget-object v1, v1, v2

    invoke-virtual {v1}, Lcom/android/phone/CallNotifier;->playMinuteMinder()Z

    goto :goto_1

    .line 2340
    :cond_4
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->notifier:Lcom/android/phone/CallNotifier;

    invoke-virtual {v1}, Lcom/android/phone/CallNotifier;->playMinuteMinder()Z

    goto :goto_1
.end method

.method public onTrigger(Landroid/view/View;I)V
    .locals 3
    .parameter
    .parameter

    .prologue
    .line 13857
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onDialTrigger(whichHandle = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ")..."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13860
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->hideIncomingCallWidget()V

    .line 13865
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/phone/InVTCallScreen;->mLastIncomingCallActionTime:J

    .line 13874
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_0

    .line 13875
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_0

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const v0, 0x7f0a03d5

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/Button;

    if-ne v1, v0, :cond_0

    .line 13878
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 13879
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHide:Landroid/widget/Button;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setVisibility(I)V

    .line 13884
    :cond_0
    packed-switch p2, :pswitch_data_0

    .line 13901
    const-string v0, "InVTCallScreen"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onDialTrigger: unexpected whichHandle value: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/android/phone/Log;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 13904
    :goto_0
    return-void

    .line 13886
    :pswitch_0
    const-string v0, "ANSWER_CALL_ID: answer!"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13887
    const v0, 0x7f0a0009

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->handleOnscreenButtonClick(I)V

    goto :goto_0

    .line 13891
    :pswitch_1
    const-string v0, "SEND_SMS_ID!"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13892
    const v0, 0x7f0a000b

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->handleOnscreenButtonClick(I)V

    goto :goto_0

    .line 13896
    :pswitch_2
    const-string v0, "DECLINE_CALL_ID: reject!"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13897
    const v0, 0x7f0a000a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->handleOnscreenButtonClick(I)V

    goto :goto_0

    .line 13884
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
        :pswitch_2
    .end packed-switch
.end method

.method public onWindowFocusChanged(Z)V
    .locals 2
    .parameter "hasFocus"

    .prologue
    .line 4170
    invoke-super {p0, p1}, Landroid/app/Activity;->onWindowFocusChanged(Z)V

    .line 4172
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onWindowFocusChanged("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ")..."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 4173
    return-void
.end method

.method public onZoneChanged(I)V
    .locals 2
    .parameter "zone"

    .prologue
    .line 3604
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "onZoneChanged : zone = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 3605
    return-void
.end method

.method public registerCallHandGripChangeObserver()V
    .locals 4

    .prologue
    const/4 v3, 0x1

    .line 15419
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 15420
    .local v0, resolver:Landroid/content/ContentResolver;
    if-eqz v0, :cond_0

    .line 15421
    const-string v1, "onehand_switch_state"

    invoke-static {v1}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->mCallHandGripChangeObserver:Landroid/database/ContentObserver;

    invoke-virtual {v0, v1, v3, v2}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V

    .line 15422
    invoke-virtual {p0, v3}, Lcom/android/phone/InVTCallScreen;->setIsHandAdaptEnabled(Z)V

    .line 15423
    const-string v1, "mCallHandGripChangeObserver register!!!"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15427
    :goto_0
    return-void

    .line 15425
    :cond_0
    const-string v1, "Fail to register mCallHandGripChangeObserver!!!"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method protected releaseSelectVideo()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    const/4 v1, 0x1

    const/4 v0, 0x0

    .line 15273
    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 15274
    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->isCameraStarted:Z

    .line 15275
    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    .line 15276
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    .line 15277
    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    .line 15278
    iput-object v2, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    .line 15279
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->show_camera()V

    .line 15280
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->setIsShowMe(Z)V

    .line 15281
    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isPresetImageEnabled:Z

    .line 15282
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->setHideOrShowMeState()V

    .line 15283
    return-void
.end method

.method protected requestCaptureFarEndImage()V
    .locals 2

    .prologue
    .line 15260
    const-string v0, "Capture Image called for Farend view"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15261
    const-string v0, "kor_cs_vt_ui"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 15262
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->mIsSKTServiceMode:Z

    if-nez v0, :cond_0

    .line 15263
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->capture_farend_view(J)V

    .line 15270
    :goto_0
    return-void

    .line 15265
    :cond_0
    const v0, 0x7f090525

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->displayToast(I)V

    goto :goto_0

    .line 15268
    :cond_1
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->capture_farend_view(J)V

    goto :goto_0
.end method

.method protected requestDualCamera(Z)V
    .locals 4
    .parameter

    .prologue
    const/16 v3, 0x3e5

    const/4 v2, 0x1

    .line 15217
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "requestDualCamera = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 15219
    if-eqz p1, :cond_0

    .line 15220
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->cameraEngine:Lcom/android/phone/CameraEngine;

    invoke-virtual {v0}, Lcom/android/phone/CameraEngine;->isCanOpenDualCamera()Z

    move-result v0

    if-nez v0, :cond_0

    .line 15221
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mInCSVTCallMenu:Lcom/android/phone/InCSVTCallMenu;

    invoke-virtual {v0, v2}, Lcom/android/phone/InCSVTCallMenu;->setEnableDualCameraMenu(Z)V

    .line 15222
    const v0, 0x7f0903f3

    invoke-static {p0, v0, v2}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    .line 15223
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mToast:Landroid/widget/Toast;

    invoke-virtual {v0}, Landroid/widget/Toast;->show()V

    .line 15231
    :goto_0
    return-void

    .line 15228
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0, p1}, Lcom/android/phone/PreviewEffectState;->setDualCameraEnable(Z)V

    .line 15229
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v3}, Landroid/os/Handler;->removeMessages(I)V

    .line 15230
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_0
.end method

.method protected requestSwitchCamera()V
    .locals 4

    .prologue
    .line 15205
    const-string v0, "requestSwitchCamera"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15207
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isSwitchCameraClicked:Z

    .line 15208
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x3e7

    const-wide/16 v2, 0x32

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 15209
    const-string v0, "vt_camera_firmware_update_check_popup"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 15210
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isFrontCameraEnabled:Z

    if-eqz v0, :cond_0

    .line 15211
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->cameraEngine:Lcom/android/phone/CameraEngine;

    iget-object v0, v0, Lcom/android/phone/CameraEngine;->mHandler:Landroid/os/Handler;

    const/16 v1, 0x64

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 15213
    :cond_0
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->updateCameraButtons(Z)V

    .line 15214
    return-void
.end method

.method requestUpdateBluetoothIndication()V
    .locals 2

    .prologue
    const/16 v1, 0x72

    .line 9286
    const-string v0, "requestUpdateBluetoothIndication()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9290
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 9291
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 9292
    return-void
.end method

.method requestUpdateDockUi()V
    .locals 1

    .prologue
    .line 9023
    const-string v0, "requestUpdateDockUi()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9025
    sget-boolean v0, Lcom/android/phone/PhoneGlobals;->mIsDockConnected:Z

    if-eqz v0, :cond_0

    .line 9027
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setRequestedOrientation(I)V

    .line 9032
    :goto_0
    return-void

    .line 9030
    :cond_0
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setRequestedOrientation(I)V

    goto :goto_0
.end method

.method protected requestUpdateOnehandmode(Z)V
    .locals 6
    .parameter "enable"

    .prologue
    const/16 v5, 0x83

    const/4 v4, 0x1

    .line 15234
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "requestUpdateOnehandmode : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15236
    if-eqz p1, :cond_1

    .line 15237
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_ENABLED:Ljava/lang/String;

    invoke-static {v1, v2, v4}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 15242
    :goto_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isOneHandOperationEnabled()Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    .line 15244
    const-string v1, "ssuport_hand_adapt_operation"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isHandAdaptEnabled()Z

    move-result v1

    if-nez v1, :cond_0

    .line 15245
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->getHandAdaptEnable()Z

    move-result v0

    .line 15246
    .local v0, mIsHandAdaptOn:Z
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "requestUpdateOnehandmode : << HKA start >> mIsHandAdaptOn : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15248
    if-eqz v0, :cond_0

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isEasyModeEnabled()Z

    move-result v1

    if-nez v1, :cond_0

    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v1, :cond_0

    .line 15249
    const-string v1, "requestUpdateOnehandmodeStart : CallHandGripChangeObserver start in onResume : VT "

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15250
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->registerCallHandGripChangeObserver()V

    .line 15251
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->setHandGripCondition(Z)V

    .line 15255
    .end local v0           #mIsHandAdaptOn:Z
    :cond_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v1, v5}, Landroid/os/Handler;->removeMessages(I)V

    .line 15256
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v1, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 15257
    return-void

    .line 15239
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->ONE_HAND_ENABLED:Ljava/lang/String;

    const/4 v3, 0x0

    invoke-static {v1, v2, v3}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    goto :goto_0
.end method

.method requestUpdateTouchUi()V
    .locals 2

    .prologue
    const/16 v1, 0x7a

    .line 9041
    const-string v0, "requestUpdateTouchUi()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9043
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 9044
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 9045
    return-void
.end method

.method public resetControls()V
    .locals 1

    .prologue
    .line 14963
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    if-eqz v0, :cond_0

    .line 14964
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;->resetDialPadControls()V

    .line 14965
    :cond_0
    return-void
.end method

.method public resetInVTCallScreenMode()V
    .locals 1

    .prologue
    .line 9553
    const-string v0, "resetInVTCallScreenMode - InVTCallScreenMode set to UNDEFINED"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 9554
    sget-object v0, Lcom/android/phone/InVTCallState$InVTCallScreenMode;->UNDEFINED:Lcom/android/phone/InVTCallState$InVTCallScreenMode;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->setInVTCallScreenMode(Lcom/android/phone/InVTCallState$InVTCallScreenMode;)V

    .line 9555
    return-void
.end method

.method protected selectImageFromMyFiles()V
    .locals 5

    .prologue
    const/4 v4, 0x1

    .line 12601
    const-string v3, "In selectImageFromMyFiles method"

    invoke-direct {p0, v3, v4}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 12603
    const/4 v2, 0x0

    .local v2, surfaceWidth:I
    const/4 v1, 0x0

    .line 12604
    .local v1, surfaceHeight:I
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 12605
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getWidth()I

    move-result v2

    .line 12606
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getHeight()I

    move-result v1

    .line 12612
    :goto_0
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-static {v3}, Lcom/android/phone/PickImageFromGallery;->registerForImageGalleryResponse(Landroid/os/Handler;)V

    .line 12613
    const-string v3, "External Media is present"

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12614
    new-instance v0, Landroid/content/Intent;

    const-class v3, Lcom/android/phone/PickImageFromGallery;

    invoke-direct {v0, p0, v3}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V

    .line 12615
    .local v0, mImgIntent:Landroid/content/Intent;
    const-string v3, "senderIsVideoCall"

    invoke-virtual {v0, v3, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 12616
    const-string v3, "imageSelected"

    invoke-virtual {v0, v3, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 12617
    const-string v3, "surfaceWidth"

    invoke-virtual {v0, v3, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 12618
    const-string v3, "surfaceHeight"

    invoke-virtual {v0, v3, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 12620
    const-string v3, "phone_kk_tablet_gui"

    invoke-static {v3}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 12621
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->makeFullScreenIntent(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v0

    .line 12624
    :cond_0
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 12625
    return-void

    .line 12608
    .end local v0           #mImgIntent:Landroid/content/Intent;
    :cond_1
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getWidth()I

    move-result v2

    .line 12609
    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getHeight()I

    move-result v1

    goto :goto_0
.end method

.method protected selectVideoFromMyFiles()V
    .locals 3

    .prologue
    const/4 v2, 0x1

    .line 12632
    const-string v1, "In selectVideoFromMyFiles method"

    invoke-direct {p0, v1, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 12633
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-static {v1}, Lcom/android/phone/PickImageFromGallery;->registerForImageGalleryResponse(Landroid/os/Handler;)V

    .line 12634
    const-string v1, "External Media is present"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12635
    new-instance v0, Landroid/content/Intent;

    const-class v1, Lcom/android/phone/PickImageFromGallery;

    invoke-direct {v0, p0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V

    .line 12636
    .local v0, mVideoIntent:Landroid/content/Intent;
    const-string v1, "senderIsVideoCall"

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 12637
    const-string v1, "imageSelected"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 12639
    const-string v1, "phone_kk_tablet_gui"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 12640
    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->makeFullScreenIntent(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v0

    .line 12642
    :cond_0
    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    .line 12643
    const-string v1, "Out selectMyVideofile method"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 12645
    return-void
.end method

.method protected setEnableEyeContact(Z)V
    .locals 2
    .parameter "enable"

    .prologue
    .line 15191
    if-eqz p1, :cond_1

    .line 15192
    const/4 v0, 0x1

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mEnableEyeContact:I

    .line 15196
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 15197
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget v1, p0, Lcom/android/phone/InVTCallScreen;->mEnableEyeContact:I

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setEmotionalEyeContact(I)V

    .line 15198
    :cond_0
    return-void

    .line 15194
    :cond_1
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->mEnableEyeContact:I

    goto :goto_0
.end method

.method protected setEnabledSwitchCameraButton(Z)V
    .locals 1
    .parameter "enable"

    .prologue
    .line 15163
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSC:Landroid/widget/Button;

    invoke-virtual {v0, p1}, Landroid/widget/Button;->setEnabled(Z)V

    .line 15164
    return-void
.end method

.method protected setIsFarEndRecord(Z)V
    .locals 1
    .parameter "newVal"

    .prologue
    .line 15155
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean p1, v0, Lcom/android/phone/InVTCallState;->isFarEndRecord:Z

    .line 15156
    return-void
.end method

.method protected setIsHandAdaptEnabled(Z)V
    .locals 1
    .parameter "newVal"

    .prologue
    .line 15114
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean p1, v0, Lcom/android/phone/InVTCallState;->mIsHandAdaptEnabled:Z

    .line 15115
    return-void
.end method

.method protected setIsPlayVideo(Z)V
    .locals 0
    .parameter "newVal"

    .prologue
    .line 15201
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mIsplayVideo:Z

    .line 15202
    return-void
.end method

.method protected setIsRequestAudioFocus(Z)V
    .locals 1
    .parameter "newVal"

    .prologue
    .line 15123
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean p1, v0, Lcom/android/phone/InVTCallState;->mIsRequestedAudioFocus:Z

    .line 15124
    return-void
.end method

.method protected setIsShowMe(Z)V
    .locals 1
    .parameter "newVal"

    .prologue
    .line 15131
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean p1, v0, Lcom/android/phone/InVTCallState;->isShowMe:Z

    .line 15132
    return-void
.end method

.method protected setIsSurfaceViewSwipe(Z)V
    .locals 1
    .parameter "isSwipe"

    .prologue
    .line 15187
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean p1, v0, Lcom/android/phone/InVTCallState;->isSurfaceViewSwipe:Z

    .line 15188
    return-void
.end method

.method protected setMainBackgroundToNormal()V
    .locals 2

    .prologue
    .line 15033
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMainLayoutNormalDrawable:Landroid/graphics/drawable/Drawable;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 15034
    return-void
.end method

.method protected setMainLandBackgroundToNormal()V
    .locals 3

    .prologue
    .line 15037
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLandLayoutNormalDrawable:Landroid/graphics/drawable/Drawable;

    if-nez v0, :cond_0

    .line 15038
    new-instance v0, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v0}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 15039
    const/4 v1, 0x1

    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inPurgeable:Z

    .line 15041
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x7f02008e

    invoke-static {v1, v2, v0}, Landroid/graphics/BitmapFactory;->decodeResource(Landroid/content/res/Resources;ILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLandLayoutNormalBitmap:Landroid/graphics/Bitmap;

    .line 15042
    new-instance v0, Landroid/graphics/drawable/BitmapDrawable;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMainLandLayoutNormalBitmap:Landroid/graphics/Bitmap;

    invoke-direct {v0, v1}, Landroid/graphics/drawable/BitmapDrawable;-><init>(Landroid/graphics/Bitmap;)V

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLandLayoutNormalDrawable:Landroid/graphics/drawable/Drawable;

    .line 15045
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mMainLandLayoutNormalDrawable:Landroid/graphics/drawable/Drawable;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V

    .line 15046
    return-void
.end method

.method protected setNearEndPressed(Z)V
    .locals 0
    .parameter "pressed"

    .prologue
    .line 15179
    sput-boolean p1, Lcom/android/phone/InVTCallScreen;->nearend_pressed:Z

    .line 15180
    return-void
.end method

.method protected setNormalLayout()V
    .locals 2

    .prologue
    const/4 v1, 0x0

    .line 15049
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerInfoLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15050
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_2

    .line 15051
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsRecordSupport:Z

    if-eqz v0, :cond_1

    .line 15052
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15065
    :cond_0
    :goto_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 15066
    return-void

    .line 15054
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 15055
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15056
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/Button;->setVisibility(I)V

    goto :goto_0

    .line 15059
    :cond_2
    const-string v0, "vt_white_theme"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_3

    .line 15060
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainLandBackgroundToNormal()V

    goto :goto_0

    .line 15062
    :cond_3
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->setMainBackgroundToNormal()V

    goto :goto_0
.end method

.method setPhone(Lcom/android/internal/telephony/Phone;)V
    .locals 1
    .parameter "phone"

    .prologue
    .line 2472
    iput-object p1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    .line 2476
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 2477
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v0

    if-nez v0, :cond_0

    .line 2478
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->phone2:Lcom/android/internal/telephony/Phone;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    .line 2482
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 2483
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    .line 2484
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v0}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    .line 2495
    :goto_1
    return-void

    .line 2480
    :cond_0
    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v0

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->phone1:Lcom/android/internal/telephony/Phone;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOtherPhone:Lcom/android/internal/telephony/Phone;

    goto :goto_0

    .line 2485
    :cond_1
    const-string v0, "sec_product_feature_common_dsds_support"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_2

    const-string v0, "feature_multisim"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 2487
    :cond_2
    invoke-interface {p1}, Lcom/android/internal/telephony/Phone;->getForegroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 2488
    invoke-interface {p1}, Lcom/android/internal/telephony/Phone;->getBackgroundCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    .line 2489
    invoke-interface {p1}, Lcom/android/internal/telephony/Phone;->getRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    goto :goto_1

    .line 2491
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getActiveFgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mForegroundCall:Lcom/android/internal/telephony/Call;

    .line 2492
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveBgCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mBackgroundCall:Lcom/android/internal/telephony/Call;

    .line 2493
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCM:Lcom/android/internal/telephony/CallManager;

    invoke-virtual {v0}, Lcom/android/internal/telephony/CallManager;->getFirstActiveRingingCall()Lcom/android/internal/telephony/Call;

    move-result-object v0

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRingingCall:Lcom/android/internal/telephony/Call;

    goto :goto_1
.end method

.method public setRequestedOrientation(I)V
    .locals 1
    .parameter "requestedOrientation"

    .prologue
    .line 15588
    invoke-super {p0, p1}, Landroid/app/Activity;->setRequestedOrientation(I)V

    .line 15590
    const/4 v0, 0x4

    if-eq p1, v0, :cond_0

    .line 15591
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOrientationListener:Lcom/android/phone/InVTCallScreen$MyOrientationListener;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallScreen$MyOrientationListener;->disable()V

    .line 15595
    :goto_0
    return-void

    .line 15593
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mOrientationListener:Lcom/android/phone/InVTCallScreen$MyOrientationListener;

    invoke-virtual {v0}, Lcom/android/phone/InVTCallScreen$MyOrientationListener;->enable()V

    goto :goto_0
.end method

.method protected setSeekBarSelection(I)V
    .locals 0
    .parameter "select"

    .prologue
    .line 15159
    iput p1, p0, Lcom/android/phone/InVTCallScreen;->mSeekBarSelection:I

    .line 15160
    return-void
.end method

.method setSpeakOnFlag(Z)V
    .locals 0
    .parameter "flag"

    .prologue
    .line 9134
    return-void
.end method

.method protected setTestCloseCheck(Z)V
    .locals 0
    .parameter "newVal"

    .prologue
    .line 15139
    iput-boolean p1, p0, Lcom/android/phone/InVTCallScreen;->mTestCloseCheck:Z

    .line 15140
    return-void
.end method

.method showAirMotionAnimation(I)V
    .locals 2
    .parameter "status"

    .prologue
    .line 15344
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    if-nez v0, :cond_0

    .line 15345
    const-string v0, "Don\'t showAirMotionAnimation"

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;Z)V

    .line 15350
    :goto_0
    return-void

    .line 15349
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mIncomingCallWidget:Lcom/android/phone/IncomingCallWidget;

    invoke-virtual {v0, p1}, Lcom/android/phone/IncomingCallWidget;->startAirMotionAnimation(I)V

    goto :goto_0
.end method

.method showCameraOnFarEndView(Landroid/graphics/SurfaceTexture;)V
    .locals 4
    .parameter "mSurfaceHolder"

    .prologue
    const/4 v1, 0x1

    .line 14148
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 14149
    sget v0, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    packed-switch v0, :pswitch_data_0

    .line 14167
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14168
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_PORTAIT_TOP"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14172
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    new-instance v1, Landroid/view/Surface;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->far_endsurhldr:Landroid/graphics/SurfaceTexture;

    invoke-direct {v1, v2}, Landroid/view/Surface;-><init>(Landroid/graphics/SurfaceTexture;)V

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v2}, Landroid/view/TextureView;->getWidth()I

    move-result v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getHeight()I

    move-result v3

    invoke-virtual {v0, v1, v2, v3}, Lsiso/vt/VTManager;->startCamera(Landroid/view/Surface;II)V

    .line 14175
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_0

    .line 14176
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget v1, p0, Lcom/android/phone/InVTCallScreen;->mEnableEyeContact:I

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setEmotionalEyeContact(I)V

    .line 14178
    :cond_0
    return-void

    .line 14151
    :pswitch_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14152
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_PORTAIT_TOP"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 14155
    :pswitch_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14156
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_LANDSCAPE_BOTTOM"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 14159
    :pswitch_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x3

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14160
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_PORTAIT_BOTTOM"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 14163
    :pswitch_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14164
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_LANDSCAPE_TOP"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 14149
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_3
        :pswitch_2
        :pswitch_1
    .end packed-switch
.end method

.method showCameraOnNearEndView(Landroid/graphics/SurfaceTexture;)V
    .locals 4
    .parameter "mSurfaceHolder"

    .prologue
    const/4 v1, 0x1

    .line 14105
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_1

    .line 14106
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->mStopCameraRequired:Z

    if-eqz v0, :cond_0

    .line 14107
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->stopCamera()V

    .line 14108
    const/4 v0, 0x0

    sput-boolean v0, Lcom/android/phone/InVTCallScreen;->mStopCameraRequired:Z

    .line 14111
    :cond_0
    sget v0, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    packed-switch v0, :pswitch_data_0

    .line 14133
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14134
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_PORTAIT_TOP"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14135
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "mCurrentOrientation"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    sget v1, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14139
    :goto_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    new-instance v1, Landroid/view/Surface;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    invoke-direct {v1, v2}, Landroid/view/Surface;-><init>(Landroid/graphics/SurfaceTexture;)V

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v2}, Landroid/view/TextureView;->getWidth()I

    move-result v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getHeight()I

    move-result v3

    invoke-virtual {v0, v1, v2, v3}, Lsiso/vt/VTManager;->startCamera(Landroid/view/Surface;II)V

    .line 14142
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_1

    .line 14143
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget v1, p0, Lcom/android/phone/InVTCallScreen;->mEnableEyeContact:I

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setEmotionalEyeContact(I)V

    .line 14145
    :cond_1
    return-void

    .line 14113
    :pswitch_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14114
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_PORTAIT_TOP"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14115
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "mCurrentOrientation"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    sget v1, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 14118
    :pswitch_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14119
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_LANDSCAPE_BOTTOM"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14120
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "mCurrentOrientation"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    sget v1, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0

    .line 14123
    :pswitch_2
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x3

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14124
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_PORTAIT_BOTTOM"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14125
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "mCurrentOrientation"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    sget v1, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 14128
    :pswitch_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->setOrientation(I)V

    .line 14129
    const-string v0, "VTManager.log(VTManager.VT_ORIENTATION_LANDSCAPE_TOP"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14130
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "mCurrentOrientation"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    sget v1, Lcom/android/phone/InVTCallScreen;->mCurrentOrientation:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 14111
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_3
        :pswitch_2
        :pswitch_1
    .end packed-switch
.end method

.method protected showDTMFDialpad()V
    .locals 6

    .prologue
    const/4 v5, 0x4

    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 14284
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    if-eqz v0, :cond_3

    .line 14285
    const-string v0, "Dialer Pad Already Not open"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 14287
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v0, :cond_0

    .line 14288
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x7f0b003f

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getColor(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setBackgroundColor(I)V

    .line 14289
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mFarEndLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v5}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14292
    :cond_0
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iput-boolean v4, v0, Lcom/android/phone/InVTCallState;->showDialpad:Z

    .line 14293
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDTMFDialerLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v3}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 14294
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-virtual {v0, v3}, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;->setVisibility(I)V

    .line 14295
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsOneHandOption:Z

    if-eqz v0, :cond_1

    .line 14296
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialerView:Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;

    invoke-virtual {v0}, Lcom/android/phone/DTMFTwelveKeyDialerViewForVT;->resetDialPadControls()V

    .line 14298
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHideDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setVisibility(I)V

    .line 14299
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    if-eqz v0, :cond_2

    .line 14300
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialPad:Landroid/widget/Button;

    invoke-virtual {v0, v5}, Landroid/widget/Button;->setVisibility(I)V

    .line 14326
    :cond_2
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->dialPadControlHandlerOptionMenu()V

    .line 14327
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, v1}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->setVTManagerInstance(Lsiso/vt/VTManager;)V

    .line 14328
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0, v4}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->openDialer(Z)V

    .line 14329
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDialer:Lcom/android/phone/DTMFTwelveKeyDialerForVT;

    invoke-virtual {v0, v4}, Lcom/android/phone/DTMFTwelveKeyDialerForVT;->setHandleVisible(Z)V

    .line 14332
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->handlingSwitchCameraButton()V

    .line 14333
    const-string v0, "feature_chn_duos"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 14334
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSimUI()V

    .line 14337
    :cond_3
    return-void
.end method

.method showPreviewOnFarEndView(Landroid/graphics/SurfaceTexture;)V
    .locals 4
    .parameter "mSurfaceHolder"

    .prologue
    .line 14188
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 14189
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    new-instance v1, Landroid/view/Surface;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->far_endsurhldr:Landroid/graphics/SurfaceTexture;

    invoke-direct {v1, v2}, Landroid/view/Surface;-><init>(Landroid/graphics/SurfaceTexture;)V

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v2}, Landroid/view/TextureView;->getWidth()I

    move-result v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->far_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getHeight()I

    move-result v3

    invoke-virtual {v0, v1, v2, v3}, Lsiso/vt/VTManager;->setPreviewDisplay(Landroid/view/Surface;II)V

    .line 14192
    :cond_0
    return-void
.end method

.method showPreviewOnNearEndView(Landroid/graphics/SurfaceTexture;)V
    .locals 4
    .parameter "mSurfaceHolder"

    .prologue
    .line 14181
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 14182
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    new-instance v1, Landroid/view/Surface;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurhldr:Landroid/graphics/SurfaceTexture;

    invoke-direct {v1, v2}, Landroid/view/Surface;-><init>(Landroid/graphics/SurfaceTexture;)V

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v2}, Landroid/view/TextureView;->getWidth()I

    move-result v2

    iget-object v3, p0, Lcom/android/phone/InVTCallScreen;->near_endsurview:Landroid/view/TextureView;

    invoke-virtual {v3}, Landroid/view/TextureView;->getHeight()I

    move-result v3

    invoke-virtual {v0, v1, v2, v3}, Lsiso/vt/VTManager;->setPreviewDisplay(Landroid/view/Surface;II)V

    .line 14185
    :cond_0
    return-void
.end method

.method protected show_camera()V
    .locals 3

    .prologue
    const/4 v2, 0x3

    .line 13653
    const-string v0, "In show_camera method"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13654
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Value of selectImg"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13655
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Value of selectImg"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13657
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->selectImg:Z

    if-eqz v0, :cond_2

    .line 13658
    const-string v0, "In selectImg condition under show_camera"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13661
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    if-nez v0, :cond_1

    .line 13662
    const-string v0, "data/data/com.android.phone/files/preset_defaultimage.jpg"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    .line 13666
    :goto_0
    const-string v0, "Out selectImg condition under show_camera"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13695
    :cond_0
    :goto_1
    const-string v0, "Out show_camera method"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13696
    return-void

    .line 13664
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->filePath:Ljava/lang/String;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    goto :goto_0

    .line 13667
    :cond_2
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    if-eqz v0, :cond_4

    .line 13668
    const-string v0, "In selectVideo condition under show_camera"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13671
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    if-nez v0, :cond_3

    .line 13672
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->sendLiveVideo()V

    .line 13673
    iput v2, p0, Lcom/android/phone/InVTCallScreen;->previousSelectedType:I

    .line 13678
    :goto_2
    const-string v0, "In selectVideo condition under show_camera"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_1

    .line 13675
    :cond_3
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showVideo(Ljava/lang/String;)V

    goto :goto_2

    .line 13679
    :cond_4
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 13680
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0}, Lsiso/vt/VTManager;->sendLiveVideo()V

    .line 13681
    iput v2, p0, Lcom/android/phone/InVTCallScreen;->previousSelectedType:I

    .line 13683
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingEmotionalAni()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 13684
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateLayoutForDrawEffectUI()V

    .line 13685
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectUI;->updateAutoToggle()V

    .line 13689
    :cond_5
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->previewEffectState:Lcom/android/phone/PreviewEffectState;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectState;->isShowingThemeView()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 13690
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateLayoutForDrawEffectUI()V

    .line 13691
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mPreviewEffectUI:Lcom/android/phone/PreviewEffectUI;

    invoke-virtual {v0}, Lcom/android/phone/PreviewEffectUI;->restoreThemeViewPanel()V

    goto :goto_1
.end method

.method protected startRecordingAudio()V
    .locals 4

    .prologue
    const/4 v3, 0x1

    .line 13399
    const-string v0, "Enter into Start Audio Recording Method..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13400
    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->checkStorageMemorySpace(Z)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 13401
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 13402
    const-string v0, "Already Near End Recording in Process"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13404
    const/16 v0, 0xb

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    .line 13422
    :cond_0
    :goto_0
    const-string v0, "End of Start Audio Recording Method..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13423
    return-void

    .line 13406
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/phone/InVTCallState;->mRecordTimeFarEnd:J

    .line 13407
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStartRecordingUI()V

    .line 13408
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-static {v0}, Lcom/android/phone/MediaLowSpaceReceiver;->registerLowMemoryListner(Landroid/os/Handler;)V

    .line 13409
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mRecordingAlert:Z

    .line 13410
    sget-object v0, Lcom/android/phone/InVTCallScreen;->mPhoneVTVoiceRecorder:Lcom/android/phone/PhoneVTVoiceRecorder;

    if-nez v0, :cond_2

    .line 13411
    new-instance v0, Lcom/android/phone/PhoneVTVoiceRecorder;

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getApplicationContext()Landroid/content/Context;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/android/phone/PhoneVTVoiceRecorder;-><init>(Landroid/content/Context;)V

    sput-object v0, Lcom/android/phone/InVTCallScreen;->mPhoneVTVoiceRecorder:Lcom/android/phone/PhoneVTVoiceRecorder;

    .line 13413
    :cond_2
    sget-object v0, Lcom/android/phone/InVTCallScreen;->mPhoneVTVoiceRecorder:Lcom/android/phone/PhoneVTVoiceRecorder;

    invoke-virtual {v0}, Lcom/android/phone/PhoneVTVoiceRecorder;->startRecord()V

    .line 13414
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-direct {p0, v3}, Lcom/android/phone/InVTCallScreen;->GetValidFileName(Z)Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    .line 13415
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    if-eqz v0, :cond_0

    .line 13416
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mStopRecording:Landroid/widget/Button;

    invoke-virtual {v0, v3}, Landroid/widget/Button;->setEnabled(Z)V

    goto :goto_0

    .line 13419
    :cond_3
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->setIsFarEndRecord(Z)V

    .line 13420
    const/16 v0, 0x8

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto :goto_0
.end method

.method protected startRecordingFarEndView()V
    .locals 6

    .prologue
    const/16 v5, 0x7e

    const/4 v2, 0x0

    const/4 v4, 0x1

    .line 13278
    const-string v1, "Enter into Start Far End Recording Method..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13279
    const/4 v0, 0x0

    .line 13280
    .local v0, recParams:I
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->checkStorageMemorySpace(Z)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 13281
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isNearEndRecord()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 13282
    const-string v1, "Already Far End Recording in Process"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13284
    const/16 v1, 0xb

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    .line 13320
    :goto_0
    const-string v1, "End of Start Far End Recording Method..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13321
    return-void

    .line 13286
    :cond_0
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    iput-wide v2, v1, Lcom/android/phone/InVTCallState;->mRecordTimeFarEnd:J

    .line 13287
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStartRecordingUI()V

    .line 13288
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-static {v1}, Lcom/android/phone/MediaLowSpaceReceiver;->registerLowMemoryListner(Landroid/os/Handler;)V

    .line 13289
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mRecordingAlert:Z

    .line 13290
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v1, v5}, Landroid/os/Handler;->removeMessages(I)V

    .line 13291
    const-string v1, "vt_audio_mixed_recording"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 13297
    :goto_1
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->GetValidFileName(Z)Ljava/lang/String;

    move-result-object v2

    iput-object v2, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    .line 13299
    const-string v1, "vt_audio_mixed_recording_via_stack"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 13300
    const/4 v0, 0x3

    .line 13307
    :goto_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v2, v2, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    invoke-virtual {v1, v2, v0}, Lsiso/vt/VTManager;->StartRecording(Ljava/lang/String;I)V

    goto :goto_0

    .line 13294
    :cond_1
    const-string v1, "data/data/com.android.phone/files/video_call_recording_start.jpg"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->showImage(Ljava/lang/String;)V

    .line 13295
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const-wide/16 v2, 0x1388

    invoke-virtual {v1, v5, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto :goto_1

    .line 13303
    :cond_2
    const/16 v0, 0xa

    goto :goto_2

    .line 13311
    :cond_3
    iget-boolean v1, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v1, :cond_4

    .line 13312
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCaptureButton:Landroid/widget/Button;

    invoke-virtual {v1, v4}, Landroid/widget/Button;->setEnabled(Z)V

    .line 13313
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mStartRecordingButton:Landroid/widget/Button;

    invoke-virtual {v1, v4}, Landroid/widget/Button;->setEnabled(Z)V

    .line 13314
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->isFarEndRecordOrCaptureProgressive:Z

    .line 13317
    :cond_4
    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->setIsFarEndRecord(Z)V

    .line 13318
    const/16 v1, 0x8

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto :goto_0
.end method

.method protected startRecordingNearEndView()V
    .locals 5

    .prologue
    const/4 v4, 0x1

    .line 13350
    const-string v1, "Enter into Start Near End Recording Method..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13351
    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->checkStorageMemorySpace(Z)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 13352
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isFarEndRecord()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 13353
    const-string v1, "Already Far End Recording in Process"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13355
    const/16 v1, 0xb

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    .line 13372
    :cond_0
    :goto_0
    const-string v1, "End into Start Near End Recording Method..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13373
    return-void

    .line 13357
    :cond_1
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    iput-wide v2, v1, Lcom/android/phone/InVTCallState;->mRecordTimeNearEnd:J

    .line 13358
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStartRecordingUIForNearEnd()V

    .line 13359
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-static {v1}, Lcom/android/phone/MediaLowSpaceReceiver;->registerLowMemoryListner(Landroid/os/Handler;)V

    .line 13360
    const/4 v0, 0x5

    .line 13362
    .local v0, recParams:I
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-direct {p0, v4}, Lcom/android/phone/InVTCallScreen;->GetValidFileName(Z)Ljava/lang/String;

    move-result-object v2

    iput-object v2, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    .line 13364
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v1, v1, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    .line 13365
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v1, :cond_0

    .line 13366
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v2, v2, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    invoke-virtual {v1, v2, v0}, Lsiso/vt/VTManager;->StartRecording(Ljava/lang/String;I)V

    goto :goto_0

    .line 13369
    .end local v0           #recParams:I
    :cond_2
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    const/4 v2, 0x0

    iput-boolean v2, v1, Lcom/android/phone/InVTCallState;->isNearEndRecord:Z

    .line 13370
    const/16 v1, 0x8

    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->showDialog(I)V

    goto :goto_0
.end method

.method protected stopRecordingFarEndView()V
    .locals 3

    .prologue
    const/16 v2, 0x7e

    .line 13326
    const-string v0, "In stopRecordingFarEndView"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13327
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 13328
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lsiso/vt/VTManager;->StopRecording(Z)V

    .line 13330
    :cond_0
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStopRecordingUI()V

    .line 13331
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v2}, Landroid/os/Handler;->removeMessages(I)V

    .line 13332
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v2}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 13334
    return-void
.end method

.method protected stopRecordingNearEndView(Z)V
    .locals 3
    .parameter "isForceStopped"

    .prologue
    const/4 v2, 0x1

    .line 13377
    invoke-direct {p0}, Lcom/android/phone/InVTCallScreen;->updateStopRecordingUIForNearEnd()V

    .line 13378
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mRecordNearEndView:Landroid/widget/ImageView;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 13379
    iput-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->selectVideo:Z

    .line 13380
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    if-eqz v0, :cond_0

    .line 13381
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVTManager:Lsiso/vt/VTManager;

    invoke-virtual {v0, v2}, Lsiso/vt/VTManager;->StopRecording(Z)V

    .line 13382
    :cond_0
    if-nez p1, :cond_1

    .line 13383
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-object v0, v0, Lcom/android/phone/InVTCallState;->mRecordingFileName:Ljava/lang/String;

    iput-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    .line 13384
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    if-eqz v0, :cond_1

    .line 13385
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideofilePath:Ljava/lang/String;

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->showVideo(Ljava/lang/String;)V

    .line 13387
    :cond_1
    const-string v0, "Out stop_recording"

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 13388
    return-void
.end method

.method public toggleBluetooth()V
    .locals 5

    .prologue
    const/4 v3, 0x0

    const/4 v4, 0x1

    .line 7878
    sget-boolean v2, Lcom/android/phone/InVTCallScreen;->VDBG:Z

    if-eqz v2, :cond_0

    const-string v2, "toggleBluetooth()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7879
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getConnectedBluetoothDevices()Ljava/util/List;

    move-result-object v0

    .line 7882
    .local v0, connectedDevices:Ljava/util/List;,"Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-nez v2, :cond_1

    .line 7883
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->closeOptionsMenu()V

    .line 7886
    :cond_1
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAvailable()Z

    move-result v2

    if-eqz v2, :cond_6

    .line 7887
    const-string v2, "isBluetoothAvailable()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7889
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnected()Z

    move-result v2

    if-eqz v2, :cond_4

    .line 7892
    const-string v2, "kor_cs_vt_ui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 7894
    invoke-virtual {p0, v4}, Lcom/android/phone/InVTCallScreen;->setSpeakOnFlag(Z)V

    .line 7898
    :cond_2
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->disconnectBluetoothAudio()V

    .line 7899
    const-string v2, "disconnectBluetoothAudio()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7931
    :cond_3
    :goto_0
    return-void

    .line 7907
    :cond_4
    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v2

    if-eqz v2, :cond_5

    .line 7908
    invoke-static {p0, v3, v4}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 7909
    const-string v2, "BT: turnOnSpeaker()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7911
    :cond_5
    const-string v2, "BT: connectBluetoothAudio()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7912
    invoke-interface {v0, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/bluetooth/BluetoothDevice;

    invoke-virtual {p0, v2}, Lcom/android/phone/InVTCallScreen;->connectBluetoothAudio(Landroid/bluetooth/BluetoothDevice;)Z

    goto :goto_0

    .line 7916
    :cond_6
    const-string v2, "kor_cs_vt_ui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_7

    iget-boolean v2, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v2, :cond_3

    .line 7921
    :cond_7
    const-string v2, "InVTCallScreen"

    const-string v3, "Got toggleBluetooth, but bluetooth is unavailable"

    invoke-static {v2, v3}, Lcom/android/phone/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7922
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.bluetooth.devicepicker.action.LAUNCH"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7923
    .local v1, intent:Landroid/content/Intent;
    const-string v2, "android.bluetooth.devicepicker.extra.NEED_AUTH"

    invoke-virtual {v1, v2, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 7924
    const-string v2, "android.bluetooth.devicepicker.extra.FILTER_TYPE"

    const/4 v3, 0x5

    invoke-virtual {v1, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7925
    const-string v2, "android.bluetooth.FromHeadsetActivity"

    invoke-virtual {v1, v2, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 7926
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->startActivity(Landroid/content/Intent;)V

    goto :goto_0
.end method

.method public toggleSpeaker()V
    .locals 3

    .prologue
    const/4 v1, 0x1

    .line 7841
    const-string v2, "toggleSpeaker()..."

    invoke-direct {p0, v2}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7846
    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v2

    if-nez v2, :cond_2

    move v0, v1

    .line 7847
    .local v0, newSpeakerState:Z
    :goto_0
    if-eqz v0, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAvailable()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isBluetoothAudioConnected()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 7849
    const-string v2, "kor_cs_vt_ui"

    invoke-static {v2}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 7851
    invoke-virtual {p0, v1}, Lcom/android/phone/InVTCallScreen;->setSpeakOnFlag(Z)V

    .line 7854
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->disconnectBluetoothAudio()V

    .line 7856
    :cond_1
    invoke-static {p0, v0, v1}, Lcom/android/phone/PhoneUtils;->turnOnSpeaker(Landroid/content/Context;ZZ)V

    .line 7858
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->updateSpeakerButton()V

    .line 7859
    return-void

    .line 7846
    .end local v0           #newSpeakerState:Z
    :cond_2
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public unregisterCallHandGripChangeObserver()V
    .locals 2

    .prologue
    .line 15430
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 15431
    .local v0, resolver:Landroid/content/ContentResolver;
    if-eqz v0, :cond_0

    .line 15432
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mCallHandGripChangeObserver:Landroid/database/ContentObserver;

    invoke-virtual {v0, v1}, Landroid/content/ContentResolver;->unregisterContentObserver(Landroid/database/ContentObserver;)V

    .line 15433
    const-string v1, "mCallHandGripChangeObserver unregister!!!"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15437
    :goto_0
    return-void

    .line 15435
    :cond_0
    const-string v1, "Fail to unregister mCallHandGripChangeObserver!!!"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    goto :goto_0
.end method

.method protected updateDualCameraLayout(Z)V
    .locals 3
    .parameter "enabled"

    .prologue
    .line 7280
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "updateDualCameraLayout() enabled = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 7281
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDualCameraOffLayout:Landroid/widget/FrameLayout;

    if-nez v0, :cond_0

    const-string v0, "vt_dual_camera"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_1

    .line 7283
    :cond_0
    if-eqz p1, :cond_2

    .line 7284
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isDualCameraStarted:Z

    if-nez v0, :cond_1

    .line 7286
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v0, v0, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/phone/InVTCallState;->mDualCameraEnabledTime:J

    .line 7290
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isDualCameraStarted:Z

    .line 7298
    :cond_1
    :goto_0
    return-void

    .line 7295
    :cond_2
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->isDualCameraStarted:Z

    goto :goto_0
.end method

.method updateKeyguardPolicy(Z)V
    .locals 2
    .parameter

    .prologue
    const/high16 v1, 0x40

    .line 3255
    if-eqz p1, :cond_0

    .line 3256
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, v1}, Landroid/view/Window;->addFlags(I)V

    .line 3260
    :goto_0
    return-void

    .line 3258
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, v1}, Landroid/view/Window;->clearFlags(I)V

    goto :goto_0
.end method

.method protected updateLayoutForDrawEffectUI()V
    .locals 2

    .prologue
    const/4 v1, 0x4

    .line 15070
    const-string v0, "support_kk_vt_tablet_multiwindow"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 15071
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCallerInfoLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15073
    :cond_0
    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsTabletDevice:Z

    if-eqz v0, :cond_2

    .line 15074
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mCaptureRecordBtnLayout:Landroid/widget/LinearLayout;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setVisibility(I)V

    .line 15079
    :cond_1
    :goto_0
    return-void

    .line 15076
    :cond_2
    const-string v0, "vt_white_theme"

    invoke-static {v0}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 15077
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mMainLayout:Landroid/widget/LinearLayout;

    const/high16 v1, -0x100

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setBackgroundColor(I)V

    goto :goto_0
.end method

.method protected updateNoiseReductionImage()V
    .locals 2

    .prologue
    .line 15083
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mNoiseReductionImage:Landroid/widget/ImageView;

    if-eqz v0, :cond_0

    .line 15084
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    invoke-static {v0}, Lcom/android/phone/PhoneUtils;->isNoiseSuppressionOn(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-boolean v0, p0, Lcom/android/phone/InVTCallScreen;->mIsNoiseSuppressionSupported:Z

    if-eqz v0, :cond_1

    .line 15085
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mNoiseReductionImage:Landroid/widget/ImageView;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 15091
    :cond_0
    :goto_0
    return-void

    .line 15088
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mNoiseReductionImage:Landroid/widget/ImageView;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    goto :goto_0
.end method

.method public updateRecordTimeUIFarEnd(J)V
    .locals 3
    .parameter "recordTimeForNearendOrFarEnd"

    .prologue
    .line 2445
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    if-eqz v0, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_1

    .line 2446
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    sub-long/2addr v1, p1

    invoke-direct {p0, v1, v2}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 2452
    :cond_0
    :goto_0
    return-void

    .line 2448
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    if-eqz v0, :cond_0

    .line 2449
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    sub-long/2addr v1, p1

    invoke-direct {p0, v1, v2}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_0
.end method

.method public updateRecordTimeUINearEnd(J)V
    .locals 3
    .parameter "recordTimeForNearendOrFarEnd"

    .prologue
    .line 2456
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    if-eqz v0, :cond_1

    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->isSurfaceViewSwipe()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_1

    .line 2457
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTimeNearEnd:Landroid/widget/TextView;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    sub-long/2addr v1, p1

    invoke-direct {p0, v1, v2}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    .line 2463
    :cond_0
    :goto_0
    return-void

    .line 2459
    :cond_1
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    if-eqz v0, :cond_0

    .line 2460
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mVideoRecordTime:Landroid/widget/TextView;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    sub-long/2addr v1, p1

    invoke-direct {p0, v1, v2}, Lcom/android/phone/InVTCallScreen;->formatTimeString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V

    goto :goto_0
.end method

.method public updateSimUI()V
    .locals 8

    .prologue
    const v7, 0x7f0a0389

    const v6, 0x7f0a02d1

    const/4 v5, 0x0

    const/4 v4, 0x0

    const/4 v3, 0x1

    .line 15603
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_0

    const-string v0, "updateSimUI()..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15605
    :cond_0
    invoke-virtual {p0}, Lcom/android/phone/InVTCallScreen;->getActionBar()Landroid/app/ActionBar;

    move-result-object v0

    .line 15606
    if-nez v0, :cond_2

    .line 15607
    const-string v0, "updateSimUI():actionBar is null..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15700
    :cond_1
    :goto_0
    return-void

    .line 15610
    :cond_2
    invoke-static {}, Lcom/android/phone/PhoneUtils;->isDualInCallState()Z

    move-result v1

    if-nez v1, :cond_3

    invoke-static {}, Lcom/android/phone/PhoneUtils;->isDualIncomingCall()Z

    move-result v1

    if-eqz v1, :cond_c

    :cond_3
    const-string v1, "support_easy_mode"

    invoke-static {v1}, Lcom/android/phone/PhoneFeature;->hasFeature(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v1

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->isEasyMode(Landroid/content/Context;)Z

    move-result v1

    if-nez v1, :cond_c

    :cond_4
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->app:Lcom/android/phone/PhoneGlobals;

    iget-object v1, v1, Lcom/android/phone/PhoneGlobals;->inVTCallState:Lcom/android/phone/InVTCallState;

    iget-boolean v1, v1, Lcom/android/phone/InVTCallState;->showDialpad:Z

    if-nez v1, :cond_c

    .line 15613
    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v1, :cond_5

    const-string v1, "updateSimUI():draw sim tab..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15615
    :cond_5
    invoke-virtual {v0, v4}, Landroid/app/ActionBar;->getTabAt(I)Landroid/app/ActionBar$Tab;

    move-result-object v1

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->phone1:Lcom/android/internal/telephony/Phone;

    invoke-static {v2}, Lcom/android/phone/PhoneUtils;->getCallerName(Lcom/android/internal/telephony/Phone;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setText(Ljava/lang/CharSequence;)Landroid/app/ActionBar$Tab;

    .line 15616
    invoke-virtual {v0, v4}, Landroid/app/ActionBar;->getTabAt(I)Landroid/app/ActionBar$Tab;

    move-result-object v1

    invoke-static {v3}, Lcom/android/phone/PhoneUtils;->getSimCardIcon(I)I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setIcon(I)Landroid/app/ActionBar$Tab;

    .line 15617
    invoke-virtual {v0, v3}, Landroid/app/ActionBar;->getTabAt(I)Landroid/app/ActionBar$Tab;

    move-result-object v1

    invoke-static {}, Lcom/android/phone/PhoneGlobals;->getInstance()Lcom/android/phone/PhoneGlobals;

    move-result-object v2

    iget-object v2, v2, Lcom/android/phone/PhoneGlobals;->phone2:Lcom/android/internal/telephony/Phone;

    invoke-static {v2}, Lcom/android/phone/PhoneUtils;->getCallerName(Lcom/android/internal/telephony/Phone;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setText(Ljava/lang/CharSequence;)Landroid/app/ActionBar$Tab;

    .line 15618
    invoke-virtual {v0, v3}, Landroid/app/ActionBar;->getTabAt(I)Landroid/app/ActionBar$Tab;

    move-result-object v1

    const/4 v2, 0x2

    invoke-static {v2}, Lcom/android/phone/PhoneUtils;->getSimCardIcon(I)I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/app/ActionBar$Tab;->setIcon(I)Landroid/app/ActionBar$Tab;

    .line 15619
    invoke-virtual {v0}, Landroid/app/ActionBar;->show()V

    .line 15620
    iput-boolean v3, p0, Lcom/android/phone/InVTCallScreen;->mIsSimTabUIUpdate:Z

    .line 15621
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v1

    if-ne v1, v3, :cond_6

    .line 15622
    const-string v1, "updateSimUI()...actionBar.getTabAt(1).select()"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15623
    invoke-virtual {v0, v3}, Landroid/app/ActionBar;->getTabAt(I)Landroid/app/ActionBar$Tab;

    move-result-object v1

    invoke-virtual {v1}, Landroid/app/ActionBar$Tab;->select()V

    .line 15628
    :goto_1
    iput-boolean v4, p0, Lcom/android/phone/InVTCallScreen;->mIsSimTabUIUpdate:Z

    .line 15630
    iget v1, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    if-nez v1, :cond_7

    .line 15631
    invoke-virtual {v0}, Landroid/app/ActionBar;->getHeight()I

    move-result v0

    iput v0, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    .line 15632
    iget v0, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    if-nez v0, :cond_7

    .line 15634
    const-string v0, "updateSimUI():actionBar.getHeight() is 0. request update again.."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15635
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mHandler:Landroid/os/Handler;

    const/16 v1, 0xbe

    const-wide/16 v2, 0x12c

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    goto/16 :goto_0

    .line 15625
    :cond_6
    const-string v1, "updateSimUI()...actionBar.getTabAt(0).select()"

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15626
    invoke-virtual {v0, v4}, Landroid/app/ActionBar;->getTabAt(I)Landroid/app/ActionBar$Tab;

    move-result-object v1

    invoke-virtual {v1}, Landroid/app/ActionBar$Tab;->select()V

    goto :goto_1

    .line 15640
    :cond_7
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 15641
    if-eqz v0, :cond_8

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    if-nez v1, :cond_8

    .line 15642
    invoke-virtual {v0}, Landroid/widget/LinearLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    .line 15643
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget v2, v2, Landroid/view/ViewGroup$LayoutParams;->height:I

    iget v3, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    sub-int/2addr v2, v3

    iput v2, v1, Landroid/view/ViewGroup$LayoutParams;->height:I

    .line 15644
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 15645
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_8

    const-string v0, "updateSimUI():surfacelayout was resized..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15648
    :cond_8
    const v0, 0x7f0a038a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/FrameLayout;

    .line 15649
    if-eqz v0, :cond_9

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    if-nez v1, :cond_9

    .line 15650
    invoke-virtual {v0}, Landroid/widget/FrameLayout;->getLayoutParams()Landroid/view/ViewGroup$LayoutParams;

    move-result-object v1

    iput-object v1, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    .line 15651
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget v2, v2, Landroid/view/ViewGroup$LayoutParams;->height:I

    iget v3, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    sub-int/2addr v2, v3

    iput v2, v1, Landroid/view/ViewGroup$LayoutParams;->height:I

    .line 15652
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    invoke-virtual {v0, v1}, Landroid/widget/FrameLayout;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 15653
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_9

    const-string v0, "updateSimUI():recordinglayout was resized..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15657
    :cond_9
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    .line 15658
    if-eqz v0, :cond_b

    .line 15659
    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v1, :cond_a

    const-string v1, "updateSimUI():hide SIM Icon.."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15660
    :cond_a
    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setVisibility(I)V

    .line 15664
    :cond_b
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    if-eqz v0, :cond_1

    .line 15665
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    invoke-virtual {v0}, Landroid/app/AlertDialog;->dismiss()V

    .line 15666
    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->mDuosSwitchCallDialog:Landroid/app/AlertDialog;

    goto/16 :goto_0

    .line 15670
    :cond_c
    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v1, :cond_d

    const-string v1, "updateSimUI():hide sim tab..."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15672
    :cond_d
    invoke-virtual {v0}, Landroid/app/ActionBar;->hide()V

    .line 15674
    invoke-virtual {p0, v7}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/LinearLayout;

    .line 15675
    if-eqz v0, :cond_e

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    if-eqz v1, :cond_e

    .line 15676
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget v2, v2, Landroid/view/ViewGroup$LayoutParams;->height:I

    iget v3, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    add-int/2addr v2, v3

    iput v2, v1, Landroid/view/ViewGroup$LayoutParams;->height:I

    .line 15677
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    invoke-virtual {v0, v1}, Landroid/widget/LinearLayout;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 15678
    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->surfacelayout_param:Landroid/view/ViewGroup$LayoutParams;

    .line 15679
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_e

    const-string v0, "updateSimUI():surfacelayout was recovered..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15682
    :cond_e
    const v0, 0x7f0a038a

    invoke-virtual {p0, v0}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/FrameLayout;

    .line 15683
    if-eqz v0, :cond_f

    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    if-eqz v1, :cond_f

    .line 15684
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget-object v2, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    iget v2, v2, Landroid/view/ViewGroup$LayoutParams;->height:I

    iget v3, p0, Lcom/android/phone/InVTCallScreen;->actionbarHeight:I

    add-int/2addr v2, v3

    iput v2, v1, Landroid/view/ViewGroup$LayoutParams;->height:I

    .line 15685
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    invoke-virtual {v0, v1}, Landroid/widget/FrameLayout;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V

    .line 15686
    iput-object v5, p0, Lcom/android/phone/InVTCallScreen;->recordinglayout_param:Landroid/view/ViewGroup$LayoutParams;

    .line 15687
    sget-boolean v0, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v0, :cond_f

    const-string v0, "updateSimUI():recordinglayout was recovered..."

    invoke-direct {p0, v0}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15691
    :cond_f
    invoke-virtual {p0, v6}, Lcom/android/phone/InVTCallScreen;->findViewById(I)Landroid/view/View;

    move-result-object v0

    check-cast v0, Landroid/widget/ImageView;

    .line 15692
    if-eqz v0, :cond_1

    .line 15693
    sget-boolean v1, Lcom/android/phone/InVTCallScreen;->DBG:Z

    if-eqz v1, :cond_10

    const-string v1, "updateSimUI():Show SIM Icon.."

    invoke-direct {p0, v1}, Lcom/android/phone/InVTCallScreen;->log(Ljava/lang/String;)V

    .line 15694
    :cond_10
    iget-object v1, p0, Lcom/android/phone/InVTCallScreen;->mPhone:Lcom/android/internal/telephony/Phone;

    invoke-interface {v1}, Lcom/android/internal/telephony/Phone;->getPhoneIndex()I

    move-result v1

    add-int/lit8 v1, v1, 0x1

    invoke-static {v1}, Lcom/android/phone/PhoneUtils;->getSimCardIcon(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ImageView;->setImageResource(I)V

    .line 15695
    invoke-virtual {v0, v4}, Landroid/widget/ImageView;->setVisibility(I)V

    goto/16 :goto_0
.end method

.method protected updateSpeakerButton()V
    .locals 2

    .prologue
    .line 14263
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    if-eqz v0, :cond_0

    .line 14264
    iget-object v0, p0, Lcom/android/phone/InVTCallScreen;->mSpk:Landroid/widget/ToggleButton;

    invoke-static {p0}, Lcom/android/phone/PhoneUtils;->isSpeakerOn(Landroid/content/Context;)Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/widget/ToggleButton;->setChecked(Z)V

    .line 14265
    :cond_0
    return-void
.end method
